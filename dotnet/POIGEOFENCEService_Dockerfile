#See https://aka.ms/containerfastmode to understand how Visual Studio uses this Dockerfile to build your images for faster debugging.

FROM mcr.microsoft.com/dotnet/core/aspnet:3.1-buster-slim AS base
WORKDIR /app
EXPOSE 80

FROM mcr.microsoft.com/dotnet/core/sdk:3.1-buster AS build
WORKDIR /src
COPY ["businessservices/net.atos.daf.ct2.poigeofenceservice/net.atos.daf.ct2.poigeofenceservice.csproj", "businessservices/net.atos.daf.ct2.poigeofenceservice/"]
COPY ["corecomponents/net.atos.daf.ct2.poigeofence/net.atos.daf.ct2.poigeofence.csproj", "corecomponents/net.atos.daf.ct2.poigeofence/"]
COPY ["commoncomponent/net.atos.daf.ct2.data/net.atos.daf.ct2.data.csproj", "commoncomponent/net.atos.daf.ct2.data/"]
COPY ["commoncomponent/net.atos.daf.ct2.audit/net.atos.daf.ct2.audit.csproj", "commoncomponent/net.atos.daf.ct2.audit/"]
COPY ["commoncomponent/net.atos.daf.ct2.utilities/net.atos.daf.ct2.utilities.csproj", "commoncomponent/net.atos.daf.ct2.utilities/"]
RUN dotnet restore "businessservices/net.atos.daf.ct2.poigeofenceservice/net.atos.daf.ct2.poigeofenceservice.csproj"
COPY . .
WORKDIR "/src/businessservices/net.atos.daf.ct2.poigeofenceservice"
RUN dotnet build "net.atos.daf.ct2.poigeofenceservice.csproj" -c Release -o /app/build

FROM build AS publish
RUN dotnet publish "net.atos.daf.ct2.poigeofenceservice.csproj" -c Release -o /app/publish

FROM base AS final
WORKDIR /app
COPY --from=publish /app/publish .
ENTRYPOINT ["dotnet", "net.atos.daf.ct2.poigeofenceservice.dll"]