
syntax = "proto3";
import "google/protobuf/wrappers.proto";
option csharp_namespace = "net.atos.daf.ct2.reportservice";

package report;

service ReportService{
rpc GetUserPreferenceReportDataColumn (IdRequest) returns (UserPreferenceDataColumnResponse);
rpc CreateUserPreference (UserPreferenceCreateRequest) returns (UserPreferenceCreateResponse);
rpc GetVinsFromTripStatisticsWithVehicleDetails (VehicleListRequest) returns (VehicleListAndDetailsResponse);
rpc GetFilteredTripDetails (TripFilterRequest) returns (TripResponse);
rpc GetDriversActivity (ActivityFilterRequest) returns (DriverActivityResponse);
rpc GetDriverActivity (SingleDriverActivityFilterRequest) returns (DriverActivityResponse);
rpc GetDriverActivityChartDetails (DriverActivityChartFilterRequest) returns (DriverActivityChartResponse);
rpc GetReportDetails (TempPara) returns (ReportDetailsResponse);
rpc GetDriverActivityParameters (IdRequestForDriverActivity) returns (DriverListAndVehicleDetailsResponse);
rpc CreateEcoScoreProfile (CreateEcoScoreProfileRequest) returns (CreateEcoScoreProfileResponse);
rpc GetEcoScoreProfiles (GetEcoScoreProfileRequest) returns (GetEcoScoreProfileResponse);
rpc GetEcoScoreProfileKPIDetails (GetEcoScoreProfileKPIRequest) returns (GetEcoScoreProfileKPIResponse);
rpc UpdateEcoScoreProfile (UpdateEcoScoreProfileRequest) returns (UpdateEcoScoreProfileResponse);
rpc DeleteEcoScoreProfile (DeleteEcoScoreProfileRequest) returns (DeleteEcoScoreProfileResponse);
rpc GetReportSearchParameter (IdRequestForDriverActivity) returns (ReportSearchParameterResponse);
rpc GetFleetUtilizationDetails (FleetUtilizationFilterRequest) returns (FleetUtilizationDetailsResponse);
rpc GetFleetCalenderDetails (FleetUtilizationFilterRequest) returns (FleetUtilizationCalenderResponse);
rpc GetFleetFuelDetailsForVehicleGraphs(FleetFuelFilterRequest) returns (FleetFuelGraphsResponse);
rpc GetFleetFuelDetailsForDriverGraphs(FleetFuelFilterRequest) returns (FleetFuelGraphsResponse);
rpc GetEcoScoreReportByAllDrivers (GetEcoScoreReportByAllDriversRequest) returns (GetEcoScoreReportByAllDriversResponse);
rpc GetReportUserPreference (GetReportUserPreferenceRequest) returns (GetReportUserPreferenceResponse);
rpc CreateReportUserPreference (ReportUserPreferenceCreateRequest) returns (ReportUserPreferenceCreateResponse);
rpc GetFleetOverviewFilter (FleetOverviewFilterIdRequest) returns (FleetOverviewFilterResponse);
rpc GetFleetFuelDetailsByVehicle(FleetFuelFilterRequest) returns (FleetFuelDetailsResponse);
rpc GetFleetFuelDetailsByDriver(FleetFuelFilterRequest) returns (FleetFuelDetailsByDriverResponse);
rpc GetEcoScoreReportCompareDrivers (GetEcoScoreReportCompareDriversRequest) returns (GetEcoScoreReportCompareDriversResponse);
rpc GetFleetOverviewDetails(FleetOverviewDetailsRequest) returns (FleetOverviewDetailsResponse);
rpc GetVehicleHealthReport (VehicleHealthReportRequest) returns (VehicleHealthStatusListResponse);
rpc GetFleetFuelTripDetailsByVehicle(FleetFuelFilterRequest) returns (FleetFuelDetailsResponse);
rpc GetFleetFuelTripDetailsByDriver(FleetFuelFilterDriverRequest) returns (FleetFuelDetailsResponse);
rpc GetFilteredFuelDeviation (FuelDeviationFilterRequest) returns (FuelDeviationResponse);
rpc GetFuelDeviationCharts (FuelDeviationFilterRequest) returns (FuelDeviationChartResponse);
rpc GetLogbookSearchParameter (LogbookFilterIdRequest) returns (LogbookFilterResponse);
rpc GetLogbookDetails(LogbookDetailsRequest) returns (LogbookDetailsResponse);
rpc GetFuelBenchmarkByVehicleGroup (FuelBenchmarkRequest) returns (FuelBenchmarkResponse);
rpc GetFuelBenchmarkByTimePeriod (FuelBenchmarkTimePeriodRequest) returns (FuelBenchmarkResponse);
rpc GetEcoScoreReportSingleDriver (GetEcoScoreReportSingleDriverRequest) returns (GetEcoScoreReportSingleDriverResponse);
rpc GetAssociatedVehiclGroup (VehicleListRequest) returns (AssociatedVehicleResponse);
rpc GetEcoScoreReportTrendlines (GetEcoScoreReportSingleDriverRequest) returns (GetEcoScoreReportTrendlinesResponse);
rpc GetVehiclePerformanceChartTemplate(VehPerformanceRequest) returns (VehPerformanceResponse);
rpc GetVehPerformanceBubbleChartData(BubbleChartDataRequest) returns (BubbleChartDataResponse);
rpc GetVehPerformanceType(VehPerformanceTypeRequest) returns (VehPerformanceTypeResponse);
}

message VehicleHealthReportRequest{
 string VIN = 1;
 string TripId=2; 
 string WarningType = 4;
 string LngCode =5;
  int32 AccountId = 6;
    int32 OrganizationId = 7;
}

message  VehicleHealthStatusResponse{
string VehicleRegNo =1;
string VehicleName =2;
/*int32 LctsId =3;
string LctsTripId =4;
string LctsVin =5;
int64 LctsTripStartTime =6;
int64 LctsTripEndTime =7;
string LctsDriver1Id =8;
int32 LctsTripDistance =9;
int64 LctsDrivingTime =10;
int32 LctsFuelConsumption =11;
string LctsVehicleDrivingStatustype =12;
int64 LctsOdometerVal =13;
int64 LctsDistanceUntilNextService =14;
double LctsLatestReceivedPositionLattitude =15;
double LctsLatestReceivedPositionLongitude =16;
double LctsLatestReceivedPositionHeading =17;
double LctsStartPositionLattitude =18;
double LctsStartPositionLongitude =19;
double LctsStartPositionHeading =20;
int64 LctsLatestProcessedMessageTimestamp =21;
string LctsVehicleHealthStatusType =22;
int32 LctsLatestWrningClass =23;
int32 LctsLatestWarningNumber =24;
string LctsLatestWarningType =25;
int64 LctsLatestWarningTimestamp =26;
double LctsLatestWarningPositionLatitude =27;
double LctsLatestWarningPositionLongitude =28;
int32 LatgeoaddLatestGeolocationAddressId =29;
string LatgeoaddLatestGeolocationAddress =30;
int32 StageoaddStartGeolocationAddressId =31;
 string StageoaddStartGeolocationAddress =32;
 int32 WangeoaddLatestWarningGeolocationAddressId=33;
 string WangeoaddLatestWarningGeolocationAddress =34;*/
int32 WarningId =35;
string DriverName =36;
string WarningTripId =37;
string WarningVin =38;
int64 WarningTimetamp =39;
int32 WarningClass =40;
int32 WarningNumber =41;
double WarningLat =42;
double WarningLng =43;
double WarningHeading =44;
string WarningVehicleHealthStatusType =45;
string WarningVehicleDrivingStatusType =46;
string WarningDrivingId =47;
string WarningType =48;
int64 WarningDistanceUntilNectService =49;
int64 WarningOdometerVal =50;
int64 WarningLatestProcessedMessageTimestamp =51;
string WarningName = 52;//from dtcwarning table
string WarningAdvice =53;
string WarningAddress=54;
int32 WarningAddressId=55;
bytes Icon =56;
string IconName=57;
string ColorName=58;
int32 IconId=59;
 
         
}

message VehicleHealthStatusListResponse{
repeated VehicleHealthStatusResponse healthStatus =1;
Responsecode Code = 2;
string Message = 3;
}

enum Responsecode{
  None = 0;
  Success = 200;
  Failed = 400;
  Forbidden = 403;
  Conflict = 409;
  NotFound = 404;
  InternalServerError = 500;
}
message TempPara {
  int32 TempID = 1;
}
message ReportDetailsResponse {
    repeated ReportDetails ReportDetails = 1;
    Responsecode Code = 2;
    string message = 3; 
}

message ReportDetails {
    int32 Id = 1;
    string Name = 2;
    string Key = 3;
}

message IdRequest {
  int32 ReportId = 1;
  int32 AccountId=2;
  int32 RoleId=3;
  int32 OrganizationId=4;
  int32 ContextOrgId=5; 
}

message UserPreferenceDataColumn{
    int32 DataAtrributeId =1;
    string Name=2;
    string Description = 3;
    string Type = 4;
    string ReportReferenceType = 5;
    string Key =6;
    string State=7;
    string ChartType = 8;
    string ThresholdType = 9;
    double ThresholdValue = 10;
}

message UserPreferenceDataColumnResponse{
    repeated UserPreferenceDataColumn UserPreferences = 1;
    Responsecode Code = 2;
    string Message = 3;
}

message UserPreferenceCreateRequest{
 repeated Atribute AtributesShowNoShow =1;
   int32 AccountId =2;
  int32 ReportId =3;
  int32 OrganizationId =4;
  int64 CreatedAt =6;
  int64 ModifiedAt =7;  
}

message GetReportUserPreferenceRequest {
    int32 ReportId = 1;
    int32 AccountId=2;
    int32 RoleId=3;
    int32 OrganizationId=4;
    int32 ContextOrgId=5; 
    repeated SessionFeatures UserFeatures =6;
}


message SessionFeatures {
    int32 FeatureId=1;
    string Name=2;
}

message GetReportUserPreferenceResponse {
    ReportUserPreference UserPreference = 1;
    Responsecode Code = 2;
    string Message = 3;
    int32 TargetProfileId=4;
}

message ReportUserPreference{
    int32 DataAttributeId=1;
    string Name=2;
    string Key=3;
    string State=4;
    string ChartType=5;
    string ThresholdType=6;
    double ThresholdValue=7;
    repeated ReportUserPreference SubReportUserPreferences=8;
}

message ReportUserPreferenceCreateRequest{
    repeated UserPreferenceAttribute Attributes=1;
    int32 AccountId=2;
    int32 ReportId=3;
    int32 OrganizationId=4;
}

message ReportUserPreferenceCreateResponse{
    Responsecode Code = 1;
    string Message = 2;
}

message Atribute{
  int32 DataAttributeId = 1;
  string State = 2;
  string Type = 3;
  string CharType = 4;
  string ThresholdType = 5;
  double ThresholdValue = 6;
}

message UserPreferenceAttribute {
    int32 DataAttributeId = 1;
    int32 State = 2;
    int32 Type = 3;
    int32 ChartType = 4;
    int32 ThresholdType = 5;
    double ThresholdValue = 6;
}

message UserPreferenceCreateResponse{
    Responsecode Code = 1;
    string Message = 2;
}

message VehicleFilterRequest{
int64 FromDate = 1;
int64 ToDate = 2;
repeated string VinList = 3;
}

// Start Trip Report Table
message TripFilterRequest{
    int64 StartDateTime = 1;
    int64 EndDateTime = 2;
    string VIN = 3;

}

message TripResponse {
    repeated TripDetails TripData=1;   
    Responsecode code = 2;
    string message = 3;
}
message TripDetails {
    int32 Id =1;
    string TripId=2;
    string VIN=3;
    int64 StartTimeStamp=4;
    int64 EndTimeStamp=5; 
    int32 Distance=6; 
    int32 IdleDuration=7;
    
    double AverageSpeed=8;
    double AverageWeight=9;
    int64 Odometer=10;
    string StartPosition =11;
    string EndPosition=12;
    double FuelConsumed=13;
    int64 DrivingTime =14;
    int32 Alert =15;
    int32 Events=16;
    double FuelConsumed100km=17;

    repeated LiveFleetPosition LiveFleetPosition=18;

    double StartPositionLattitude=19;
    double StartPositionLongitude=20;
    double EndPositionLattitude=21;
    double EndPositionLongitude=22;
    string RegistrationNo =23;
    string VehicleName=24;
}
message LiveFleetPosition {
    double GpsAltitude=1;
    double GpsHeading=2; 
    double GpsLatitude=3;
    double GpsLongitude=4; 
    double Fuelconsumtion=6;
    double Co2emission=7;
    int32 Id=5;
}
// End Trip Report Table

//Start Vehicle Visibility and Trip filtered records

message VehicleDetailsWithAccountVisibilty {
int32 VehicleGroupId = 1;
int32 AccountId = 2;
string ObjectType = 3;
string GroupType = 4;
string FunctionEnum = 5;
int32 OrganizationId = 6;
string AccessType = 7;
string VehicleGroupName = 8;
int32 VehicleId = 9;
string VehicleName = 10;
string Vin = 11;
string RegistrationNo = 12;
}

message VehicleFromTripDetails {
string Vin = 1;
int64 StartTimeStamp=2;
int64 EndTimeStamp=3;
}

message VehicleListAndDetailsResponse{
Responsecode Code = 1;
string Message = 2;
repeated VehicleFromTripDetails VinTripList = 3;
repeated VehicleDetailsWithAccountVisibilty VehicleDetailsWithAccountVisibiltyList = 4;
}

message VehicleListRequest{
int32 AccountId = 3;
int32 OrganizationId = 4;
}
//End Vehicle Visibility and Trip filtered records

// Start Driver Time Managment Report
message SingleDriverActivityFilterRequest {
    int64 StartDateTime = 1;
    int64 EndDateTime = 2;
    string VIN = 3;
    string DriverId = 4;
}
message ActivityFilterRequest {
    int64 StartDateTime = 1;
    int64 EndDateTime = 2;
    repeated string VINs = 3;
    repeated string DriverIds = 4;
}
message DriverActivityChartFilterRequest {
    int64 StartDateTime = 1;
    int64 EndDateTime = 2;
    string DriverId = 3;
}

message DriverActivityResponse {
    repeated DriverActivity DriverActivities = 1;   
    Responsecode code = 2;
    string message = 3;
}
message DriverActivity {
    string DriverId = 1;
    string DriverName = 2;
    string VIN = 3;
    int64 ActivityDate = 4;
    int64 StartTime = 5;
    int64 EndTime = 6;
    int32 Code = 7; 
    int64 RestTime = 8;
    int64 AvailableTime = 9;
    int64 WorkTime = 10;
    int64 DriveTime = 11;
    int64 ServiceTime = 12;
}
message DriverActivityChartResponse {
    repeated DriverActivityChartData DriverActivitiesChartData = 1;   
    Responsecode code = 2;
    string message = 3;
}
message DriverActivityChartData {
    int64 ActivityDate = 1;
    int32 Code = 2; 
    int64 Duration = 3;
    int64 StartTime = 4;
    int64 EndTime = 5;
}
message DriverListAndVehicleDetailsResponse{
Responsecode Code = 1;
string Message = 2;
repeated VehicleFromDriverTimeDetails DriverList = 3;
repeated VehicleDetailsWithAccountVisibilty VehicleDetailsWithAccountVisibiltyList = 4;
}

message VehicleFromDriverTimeDetails {
google.protobuf.StringValue Vin = 1;
google.protobuf.StringValue DriverID=2;
google.protobuf.StringValue FirstName=3;
google.protobuf.StringValue LastName=4;
int64 ActivityDateTime=5;
}

message IdRequestForDriverActivity {
  int32 ReportId = 1;
  int32 AccountId=2;
  int32 OrganizationId=3;
  int64 StartDateTime = 4;
  int64 EndDateTime = 5; 
  }

message ReportSearchParameterResponse {
Responsecode Code = 1;
string Message = 2;
repeated SearchParameter AdditionalSearchParameter  = 3;
repeated VehicleDetailsWithAccountVisibilty VehicleDetailsWithAccountVisibiltyList = 4;
}


message SearchParameter {
string DriverId = 1;
string VIN = 2;
string PerformanceType = 3;
}


// End   Driver Time Managment Report

message CreateEcoScoreProfileRequest {
  string Name = 1;
  string Description = 2;
  bool IsDAFStandard = 3;
  int32 OrgId = 4;
  int32 AccountId = 5;
  repeated CreateEcoScoreProfileKPI ProfileKPIs = 6;
}

message CreateEcoScoreProfileKPI {
  int32 KPIId = 1;
  double LimitValue = 2;
  double TargetValue = 3;
  double LowerValue = 4;
  double UpperValue = 5;
  string LimitType =6;
}

message CreateEcoScoreProfileResponse {
  Responsecode Code = 1;
  string Message = 2;
}

// START : Get EcoScore Profile Details
message GetEcoScoreProfileRequest {
  int32 OrgId = 1;
}

message GetEcoScoreProfileResponse {
  Responsecode Code = 1;
  string Message = 2;
 repeated EcoScoreProfiles Profiles = 3;
}

message EcoScoreProfiles {
 int32 ProfileId = 1; 
 string ProfileName = 2;
 string ProfileDescription = 3;
 bool IsDeleteAllowed = 4;
 int32 OrganizationId = 5;
}

message GetEcoScoreProfileKPIRequest {
  int32 ProfileId = 1;
}

message GetEcoScoreProfileKPIResponse {
  Responsecode Code = 1;
  string Message = 2;
  repeated EcoScoreProfileDetails Profile = 3;
}

message EcoScoreProfileDetails {
 int32 ProfileId = 1; 
 string ProfileName = 2;
 string ProfileDescription = 3;
 int64 LastUpdate = 4; 
 string UpdatedBy = 5;
 repeated EcoScoreProfileKPIs ProfileSection = 6;
}

message EcoScoreProfileKPIs {
int32 SectionId = 1;
string SectionName = 2;
string SectionDescription = 3;
repeated EcoScoreKPI ProfileKPIDetails = 4;
}

message EcoScoreKPI{
int32 EcoScoreKPIId = 1; 
string KPIName = 2; 
string LimitType = 3; 
double LimitValue = 4; 
double TargetValue = 5; 
double LowerValue = 6; 
double UpperValue = 7; 
string RangeValueType = 8; 
double MaxUpperValue = 9; 
int32 SequenceNo = 10; 
}

// END : Get EcoScore Profile Details

message UpdateEcoScoreProfileRequest {
  int32 ProfileId = 1;
  string Name = 2;
  string Description = 3;
  bool IsDAFStandard = 4;
  int32 OrgId = 5;
  int32 AccountId = 6;
  repeated CreateEcoScoreProfileKPI ProfileKPIs = 7;
}
message UpdateEcoScoreProfileResponse {
  Responsecode Code = 1;
  string Message = 2;
}
message DeleteEcoScoreProfileRequest
{
 int32 ProfileId = 1;
}
message DeleteEcoScoreProfileResponse
{
  Responsecode Code = 1;
  string Message = 2;
}

// Start Fleet Utilization Report
message FleetUtilizationFilterRequest {
    int64 StartDateTime = 1;
    int64 EndDateTime = 2;
    repeated string VINs = 3;
}

message FleetUtilizationDetailsResponse {
    repeated FleetUtilizationDetails FleetDetails = 1;   
    Responsecode code = 2;
    string message = 3;
}

message FleetUtilizationCalenderResponse {
    repeated FleetUtilizationcalender CalenderDetails = 1;   
    Responsecode code = 2;
    string message = 3;
}

message FleetUtilizationDetails {
    string VehicleName = 1;
    string VIN = 2;
    string RegistrationNumber = 3;
    double Distance = 4;
    int32 NumberOfTrips  = 5;
    int64 TripTime = 6;
    int64 DrivingTime = 7;
    int64 IdleDuration = 8;
    int64 StopTime = 9;
    double AverageDistancePerDay = 10;
    double AverageSpeed = 11;
    double AverageWeightPerTrip = 12;
    int64 Odometer = 13;
    int32 VehicleActiveDays =14;
}

message FleetUtilizationcalender {
    string VehicleName = 1;
    string VIN = 2;
    int64 CalenderDate = 3;
    double Averagedistance = 4;
    double Averagetriptime  = 5;
    double Averagedrivingtime = 6;
    double Averageidleduration = 7;
    double Averagedistanceperday = 8;
    double AverageSpeed = 9;
    double Averageweight=12;
    int32 Vehiclecount =10;
    int32 Tripcount =11;

   

}

// END Fleet Utilization Report

/// START: Eco Score Report By All Drivers
message GetEcoScoreReportByAllDriversRequest {
  int64 StartDateTime = 1;
  int64 EndDateTime = 2; 
  repeated string VINs = 3;
  double MinTripDistance = 4;
  double MinDriverTotalDistance = 5;
  int32 OrgId = 6;
  int32 AccountId = 7;
  int32 TargetProfileId = 8;
  int32 ReportId = 9;
  }

 message EcoScoreReportDriversRanking {
  int32 Ranking = 1;
  string DriverName = 2; 
  string DriverId = 3;
  double EcoScoreRanking = 4;
  string EcoScoreRankingColor = 5;  
  }
  
  message GetEcoScoreReportByAllDriversResponse {
  Responsecode Code = 1;
  string Message = 2;
  repeated EcoScoreReportDriversRanking DriverRanking = 3;
  }
  /// END: Eco Score Report By All Drivers

  /// START: FleetOverview

message FleetOverviewFilterIdRequest {
  int32 AccountId = 1;
  int32 OrganizationId = 2;
  int32 RoleId = 3;
}

message AssociatedVehicleRequest {
		 int32 VehicleGroupId =  1;
         string VehicleGroupName =  2;
         int32 VehicleId =  3;
         string VehicleName =  4;
         string Vin =  5;
         string RegistrationNo =  6;
         string VehicleGroupDetails =  7;
}

message FilterResponse {
		 string Name =  1;
         string Value =  2;
}

message AlertCategoryFilterResponse {
		 string Name =  1;
         string Value =  2;
}

message FleetOverviewFilterResponse {
  repeated AssociatedVehicleRequest AssociatedVehicleRequest = 1;
  repeated FilterResponse ALFilterResponse = 2;
  repeated AlertCategoryFilterResponse ACFilterResponse = 3;
  repeated FilterResponse HSFilterResponse = 4;
  repeated FilterResponse OFilterResponse = 5;
  repeated FleetOverviewVGFilterRequest FleetOverviewVGFilterResponse = 6;
  Responsecode code = 7;
  string message = 8;
  repeated DriverListResponse DriverList = 9;
  repeated LogbookTripAlertDetailsRequest LogbookTripAlertDetailsRequest =10;
}

message FleetOverviewVGFilterRequest {
    int32 VehicleGroupId =  1;
    int32 VehicleId =  2;
    string FeatureName =  3;
    string FeatureKey =  4;
    bool Subscribe =  5;
    string VehicleGroupName =  6;
}

message DriverListResponse {
		 string DriverId =  1;
         string FirstName =  2;
         string LastName =  3;
         int32 OrganizationId =  4;
}

message FleetOverviewDetailsRequest {
    repeated string GroupIds =1;
    repeated string AlertLevels =2;
    repeated string AlertCategories =3;
    repeated string HealthStatus =4;
    repeated string OtherFilters =5;
    repeated string DriverIds =6;
    int32 Days =7;
    int32 AccountId = 8;
    int32 OrganizationId = 9;
    int32 RoleId = 10;
    string LanguageCode = 11;
}

message FleetOverviewDetails
{
	int32 Id=1;
	string TripId=2;
	string Vin=3;
	int64 StartTimeStamp=4;
	int64 EndTimeStamp=5;
	string Driver1Id=6;
	int32 TripDistance=7;
	int64 DrivingTime=8;
	int32 FuelConsumption=9;
	string VehicleDrivingStatusType=10;
	int64 OdometerVal=11;
	int64 DistanceUntilNextService=12;
	double LatestReceivedPositionLattitude=13;
	double LatestReceivedPositionLongitude=14;
	double LatestReceivedPositionHeading=15;
	double StartPositionLattitude=16;
	double StartPositionLongitude=17;
	double StartPositionHeading=18;
	int64 LatestProcessedMessageTimeStamp=19;
	string VehicleHealthStatusType=20;
	int32 LatestWarningClass=21;
	int32 LatestWarningNumber=22;
	string LatestWarningType=23;
	int64 LatestWarningTimestamp=24;
	double LatestWarningPositionLatitude=25;
	double LatestWarningPositionLongitude=26;
	string Vid=27;
	string RegistrationNo=28;
	string DriverName=29;	
	int32 LatestGeolocationAddressId=30;
	string LatestGeolocationAddress=31;
	int32 StartGeolocationAddressId=32;
	string StartGeolocationAddress=33;
	int32 LatestWarningGeolocationAddressId=34;
	string LatestWarningGeolocationAddress=35;
	string LatestWarningName=36;
    repeated LiveFleetPosition LiveFleetPosition=37;
    repeated FleetOverviewAlert FleetOverviewAlert=38;
    string VehicleName =39;
}

message FleetOverviewDetailsResponse {
    repeated FleetOverviewDetails FleetOverviewDetailList= 1;   
    Responsecode Code = 2;
    string Message = 3;
}

message FleetOverviewAlert {
    string Name=1;
    string Type=2; 
    int64   Time=3; 
    string Level=4;
    string CategoryType=5;
    double Latitude=6;
    double Longitude=7;
    int32 Id=8;
    int32 GeolocationAddressId=9;
	string GeolocationAddress=10;
    int32 AlertId=11;
}
/// END: FleetOverview

/// START Fleet Fuel Report

message FleetFuelFilterRequest {
    int64 StartDateTime = 1;
    int64 EndDateTime = 2;
    repeated string VINs = 3;
    string LanguageCode = 4;
}
message FleetFuelFilterDriverRequest {
    int64 StartDateTime = 1;
    int64 EndDateTime = 2;
    string VIN = 3;
    string DriverId = 4;
}
message FleetFuelDetailsResponse {
    repeated FleetFuelDetails FleetFuelDetails = 1;   
    Responsecode code = 2;
    string message = 3;
}
message FleetFuelDetailsByDriverResponse {
    repeated FleetFuelDetailsByDriver FleetFuelDetails = 1;   
    Responsecode code = 2;
    string message = 3;
}
message FleetFuelGraphsResponse {
    repeated FleetFuelGraphs FleetfuelGraph = 1;   
    Responsecode code = 2;
    string message = 3;
}

message FleetFuelGraphs {
        int64 VehicleID = 1;
        string VIN = 2;
        int64 NumberofTrips = 3;
        double FuelConsumed = 4;
        double Co2Emission = 5;
        double Distance = 6;
        double FuelConsumtion = 7;
        double IdleDuration = 8;
        double Date = 9;
}
message FleetFuelDetails {
    google.protobuf.StringValue VehicleName = 1;
    google.protobuf.StringValue VIN = 2;
    google.protobuf.StringValue VehicleRegistrationNo = 3;
     int64 Id=53;
    string TripId=54;
    int64 Distance = 4;
    int64 AverageDistancePerDay = 5;
    double AverageSpeed = 6;
    int32 MaxSpeed = 7;
    int32 NumberOfTrips = 8;
    double AverageGrossWeightComb = 9;
    double FuelConsumed = 10;
    double FuelConsumption = 11;
    double CO2Emission = 12;
    double IdleDuration = 13;
    double PTODuration = 14;
    double HarshBrakeDuration = 15;
    double HeavyThrottleDuration = 16;
    double CruiseControlDistance30_50 = 17;
    double CruiseControlDistance50_75 = 18;
    double CruiseControlDistance75 = 19;
    double AverageTrafficClassification = 20;
    double CCFuelConsumption = 21;
    double FuelconsumptionCCnonactive = 22;
    int32 IdlingConsumption = 23;
    double DPAScore = 24;
    google.protobuf.StringValue DPAAnticipationScore = 25;
    google.protobuf.StringValue DPABrakingScore = 26;
    google.protobuf.StringValue IdlingPTOScore = 27;
    google.protobuf.StringValue IdlingPTO = 28;
    google.protobuf.StringValue IdlingWithoutPTO = 29;
    google.protobuf.StringValue IdlingWithoutPTOpercent = 30;
    google.protobuf.StringValue FootBrake = 31;
    google.protobuf.StringValue CO2Emmision = 32;
    google.protobuf.StringValue AverageTrafficClassificationValue = 33;
    google.protobuf.StringValue IdlingConsumptionValue = 34;
    google.protobuf.StringValue DriverID = 35;
    google.protobuf.StringValue DriverName = 36;
    int64 StartDate = 37;
    int64 EndDate = 38;
    double Startpositionlattitude= 40;
    double Startpositionlongitude =41;
    double Endpositionlattitude = 42;
    double endpositionlongitude=44;
    repeated LiveFleetPosition LiveFleetPosition=39;
    int64 CCFuelDistance = 45;
    double CCFuelConsumed = 46;
    int64 CCFuelDistanceNotActive = 47;
    double CCFuelConsumedNotActive = 48;
    string StartPosition = 49;
    string EndPosition = 50;
    double IdleDurationPercentage = 51;
}
message FleetFuelDetailsByDriver {
    google.protobuf.StringValue VehicleName = 1;
    google.protobuf.StringValue VIN = 2;
    google.protobuf.StringValue VehicleRegistrationNo = 3;
    int64 Distance = 4;
    int64 AverageDistancePerDay = 5;
    double AverageSpeed = 6;
    int32 MaxSpeed = 7;
    int32 NumberOfTrips = 8;
    double AverageGrossWeightComb = 9;
    double FuelConsumed = 10;
    double FuelConsumption = 11;
    double CO2Emission = 12;
    double IdleDuration = 13;
    double PTODuration = 14;
    double HarshBrakeDuration = 15;
    double HeavyThrottleDuration = 16;
    double CruiseControlDistance30_50 = 17;
    double CruiseControlDistance50_75 = 18;
    double CruiseControlDistance75 = 19;
    double AverageTrafficClassification = 20;
    double CCFuelConsumption = 21;
    double FuelconsumptionCCnonactive = 22;
    int32 IdlingConsumption = 23;
    double DPAScore = 24;
    google.protobuf.StringValue DPAAnticipationScore = 25;
    google.protobuf.StringValue DPABrakingScore = 26;
    google.protobuf.StringValue IdlingPTOScore = 27;
    google.protobuf.StringValue IdlingPTO = 28;
    google.protobuf.StringValue IdlingWithoutPTO = 29;
    google.protobuf.StringValue IdlingWithoutPTOpercent = 30;
    google.protobuf.StringValue FootBrake = 31;
    google.protobuf.StringValue CO2Emmision = 32;
    google.protobuf.StringValue AverageTrafficClassificationValue = 33;
    google.protobuf.StringValue IdlingConsumptionValue = 34;
    google.protobuf.StringValue DriverID = 35;
    google.protobuf.StringValue DriverName = 36;
    int64 StartDate = 37;
    int64 EndDate = 38;
    repeated LiveFleetPosition LiveFleetPosition=39;    
    int64 CCFuelDistance = 40;
    double CCFuelConsumed = 41;
    int64 CCFuelDistanceNotActive = 42;
    double CCFuelConsumedNotActive = 43;
    double IdleDurationPercentage = 44;
}
message FleetFuelTripDetails {
    string VehicleName = 1;
    string VIN = 2;
    string VehicleRegistrationNo = 3;
    int64 StartTimeStamp=4;
    int64 EndTimeStamp=5;    
    string AverageSpeed = 6;
    string MaxSpeed = 7;
    string Distance = 8;
    string StartPosition =9;
    string EndPosition=10;
    string FuelConsumed = 11;
    string FuelConsumption = 12;
    string CO2Emission = 13;
    string IdleDuration = 14;
    string PTODuration = 15;
    string CruiseControlDistance30_50 = 16;
    string CruiseControlDistance50_75 = 17;
    string CruiseControlDistance75 = 18;
    string HarshBrakeDuration = 19;
    string HeavyThrottleDuration = 20;
    string GrossWeightCombination = 21;
    string AverageTrafficClassification = 22;
    string CCFuelConsumption = 23;
    string FuelconsumptionCCnonactive = 24;
    string IdlingConsumption = 25;
    string DPAScore = 26;
    double StartPositionLattitude=27;
    double StartPositionLongitude=28;
    double EndPositionLattitude=29;
    double EndPositionLongitude=30;
    repeated LiveFleetPosition LiveFleetPosition=31;

}
message FleetFuelTripDetailsResponse {
    repeated FleetFuelTripDetails FleetFuelTripDetails = 1;   
    Responsecode code = 2;
    string message = 3;
}



/// END Fleet Fuel Report

/// START: Eco Score Report Compare Drivers

message GetEcoScoreReportCompareDriversRequest {
  int64 StartDateTime = 1;
  int64 EndDateTime = 2; 
  repeated string VINs = 3;
  repeated string DriverIds = 4;
  double MinTripDistance = 5;
  double MinDriverTotalDistance = 6;
  int32 TargetProfileId = 7;
  int32 ReportId = 8;
  int32 OrgId = 9;
  int32 AccountId = 10;
  }

 message EcoScoreReportDrivers {
  string DriverName = 1; 
  string DriverId = 2;
  }

 message EcoScoreReportAttribute {
  string DriverId = 1;
  string Value = 2; 
  }

 message EcoScoreReportCompareDrivers {
  int32 DataAttributeId = 1;
  string Name = 2;
  string Key = 3;
  string LimitType = 4;
  double LimitValue = 5;
  double TargetValue = 6;
  string RangeValueType = 7; 
  repeated EcoScoreReportAttribute Score = 8;
  repeated EcoScoreReportCompareDrivers SubCompareDrivers = 9;
  }
  
 message GetEcoScoreReportCompareDriversResponse {
  Responsecode Code = 1;
  string Message = 2;
  repeated EcoScoreReportDrivers Drivers = 3;
  EcoScoreReportCompareDrivers CompareDrivers = 4;
  }
/// END: Eco Score Report Compare Drivers

/// START: Fuel Deviation Report
message FuelDeviationDetails {
    string TripId=1;
    string VIN=2;
    int64 StartTimeStamp=3;
    int64 EndTimeStamp=4; 
    int32 Distance=5; 
    int32 IdleDuration=6;    
    double AverageSpeed=7;
    double AverageWeight=8;
    int64 Odometer=9;
    string StartPosition =10;
    string EndPosition=11;
    double FuelConsumed=12;
    int64 DrivingTime =13;
    int32 Alerts =14;      
    string FuelEventType=15;   
    string RegistrationNo =16;
    string VehicleName=17;
    string VehicleActivityType = 18;
    int64 EventTime=19;
    double FuelDiffernce = 20;
    double EventLatitude = 21;
    double EventLongitude = 22;
    int32 GeoLocationAddressId = 23;
    string GeoLocationAddress = 24;
    int32 FuelDeviationId = 25;
    double StartPositionLattitude = 26;
    double StartPositionLongitude = 27;
    double EndPositionLattitude = 28;
    double EndPositionLongitude = 29;
    int32 StartPositionId = 30;
    int32 EndPositionId = 31;
    string FuelEventTypeKey = 32;
    string VehicleActivityTypeKey = 33;
    double EventHeading = 34;
}

message FuelDeviationCharts{
    int64 EventCount = 1;
    int64 TripCount = 2;
    int64 VehicleCount = 3;
    int64 IncreaseEvent = 4;
    int64 DecreaseEvent = 5;
    int64 Date = 6;
}

message FuelDeviationFilterRequest{
    int64 StartDateTime = 1;
    int64 EndDateTime = 2;
    repeated string VINs = 3;
}

message FuelDeviationResponse{
    repeated FuelDeviationDetails FuelDeviationDetails=1;   
    Responsecode code = 2;
    string message = 3;
}

message FuelDeviationChartResponse{
    repeated FuelDeviationCharts FuelDeviationchart=1;   
    Responsecode code = 2;
    string message = 3;
}

/// END: Fuel Deviation Report


///Logbook*************************
message LogbookFilterIdRequest {
  int32 AccountId = 1;
  int32 OrganizationId = 2;
  int32 RoleId = 3;
}
message LogbookFilterResponse {
  
  LogbookSearchParameter LogbookSearchParameter =1; 
  Responsecode code = 2;
  string message = 3;

}

message LogbookSearchParameter {
  repeated LogbookTripAlertDetailsRequest LogbookTripAlertDetailsRequest =1;
  repeated AssociatedVehicleRequest AssociatedVehicleRequest = 2;
  repeated FilterResponse ALFilterResponse = 3;
  repeated AlertCategoryFilterResponse ACFilterResponse = 4;    
  repeated AlertCategoryFilterRequest AlertTypeFilterRequest=5;  
   repeated EnumTranslation EnumTranslation = 6;   
}
message AlertCategoryFilterRequest {
		 int32 VehicleGroupId =  1;
         int32 VehicleId =  2;
         string FeatureName =  3;
         string FeatureKey =  4;
         bool Subscribe =  5;
}

message LogbookDetailsRequest{
    repeated string GroupIds = 1;
    repeated string VIN = 2;
    repeated string AlertLevels = 3;
    repeated string AlertCategories = 4;
    repeated string AlertType = 5;
    int64 StartTime = 6;
    int64 EndTime =7;
    int32 AccountId = 8;
    int32 OrganizationId = 9;
    int32 RoleId = 10;
}

message LogbookDetails{
         string VIN = 1;
		 string GroupIds= 2;
         string TripId = 3;
		 int32 AlertId =4;
         string VehicleRegNo =5;
         string VehicleName =6;
         string AlertName =7;
         string AlertType =8;
         int32 Occurrence  =9;
         string AlertLevel =10;
         string AlertCategory =11;
         int64 TripStartTime =12;
         int64 TripEndTime =13;
         double Latitude =14;
         double Longitude =15;
         string AlertGeolocationAddress =16;
         double ThresholdValue =17;
         string ThresholdUnit =18;
         int64 AlertGeneratedTime=19;
         int32 AlertGeolocationAddressId =20;
         int64 ProcessedMessageTimestamp=21;
         string VehicleHealthStatusType=22;
}

message LogbookDetailsResponse{
    repeated LogbookDetails LogbookDetails= 1;   
    Responsecode Code = 2;
    string Message = 3;

}

message LogbookTripAlertDetailsRequest
    {
         int32 Id= 1;
         string Vin =2;
         string TripId =3;
         int64 AlertGeneratedTime =4;
         string AlertCategoryType =5;
         string AlertType =6;        
         string AlertLevel =7;     
         
    }
    message EnumTranslation{
    int32 Id= 1;
    string Type=2;
    string Enum=3;
    string ParentEnum=4;
    string Key=5; 
}
  
//***************End Logbook*******************
/// START : Fuel Bechmark Report
message FuelBenchmarkRequest{
    int64 StartDateTime = 1;
    int64 EndDateTime = 2;   
    repeated string VINs = 3;
}
message FuelBenchmarkTimePeriodRequest{
    int64 StartDateTime = 1;
    int64 EndDateTime = 2;   
    repeated string VINs = 3;
    int32 AccountId = 4;
    int32 OrganizationId = 5;
}
message FuelBenchmarkResponse{
    FuelBenchmarkDetails FuelBenchmarkDetails=1;   
    Responsecode code = 2;
    string message = 3;
}

message FuelBenchmarkDetails {
    int32 NumberOfActiveVehicles = 1;
    int32 NumberOfTotalVehicles = 2;
    double TotalFuelConsumed = 3;
    double TotalMileage = 4;
    double AverageFuelConsumption = 5;
    int32 VehicleGroupId = 6;
    google.protobuf.StringValue VehicleGroupName = 7;
    repeated Ranking Ranking = 8;
}

message Ranking {
       google.protobuf.StringValue VIN = 1;
       google.protobuf.StringValue VehicleName = 2;
      double FuelConsumption = 3;
}

message AssociatedVehicleResponse {
    repeated AssociatedVehicleRequest AssociatedVehicle = 1;
    Responsecode code = 2;
    string message = 3;
}

/// END: Fuel Bechmark Report

/// START: Eco Score Report Single Driver
message GetEcoScoreReportSingleDriverRequest {
  int64 StartDateTime = 1;
  int64 EndDateTime = 2; 
  repeated string VINs = 3;
  string DriverId = 4;
  double MinTripDistance = 5;
  double MinDriverTotalDistance = 6;
  int32 TargetProfileId = 7;
  int32 ReportId = 8;
  int32 OrgId = 9;
  int32 AccountId = 10;
  string UoM = 11;
  }

 message EcoScoreReportSingleDriverHeader {
  string HeaderType = 1; 
  string VIN = 2;
  string VehicleName = 3;
  string RegistrationNo = 4;
  }

 message EcoScoreReportSingleDriverAttribute {
  string HeaderType = 1;
  string VIN = 2;
  string Value = 3; 
  }

 message EcoScoreReportSingleDriver {
  int32 DataAttributeId = 1;
  string Name = 2;
  string Key = 3;
  string LimitType = 4;
  double LimitValue = 5;
  double TargetValue = 6;
  string RangeValueType = 7; 
  repeated EcoScoreReportSingleDriverAttribute Score = 8;
  repeated EcoScoreReportSingleDriver SubSingleDriver = 9;
  }
  
 message EcoScoreReportOverallPerformanceKPI {
  int32 DataAttributeId = 1;
  string Name = 2;
  string Key = 3;
  string LimitType = 4;
  double LimitValue = 5;
  double TargetValue = 6;
  string Score = 7;
 }

 message EcoScoreReportSingleDriverOverallPerformance {
  EcoScoreReportOverallPerformanceKPI EcoScore = 1;
  EcoScoreReportOverallPerformanceKPI FuelConsumption = 2;
  EcoScoreReportOverallPerformanceKPI AnticipationScore = 3;
  EcoScoreReportOverallPerformanceKPI BrakingScore = 4;
 }

 message EcoScoreSingleDriverBarPieChart
 {
  repeated string XAxisLabel = 1;
  repeated EcoScoreSingleDriverChartDataSet ChartDataSet = 2;
 }

 message EcoScoreSingleDriverChartDataSet
 {
  repeated double Data = 1;
  string Label = 2;
 }

 message GetEcoScoreReportSingleDriverResponse {
  Responsecode Code = 1;
  string Message = 2;
  EcoScoreReportSingleDriverOverallPerformance OverallPerformance = 3;
  repeated EcoScoreReportSingleDriverHeader SingleDriver = 4;
  EcoScoreReportSingleDriver SingleDriverKPIInfo = 5;
  EcoScoreSingleDriverBarPieChart AverageGrossWeightChart = 6;
  EcoScoreSingleDriverBarPieChart AverageDrivingSpeedChart = 7;
  }

message EcoScoreTrendlinesKPI {
 string Name = 1;
 string Key = 2;
 string UoM = 3;
 map<string, string> Data = 4;
}

message EcoScoreTrendlinesKPIInfo {
 EcoScoreTrendlinesKPI EcoScoreCompany = 1;
 EcoScoreTrendlinesKPI EcoScore = 2;
 EcoScoreTrendlinesKPI FuelConsumption = 3;
 EcoScoreTrendlinesKPI CruiseControlUsage = 4;
 EcoScoreTrendlinesKPI CruiseControlUsage3050 = 5;
 EcoScoreTrendlinesKPI CruiseControlUsage5075 = 6;
 EcoScoreTrendlinesKPI CruiseControlUsage75 = 7;
 EcoScoreTrendlinesKPI PTOUsage = 8;
 EcoScoreTrendlinesKPI PTODuration = 9;
 EcoScoreTrendlinesKPI AverageDrivingSpeed = 10;
 EcoScoreTrendlinesKPI AverageSpeed = 11;
 EcoScoreTrendlinesKPI HeavyThrottling = 12;
 EcoScoreTrendlinesKPI HeavyThrottleDuration = 13;
 EcoScoreTrendlinesKPI Idling = 14;
 EcoScoreTrendlinesKPI IdleDuration = 15;
 EcoScoreTrendlinesKPI BrakingScore = 16;
 EcoScoreTrendlinesKPI HarshBraking = 17;
 EcoScoreTrendlinesKPI HarshBrakeDuration = 18;
 EcoScoreTrendlinesKPI BrakeDuration = 19;
 EcoScoreTrendlinesKPI Braking = 20;
 EcoScoreTrendlinesKPI AnticipationScore = 21;
 }

message EcoScoreTrendlines{
 string VIN = 1;
 string VehicleName = 2;
 EcoScoreTrendlinesKPIInfo KPIInfo = 3;
}

message GetEcoScoreReportTrendlinesResponse {
 Responsecode Code = 1;
 string Message = 2;
 repeated EcoScoreTrendlines Trendlines = 3 ;
}
/// END: Eco Score Report Single Driver
// Vehicle Performance

message BubbleChartDataRequest{
    int64 StartDateTime = 1;
    int64 EndDateTime = 2;
    string VIN = 3;
    string PerformanceType= 4;
    int32 AccountId = 5;
    int32 OrganizationId = 6;

}

message VehPerformanceCharts{
string IsDefault =3;
string Index =4;
string Range =5;
string Axisvalues =6;
}
message VehPerformanceResponse{
string Message = 1;
Responsecode Code = 2;
VehPerformanceTemplate VehPerformanceTemplate=3;

 }

 message VehPerformanceTemplate
 {
 repeated VehPerformanceCharts VehPerformanceCharts = 1;
 VehPerformanceSummary VehPerformanceSummary =2; 
}
 message VehPerformanceSummary{
      string ModelType = 1;
      string EngineType = 2;
      string Vin = 3;
 }
 message KpiData{
 string Label =1;
 double Value =2;
 int32 Index =3;
 }
 message BubbleChartData{
 string Vin=1;
 string TripId=2;
 int32 AbsRpmtTrque=3;
 int32 OrdRpmTorque=4;
 repeated KpiData KpiData = 8;
 repeated ChartDataSet MatrixData = 9;
 }

 message ChartDataSet{
 int32 Xindex=1;
 int32 Yindex=2;
 int32 Value = 3;
 }
 message BubbleChartDataResponse{
string Message = 1;
Responsecode Code = 2;
repeated KpiData KpiData = 8;
 repeated ChartDataSet MatrixData = 9;
 }
 message VehPerformanceRequest{     
    string VIN = 1;
    string PerformanceType= 2; 
    int32 AccountId = 3;
    int32 OrganizationId = 4;

}
message VehPerformanceTypeRequest{

}
message VehPerformanceType{
      string Name = 1;
      string Value = 2;
      string Type = 3;
}
message VehPerformanceTypeResponse{
      repeated VehPerformanceType VehPerformanceType =1;
      string Message = 2;
      Responsecode Code = 3;
}

// Vehicle Performance End