
syntax = "proto3";
import "google/protobuf/wrappers.proto";
option csharp_namespace = "net.atos.daf.ct2.reportservice";

package report;

service ReportService{
rpc GetUserPreferenceReportDataColumn (IdRequest) returns (UserPreferenceDataColumnResponse);
rpc CreateUserPreference (UserPreferenceCreateRequest) returns (UserPreferenceCreateResponse);
rpc GetVinsFromTripStatisticsWithVehicleDetails (VehicleListRequest) returns (VehicleListAndDetailsResponse);
rpc GetFilteredTripDetails (TripFilterRequest) returns (TripResponse);
rpc GetDriversActivity (ActivityFilterRequest) returns (DriverActivityResponse);
rpc GetDriverActivity (SingleDriverActivityFilterRequest) returns (DriverActivityResponse);
rpc GetReportDetails (TempPara) returns (ReportDetailsResponse);
rpc GetDriverActivityParameters (IdRequestForDriverActivity) returns (DriverListAndVehicleDetailsResponse);
rpc CreateEcoScoreProfile (CreateEcoScoreProfileRequest) returns (CreateEcoScoreProfileResponse);
rpc GetEcoScoreProfiles (GetEcoScoreProfileRequest) returns (GetEcoScoreProfileResponse);
rpc GetEcoScoreProfileKPIDetails (GetEcoScoreProfileKPIRequest) returns (GetEcoScoreProfileKPIResponse);
rpc UpdateEcoScoreProfile (UpdateEcoScoreProfileRequest) returns (UpdateEcoScoreProfileResponse);
rpc DeleteEcoScoreProfile (DeleteEcoScoreProfileRequest) returns (DeleteEcoScoreProfileResponse);
rpc GetReportSearchParameter (IdRequestForDriverActivity) returns (ReportSearchParameterResponse);
rpc GetFleetUtilizationDetails (FleetUtilizationFilterRequest) returns (FleetUtilizationDetailsResponse);
rpc GetFleetCalenderDetails (FleetUtilizationFilterRequest) returns (FleetUtilizationCalenderResponse);
rpc GetEcoScoreReportByAllDrivers (GetEcoScoreReportByAllDriversRequest) returns (GetEcoScoreReportByAllDriversResponse);
rpc GetReportUserPreference (GetReportUserPreferenceRequest) returns (GetReportUserPreferenceResponse);
rpc CreateReportUserPreference (ReportUserPreferenceCreateRequest) returns (ReportUserPreferenceCreateResponse);
rpc GetFleetOverviewFilter (FleetOverviewFilterIdRequest) returns (FleetOverviewFilterResponse);
rpc GetFleetFuelDetailsByVehicle(FleetFuelFilterRequest) returns (FleetFuelDetailsResponse);
rpc GetFleetFuelDetailsByDriver(FleetFuelFilterRequest) returns (FleetFuelDetailsResponse);
rpc GetEcoScoreReportCompareDrivers (GetEcoScoreReportCompareDriversRequest) returns (GetEcoScoreReportCompareDriversResponse);
}

enum Responsecode{
  None = 0;
  Success = 200;
  Failed = 400;
  Forbidden = 403;
  Conflict = 409;
  NotFound = 404;
  InternalServerError = 500;
}
message TempPara {
  int32 TempID = 1;
}
message ReportDetailsResponse {
    repeated ReportDetails ReportDetails = 1;
    Responsecode Code = 2;
    string message = 3; 
}

message ReportDetails {
    int32 Id = 1;
    string Name = 2;
    string Key = 3;
}

message IdRequest {
  int32 ReportId = 1;
  int32 AccountId=2;
  int32 RoleId=3;
  int32 OrganizationId=4;
  int32 ContextOrgId=5; 
}

message UserPreferenceDataColumn{
    int32 DataAtrributeId =1;
    string Name=2;
    string Description = 3;
    string Type = 4;
    string ReportReferenceType = 5;
    string Key =6;
    string State=7;
    string ChartType = 8;
    string ThresholdType = 9;
    int64 ThresholdValue = 10;
}

message UserPreferenceDataColumnResponse{
    repeated UserPreferenceDataColumn UserPreferences = 1;
    Responsecode Code = 2;
    string Message = 3;
}

message UserPreferenceCreateRequest{
 repeated Atribute AtributesShowNoShow =1;
   int32 AccountId =2;
  int32 ReportId =3;
  int32 OrganizationId =4;
  int64 CreatedAt =6;
  int64 ModifiedAt =7;  
}

message GetReportUserPreferenceRequest {
    int32 ReportId = 1;
    int32 AccountId=2;
    int32 RoleId=3;
    int32 OrganizationId=4;
    int32 ContextOrgId=5; 
}

message GetReportUserPreferenceResponse {
    ReportUserPreference UserPreference = 1;
    Responsecode Code = 2;
    string Message = 3;
}

message ReportUserPreference{
    int32 DataAttributeId=1;
    string Name=2;
    string Key=3;
    string State=4;
    string ChartType=5;
    string ThresholdType=6;
    int64 ThresholdValue=7;
    repeated ReportUserPreference SubReportUserPreferences=8;
}

message ReportUserPreferenceCreateRequest{
    repeated UserPreferenceAttribute Attributes=1;
    int32 AccountId=2;
    int32 ReportId=3;
    int32 OrganizationId=4;
    int32 ContextOrgId=5;
}

message ReportUserPreferenceCreateResponse{
    Responsecode Code = 1;
    string Message = 2;
}

message Atribute{
 int32 DataAttributeId = 1;
 string State = 2;
   string Type = 3;
 string CharType = 4;
  string ThresholdType = 5;
  int64 ThresholdValue = 6;
}

message UserPreferenceAttribute {
    int32 DataAttributeId = 1;
    int32 State = 2;
    int32 Type = 3;
    int32 ChartType = 4;
    int32 ThresholdType = 5;
    int64 ThresholdValue = 6;
}

message UserPreferenceCreateResponse{
    Responsecode Code = 1;
    string Message = 2;
}

message VehicleFilterRequest{
int64 FromDate = 1;
int64 ToDate = 2;
repeated string VinList = 3;
}

// Start Trip Report Table
message TripFilterRequest{
    int64 StartDateTime = 1;
    int64 EndDateTime = 2;
    string VIN = 3;

}

message TripResponse {
    repeated TripDetails TripData=1;   
    Responsecode code = 2;
    string message = 3;
}
message TripDetails {
    int32 Id =1;
    string TripId=2;
    string VIN=3;
    int64 StartTimeStamp=4;
    int64 EndTimeStamp=5; 
    int32 Distance=6; 
    int32 IdleDuration=7;
    
    int32 AverageSpeed=8;
    int32 AverageWeight=9;
    int64 Odometer=10;
    string StartPosition =11;
    string EndPosition=12;
    double FuelConsumed=13;
    int32 DrivingTime =14;
    int32 Alert =15;
    int32 Events=16;
    double FuelConsumed100km=17;

    repeated LiveFleetPosition LiveFleetPosition=18;

    double StartPositionLattitude=19;
    double StartPositionLongitude=20;
    double EndPositionLattitude=21;
    double EndPositionLongitude=22;
}
message LiveFleetPosition {
    double GpsAltitude=1;
    double GpsHeading=2; 
    double GpsLatitude=3;
    double GpsLongitude=4; 
    double Fuelconsumtion=6;
    double Co2emission=7;
    int32 Id=5;
}
// End Trip Report Table

//Start Vehicle Visibility and Trip filtered records

message VehicleDetailsWithAccountVisibilty {
int32 VehicleGroupId = 1;
int32 AccountId = 2;
string ObjectType = 3;
string GroupType = 4;
string FunctionEnum = 5;
int32 OrganizationId = 6;
string AccessType = 7;
string VehicleGroupName = 8;
int32 VehicleId = 9;
string VehicleName = 10;
string Vin = 11;
string RegistrationNo = 12;
}

message VehicleFromTripDetails {
string Vin = 1;
int64 StartTimeStamp=2;
int64 EndTimeStamp=3;
}

message VehicleListAndDetailsResponse{
Responsecode Code = 1;
string Message = 2;
repeated VehicleFromTripDetails VinTripList = 3;
repeated VehicleDetailsWithAccountVisibilty VehicleDetailsWithAccountVisibiltyList = 4;
}

message VehicleListRequest{
int32 AccountId = 3;
int32 OrganizationId = 4;
}
//End Vehicle Visibility and Trip filtered records

// Start Driver Time Managment Report
message SingleDriverActivityFilterRequest {
    int64 StartDateTime = 1;
    int64 EndDateTime = 2;
    string VIN = 3;
    string DriverId = 4;
}
message ActivityFilterRequest {
    int64 StartDateTime = 1;
    int64 EndDateTime = 2;
    repeated string VINs = 3;
    repeated string DriverIds = 4;
}

message DriverActivityResponse {
    repeated DriverActivity DriverActivities = 1;   
    Responsecode code = 2;
    string message = 3;
}
message DriverActivity {
    string DriverId = 1;
    string DriverName = 2;
    string VIN = 3;
    int64 ActivityDate = 4;
    int64 StartTime = 5;
    int64 EndTime = 6;
    int32 Code = 7; 
    int64 RestTime = 8;
    int64 AvailableTime = 9;
    int64 WorkTime = 10;
    int64 DriveTime = 11;
    int64 ServiceTime = 12;
}


message DriverListAndVehicleDetailsResponse{
Responsecode Code = 1;
string Message = 2;
repeated VehicleFromDriverTimeDetails DriverList = 3;
repeated VehicleDetailsWithAccountVisibilty VehicleDetailsWithAccountVisibiltyList = 4;
}

message VehicleFromDriverTimeDetails {
google.protobuf.StringValue Vin = 1;
google.protobuf.StringValue DriverID=2;
google.protobuf.StringValue FirstName=3;
google.protobuf.StringValue LastName=4;
int64 ActivityDateTime=5;
}

message IdRequestForDriverActivity {
  int32 ReportId = 1;
  int32 AccountId=2;
  int32 OrganizationId=3;
  int64 StartDateTime = 4;
  int64 EndDateTime = 5; 
  }

message ReportSearchParameterResponse {
Responsecode Code = 1;
string Message = 2;
repeated SearchParameter AdditionalSearchParameter  = 3;
repeated VehicleDetailsWithAccountVisibilty VehicleDetailsWithAccountVisibiltyList = 4;
}


message SearchParameter {
string DriverId = 1;
string VIN = 2;
string PerformanceType = 3;
}


// End   Driver Time Managment Report

message CreateEcoScoreProfileRequest {
  string Name = 1;
  string Description = 2;
  bool IsDAFStandard = 3;
  int32 OrgId = 4;
  int32 AccountId = 5;
  repeated CreateEcoScoreProfileKPI ProfileKPIs = 6;
}

message CreateEcoScoreProfileKPI {
  int32 KPIId = 1;
  double LimitValue = 2;
  double TargetValue = 3;
  double LowerValue = 4;
  double UpperValue = 5;
}

message CreateEcoScoreProfileResponse {
  Responsecode Code = 1;
  string Message = 2;
}

// START : Get EcoScore Profile Details
message GetEcoScoreProfileRequest {
  int32 OrgId = 1;
}

message GetEcoScoreProfileResponse {
  Responsecode Code = 1;
  string Message = 2;
 repeated EcoScoreProfiles Profiles = 3;
}

message EcoScoreProfiles {
 int32 ProfileId = 1; 
 string ProfileName = 2;
 string ProfileDescription = 3;
 bool IsDeleteAllowed = 4;
 int32 OrganizationId = 5;
}

message GetEcoScoreProfileKPIRequest {
  int32 ProfileId = 1;
}

message GetEcoScoreProfileKPIResponse {
  Responsecode Code = 1;
  string Message = 2;
  repeated EcoScoreProfileDetails Profile = 3;
}

message EcoScoreProfileDetails {
 int32 ProfileId = 1; 
 string ProfileName = 2;
 string ProfileDescription = 3;
 string LastUpdate = 4; 
 string UpdatedBy = 5;
 repeated EcoScoreProfileKPIs ProfileSection = 6;
}

message EcoScoreProfileKPIs {
int32 SectionId = 1;
string SectionName = 2;
string SectionDescription = 3;
repeated EcoScoreKPI ProfileKPIDetails = 4;
}

message EcoScoreKPI{
int32 EcoScoreKPIId = 1; 
string KPIName = 2; 
string LimitType = 3; 
double LimitValue = 4; 
double TargetValue = 5; 
double LowerValue = 6; 
double UpperValue = 7; 
string RangeValueType = 8; 
double MaxUpperValue = 9; 
int32 SequenceNo = 10; 
}

// END : Get EcoScore Profile Details

message UpdateEcoScoreProfileRequest {
  int32 ProfileId = 1;
  string Name = 2;
  string Description = 3;
    int32 OrgId = 4;
  int32 AccountId = 5;
  repeated CreateEcoScoreProfileKPI ProfileKPIs = 6;
}
message UpdateEcoScoreProfileResponse {
  Responsecode Code = 1;
  string Message = 2;
}
message DeleteEcoScoreProfileRequest
{
 int32 ProfileId = 1;
}
message DeleteEcoScoreProfileResponse
{
  Responsecode Code = 1;
  string Message = 2;
}

// Start Fleet Utilization Report
message FleetUtilizationFilterRequest {
    int64 StartDateTime = 1;
    int64 EndDateTime = 2;
    repeated string VINs = 3;
}

message FleetUtilizationDetailsResponse {
    repeated FleetUtilizationDetails FleetDetails = 1;   
    Responsecode code = 2;
    string message = 3;
}

message FleetUtilizationCalenderResponse {
    repeated FleetUtilizationcalender CalenderDetails = 1;   
    Responsecode code = 2;
    string message = 3;
}

message FleetUtilizationDetails {
    string VehicleName = 1;
    string VIN = 2;
    string RegistrationNumber = 3;
    double Distance = 4;
    int32 NumberOfTrips  = 5;
    int64 TripTime = 6;
    int64 DrivingTime = 7;
    int64 IdleDuration = 8;
    int64 StopTime = 9;
    double AverageDistancePerDay = 10;
    double AverageSpeed = 11;
    double AverageWeightPerTrip = 12;
    int64 Odometer = 13;

}

message FleetUtilizationcalender {
    string VehicleName = 1;
    string VIN = 2;
    int64 CalenderDate = 3;
    double Averagedistance = 4;
    double Averagetriptime  = 5;
    double Averagedrivingtime = 6;
    double Averageidleduration = 7;
    double Averagedistanceperday = 8;
    double AverageSpeed = 9;
    double Averageweight=12;
    int32 Vehiclecount =10;
    int32 Tripcount =11;

   

}

// END Fleet Utilization Report

/// START: Eco Score Report By All Drivers
message GetEcoScoreReportByAllDriversRequest {
  int64 StartDateTime = 1;
  int64 EndDateTime = 2; 
  repeated string VINs = 3;
  double MinTripDistance = 4;
  double MinDriverTotalDistance = 5;
  int32 OrgId = 6;
  int32 AccountId = 7;
  int32 TargetProfileId = 8;
  int32 ReportId = 9;
  }

 message EcoScoreReportDriversRanking {
  int32 Ranking = 1;
  string DriverName = 2; 
  string DriverId = 3;
  double EcoScoreRanking = 4;
  string EcoScoreRankingColor = 5;  
  }
  
  message GetEcoScoreReportByAllDriversResponse {
  Responsecode Code = 1;
  string Message = 2;
  repeated EcoScoreReportDriversRanking DriverRanking = 3;
  }
  /// END: Eco Score Report By All Drivers

   /// START: FleetOverview

message FleetOverviewFilterIdRequest {
  int32 AccountId = 1;
  int32 OrganizationId = 2;
  int32 RoleId = 3;
}

message AssociatedVehicleRequest {
		 int32 VehicleGroupId =  1;
         string VehicleGroupName =  2;
         int32 VehicleId =  3;
         string VehicleName =  4;
         string Vin =  5;
         string RegistrationNo =  6;
}

message FilterResponse {
		 string Name =  1;
         string Value =  2;
}

message AlertCategoryFilterResponse {
		 string Name =  1;
         string Value =  2;
}

message FleetOverviewFilterResponse {
  repeated AssociatedVehicleRequest AssociatedVehicleRequest = 1;
  repeated FilterResponse ALFilterResponse = 2;
  repeated AlertCategoryFilterResponse ACFilterResponse = 3;
  repeated FilterResponse HSFilterResponse = 4;
  repeated FilterResponse OFilterResponse = 5;
  Responsecode code = 6;
  string message = 7;
}



/// END: FleetOverview

/// START Fleet Fuel Report

message FleetFuelFilterRequest {
    int64 StartDateTime = 1;
    int64 EndDateTime = 2;
    repeated string VINs = 3;
}

message FleetFuelDetailsResponse {
    repeated FleetFuelDetails FleetFuelDetails = 1;   
    Responsecode code = 2;
    string message = 3;
}

message FleetFuelDetails {
    string VehicleName = 1;
    string VIN = 2;
    string VehicleRegistrationNo = 3;
    string Distance = 4;
    string AverageDistancePerDay = 5;
    string AverageSpeed = 6;
    string MaxSpeed = 7;
    string NumberOfTrips = 8;
    string AverageGrossWeightComb = 9;
    string FuelConsumed = 10;
    string FuelConsumption = 11;
    string CO2Emission = 12;
    string IdleDuration = 13;
    string PTODuration = 14;
    string HarshBrakeDuration = 15;
    string HeavyThrottleDuration = 16;
    string CruiseControlDistance30_50 = 17;
    string CruiseControlDistance50_75 = 18;
    string CruiseControlDistance75 = 19;
    string AverageTrafficClassification = 20;
    string CCFuelConsumption = 21;
    string FuelconsumptionCCnonactive = 22;
    string IdlingConsumption = 23;
    string DPAScore = 24;
    string DPAAnticipationScore = 25;
    string DPABrakingScore = 26;
    string IdlingPTOScore = 27;
    string IdlingPTO = 28;
    string IdlingWithoutPTO = 29;
    string IdlingWithoutPTOpercent = 30;
    string FootBrake = 31;
    string CO2Emmision = 32;
}


/// END Fleet Fuel report

/// START: Eco Score Report Compare Drivers

message GetEcoScoreReportCompareDriversRequest {
  int64 StartDateTime = 1;
  int64 EndDateTime = 2; 
  repeated string VINs = 3;
  repeated string DriverIds = 4;
  double MinTripDistance = 5;
  double MinDriverTotalDistance = 6;
  int32 TargetProfileId = 7;
  int32 ReportId = 8;
  int32 OrgId = 9;
  int32 AccountId = 10;
  }

 message EcoScoreReportDrivers {
  string DriverName = 1; 
  string DriverId = 2;
  }

 message EcoScoreReportAttribute {
  string DriverId = 1;
  double Value = 2; 
  string Color = 3;
  }

 message EcoScoreReportCompareDrivers {
  int32 DataAttributeId = 1;
  string Name = 2;
  string Key = 3;
  double Target = 4;
  repeated EcoScoreReportAttribute Score = 5;
  repeated EcoScoreReportCompareDrivers SubCompareDrivers = 6;
  }
  
 message GetEcoScoreReportCompareDriversResponse {
  Responsecode Code = 1;
  string Message = 2;
  repeated EcoScoreReportDrivers Drivers = 3;
  EcoScoreReportCompareDrivers CompareDrivers = 4;
  }
/// END: Eco Score Report Compare Drivers