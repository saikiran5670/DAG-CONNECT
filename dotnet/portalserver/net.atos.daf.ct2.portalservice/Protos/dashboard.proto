syntax = "proto3";

option csharp_namespace = "net.atos.daf.ct2.dashboardservice";

package Dashboard;

service DashboardService {  

rpc GetFleetKPIDetails(FleetKpiFilterRequest) returns (FleetKpiResponse);
rpc GetLastAlert24Hours(Alert24HoursFilterRequest) returns (Alert24HoursResponse);
rpc GetFleetUtilizationDetails(FleetKpiFilterRequest) returns (FleetUtilizationResponse);
rpc GetTodayLiveVinData(TodayLiveVehicleRequest) returns (TodayLiveVehicleResponse);
rpc GetVisibleVins(VehicleListRequest) returns (VehicleListAndDetailsResponse);
}

enum Responsecode{
  None = 0;
  Success = 200;
  Failed = 400;
  Forbidden = 403;
  Conflict = 409;
  NotFound = 404;
  InternalServerError = 500;
}
message TodayLiveVehicleRequest{
 repeated string VINs = 1;
}

message TodayLiveVehicleResponse{
    double Distance = 1;
    int64 DrivingTime = 2;
    int32 VehicleCount = 3;
    int32 DriverCount = 4;
    int32 CriticleAlertCount = 5;
    int32 ActiveVehicles = 6;
    int32 TimeBaseUtilization = 7;
    int32 DistanceBaseUtilization = 8;
    Responsecode code = 9;
    string message = 10;
}
message FleetKpiFilterRequest {
    int64 StartDateTime = 1;
    int64 EndDateTime = 2;
    repeated string VINs = 3;
}
message FleetKpiResponse {
    FleetKpi FleetKpis = 1;
    Responsecode code = 2;
    string message = 3;
}
message FleetKpi {
    int32 VehicleCount = 1;
    double Co2Emission = 2;
    double IdlingTime = 3;
    double DrivingTime = 4;
    double Distance  = 5;
    double FuelConsumption = 6;
    double Idlingfuelconsumption = 7;
    FleetKpi LastChangeKpi = 8;
}
// Start For the Alert24Hours
message Alert24HoursFilterRequest {
       repeated string VINs = 1;
}
message Alert24HoursResponse {
   repeated Alert24Hour Alert24Hours = 1;
    Responsecode code = 2;
    string message = 3;
}
message Alert24Hour{
    int32 Logistic = 1;
    int32 FuelAndDriver = 2;
    int32 RepairAndMaintenance = 3;
    int32 Critical = 4;
    int32 Warning = 5;
    int32 Advisory = 6;
}
//End for the Alert24Hours


//start for utilization

message FleetUtilizationResponse {
    repeated FleetUtilization Fleetutilizationcharts = 1;
    Responsecode code = 2;
    string message = 3;
}

message FleetUtilization {
    string VehicleName = 1;
    string VIN = 2;
    int64 CalenderDate = 3;
    double Distance = 4;
    double Triptime  = 5;
    double Drivingtime = 6;
    double Idleduration = 7;
    double Distanceperday = 8;
    double Fuelconsumed = 12;
    double Fuelconsumption = 13;
    int32 Vehiclecount =10;
    int32 Tripcount =11;   

}
// End utilizatio

//Start Vehicle Visibility and Trip filtered records

message VehicleDetailsWithAccountVisibilty {
int32 VehicleGroupId = 1;
int32 AccountId = 2;
string ObjectType = 3;
string GroupType = 4;
string FunctionEnum = 5;
int32 OrganizationId = 6;
string AccessType = 7;
string VehicleGroupName = 8;
int32 VehicleId = 9;
string VehicleName = 10;
string Vin = 11;
string RegistrationNo = 12;
}

message VehicleFromTripDetails {
string Vin = 1;
int64 StartTimeStamp=2;
int64 EndTimeStamp=3;
}

message VehicleListAndDetailsResponse{
Responsecode Code = 1;
string Message = 2;
repeated VehicleFromTripDetails VinTripList = 3;
repeated VehicleDetailsWithAccountVisibilty VehicleDetailsWithAccountVisibiltyList = 4;
}

message VehicleListRequest{
int32 AccountId = 3;
int32 OrganizationId = 4;
}
//End Vehicle Visibility and Trip filtered records