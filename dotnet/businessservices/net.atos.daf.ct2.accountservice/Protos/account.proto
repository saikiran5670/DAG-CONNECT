syntax = "proto3";
import "google/protobuf/timestamp.proto";

option csharp_namespace = "net.atos.daf.ct2.accountservice";

package net.atos.daf.ct2.accountservice;

// The greeting service definition.
service AccountService {
  // Account Methods 
  rpc Create (AccountRequest) returns (AccountData);
  rpc Update (AccountRequest) returns (AccountData);
  rpc Delete (AccountRequest) returns (AccountResponse);
  rpc ChangePassword (AccountRequest) returns (AccountResponse);
  rpc Get (AccountFilter) returns (AccountDataList);
  rpc GetAccountDetail (AccountGroupDetailsRequest) returns (AccountDetailsResponse);
  

  // Account Preference Mthod
  rpc CreatePreference (AccountPreference) returns (AccountPreferenceResponse);
  rpc UpdatePreference (AccountPreference) returns (AccountPreferenceResponse);
  rpc DeletePreference (AccountPreference) returns (AccountPreferenceResponse);
  rpc GetPreference (AccountPreferenceFilter) returns (AccountPreferenceDataList);

  // Account Group Method
  rpc CreateGroup (AccountGroupRequest) returns (AccountGroupResponce);
  rpc UpdateGroup (AccountGroupRequest) returns (AccountGroupResponce);
  rpc DeleteGroup (IdRequest) returns (AccountGroupResponce);
  rpc GetAccountGroup (AccountGroupFilterRequest) returns (AccountGroupDataList);
  rpc GetAccountGroupDetail (AccountGroupDetailsRequest ) returns (AccountGroupDetailsDataList);

  // Add Role
  rpc AddRoles (AccountRoleRequest) returns (AccountRoleResponse);
  rpc RemoveRoles (AccountRole) returns (AccountRoleResponse);
}
enum AccountType
    {
        None = 0;
        SystemAccount = 1;
        PortalAccount = 2;        
    }
    // response code  
    enum Responcecode{
      Success = 0;
      Failed = 1;
    }
// common response 
message AccountResponse {
  Responcecode Code=1;
  string Message = 2;  
}
// common response 
message AccountData {
  Responcecode Code=1;
  string Message = 2;
  AccountRequest Account = 3;
}
// account details 
message AccountDetails {  
  AccountRequest Account = 1;
  string Roles=2;
  string AccountGroups = 3;
}

message AccountDetailsResponse {  
  repeated AccountDetails AccountDetails = 1;

  Responcecode Code=2;
  string Message = 3;
}

// common response 
message AccountDataList {
  Responcecode Code=1;
  string Message = 2;
  repeated AccountRequest Accounts = 3;
}

// The request request.
message AccountRequest {
    int32 Id= 1;
    string EmailId=2;
    string Salutation=3;
    string FirstName=4;
    string LastName=5;
    string Password=6;
    google.protobuf.Timestamp Dob=7; 
    AccountType Type=8;    
    int32 Organization_Id=9;
    //int32 Account_OrgId =10;
    //google.protobuf.Timestamp StartDate=10;
    //google.protobuf.Timestamp EndDate=11;
    //bool Active =12;
    bool Active =11;
  }

message AccountId
{
  int32 Id=1;
}
// // The account filter
message AccountFilter {
  int32 Id= 1;
  int32 OrganizationId= 2;
  AccountType AccountType=3;
  string AccountIds = 4;
}

// Account Preference
enum CurrencyType
    {
        //None = 'N',
        Euro = 0;
        Usdollar = 1;
        PondSterling = 2;
    }
    enum DateFormatDisplayType
    {
         //None = 'N',
        DayMonthYear= 0;
        MonthDayYear= 1;
        YearMonthDay= 2;
    }
    enum PreferenceType
    {
        //None = 'N',
        Account = 0;
        Organization = 1;
    }
    enum UnitType
    {
        // None = 'N',
        Metric= 0;
        Imperial= 1;
        Usimperial = 2;
    }
    enum VehicleDisplayType    
    {
        //None = 'N',
        RegistrationNumber= 0;
        Name= 1;
        Vin = 2;   
    }

    message AccountPreference
    {
        int32 Id =1;
        int32 Ref_Id =2;
        PreferenceType preferenceType =3;
        int32 Language_Id =4;
        int32 Timezone_Id =5;
        CurrencyType currency_Type =6;
        UnitType unit_Type = 7;
        VehicleDisplayType VehicleDisplay_Type =8;
        DateFormatDisplayType dateFormat_Type =9;
        string DriverId =10;
        bool Is_Active =11;
    }
    message AccountPreferenceResponse
    {
      Responcecode Code=1;
      string Message = 2;
      AccountPreference AccountPreference= 3;      
    }
    message AccountPreferenceDataList
    {
      Responcecode Code=1;
      string Message = 2;
      repeated AccountPreference Preference= 3;      
    }    
    message AccountPreferenceFilter
    {
        int32 Id =1;
        int32 Ref_Id =2;
        PreferenceType preference =3;
    }
// End - Account Preference 


// Begin Account Group
enum ObjectType{
  VehicleGroup = 0;
  AccountGroup = 1;
}

enum GroupType{
  Single = 0;
  Group = 1;
  Dynamic = 2;
}

enum FunctionEnum{
  All = 0;
}

message AccountGroupRef{
  
  int32 Group_Id = 1;
  int32 Ref_Id = 2;
}

message AccountGroupRequest{
  int32 Id=1;
  string Name= 2; 
  ObjectType ObjectType = 3;
  GroupType GroupType = 4;
  string Argument = 5;
  FunctionEnum FunctionEnum = 6;
  int32 OrganizationId = 7;
  int32 RefId = 8;
  string Description= 9;
  int32 GroupRefCount=10;
  repeated AccountGroupRef GroupRef = 11;
}
message AccountGroupResponce{
  int32 Id = 1;
  Responcecode code=2;
  string message = 3;  
  //repeated AccountGroupRef GroupRef = 4;
}
message AccountGroupDataList
    {
      Responcecode Code=1;
      string Message = 2;
      repeated AccountGroupRequest AccountGroupRequest= 3;      
    }
message AccountGroupFilterRequest{
  int32 Id=1;
  ObjectType ObjectType = 2;
  GroupType GroupType = 3;
  bool GroupRef = 4;
  bool GroupRefCount = 5;
  FunctionEnum FunctionEnum = 6;
  int32 OrganizationId = 7;
}
message AccountGroupDetailsRequest {
  int32 AccountId=1;  
  int32 OrganizationId = 2;
  int32 GroupId=3;
  int32 RoleId=4;
  string Name = 5;
}
message AccountGroupDetail {
  int32 GroupId=1;
  string AccountGroupName=2;    
  int32 VehicleCount = 3;
  int32 AccountCount = 4;
}
message AccountGroupDetailsDataList {
  repeated AccountGroupDetail AccountGroupDetail= 1;  
  Responcecode Code=2;
  string Message = 3;
}

message IdRequest {
  int32 Id = 1;
}
// End Account Group

// Begin Account Role

message AccountRole {
  int32 AccountId=1;
  int32 OrganizationId=2;    
  int32 RoleId = 3;  
}

message AccountRoleRequest {
  repeated AccountRole AccountRoles=1;  
}

message AccountRoleResponse{
  Responcecode Code=2;
  string Message = 3; 
}

// End Account Role