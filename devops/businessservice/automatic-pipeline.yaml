 # Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- development

stages:
- stage: Build_for_Dev_1
  jobs:
  - deployment: 
    displayName: Build for Dev 1
    variables:
     - group: DEV01-Build-Variables
    pool:
     name: dafct-dev1-privateagent
    environment: 'smarthotel-dev'
    strategy:
    # default deployment strategy, more coming...
     runOnce:
      deploy:
       steps:
       - task: replacetokens@3
         inputs:
            targetFiles: 'dotnet/businessservices/net.atos.daf.ct2.accountservice/appsettings.json'
            encoding: 'auto'
            writeBOM: true
            actionOnMissing: 'warn'
            keepToken: false
            tokenPrefix: '#{'
            tokenSuffix: '}#'
            useLegacyPattern: false
            enableTelemetry: true

       - task: CmdLine@2
         inputs:
            script: |
              cat dotnet/businessservices/net.atos.daf.ct2.accountservice/appsettings.json

       - task: replacetokens@3
         inputs:
            targetFiles: 'dotnet/businessservices/net.atos.daf.ct2.accountservice/log4net.config'
            encoding: 'auto'
            writeBOM: true
            actionOnMissing: 'warn'
            keepToken: false
            tokenPrefix: '#{'
            tokenSuffix: '}#'
            useLegacyPattern: false
            enableTelemetry: true

       - task: CmdLine@2
         inputs:
          script: |
            cat dotnet/businessservices/net.atos.daf.ct2.accountservice/log4net.config

       - task: Docker@0
         displayName: 'Build an image'
         inputs:
            azureSubscription:  $(Subscription)
            azureContainerRegistry: $(ContainerRegistry)
            dockerFile: dotnet/AccountService_Dockerfile
            imageName: accountservice-grpc-automatic-pipeline

       - task: Docker@0
         displayName: 'Push an image'
         inputs:
            azureSubscription: $(Subscription)
            azureContainerRegistry: $(ContainerRegistry)
            action: 'Push an image'
            imageName: accountservice-grpc-automatic-pipeline
  
- stage: Build_for_Dev_2
  jobs:
  - deployment: 
    displayName: Build for Dev 2
    variables:
     - group: DEV02-Build-Variables
    pool:
     name: dafct-dev2-privateagent
    environment: 'smarthotel-dev'
    strategy:
    # default deployment strategy, more coming...
     runOnce:
      deploy:
       steps:
       - task: replacetokens@3
         inputs:
            targetFiles: 'dotnet/businessservices/net.atos.daf.ct2.accountservice/appsettings.json'
            encoding: 'auto'
            writeBOM: true
            actionOnMissing: 'warn'
            keepToken: false
            tokenPrefix: '#{'
            tokenSuffix: '}#'
            useLegacyPattern: false
            enableTelemetry: true

       - task: CmdLine@2
         inputs:
            script: |
              cat dotnet/businessservices/net.atos.daf.ct2.accountservice/appsettings.json

       - task: replacetokens@3
         inputs:
            targetFiles: 'dotnet/businessservices/net.atos.daf.ct2.accountservice/log4net.config'
            encoding: 'auto'
            writeBOM: true
            actionOnMissing: 'warn'
            keepToken: false
            tokenPrefix: '#{'
            tokenSuffix: '}#'
            useLegacyPattern: false
            enableTelemetry: true

       - task: CmdLine@2
         inputs:
          script: |
            cat dotnet/businessservices/net.atos.daf.ct2.accountservice/log4net.config

       - task: Docker@0
         displayName: 'Build an image'
         inputs:
            azureSubscription:  $(Subscription)
            azureContainerRegistry: $(ContainerRegistry)
            dockerFile: dotnet/AccountService_Dockerfile
            imageName: accountservice-grpc-automatic-pipeline
        
       - task: Docker@0
         displayName: 'Push an image'
         inputs:
            azureSubscription: $(Subscription)
            azureContainerRegistry: $(ContainerRegistry)
            action: 'Push an image'
            imageName: accountservice-grpc-automatic-pipeline