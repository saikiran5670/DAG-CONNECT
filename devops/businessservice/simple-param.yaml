parameters:
- name: subscription
  type: string
  default: 'subscription'
- name: containerRegistry
  type: string
  default: 'containerRegistry'
- name: variableGroup
  type: string
  default: 'variableGroup'
- name: dockerFile
  type: string
  default: 'dockerFile'
- name: imageName
  type: string
  default: 'imageName'
- name: manifestFile
  type: string
  default: 'manifestFile'


jobs:
- job:
  pool: $(PRIVATEAGENT)
  variables:
  - group: ${{ parameters.variableGroup }}
  steps:
  - task: replacetokens@3
    inputs:
      targetFiles: 'dotnet/businessservices/net.atos.daf.ct2.accountservice/appsettings.json'
      encoding: 'auto'
      writeBOM: true
      actionOnMissing: 'warn'
      keepToken: false
      tokenPrefix: '#{'
      tokenSuffix: '}#'
      useLegacyPattern: false
      enableTelemetry: true

  - task: CmdLine@2
    inputs:
        script: |
          cat dotnet/businessservices/net.atos.daf.ct2.accountservice/appsettings.json

  - task: replacetokens@3
    inputs:
      targetFiles: 'dotnet/businessservices/net.atos.daf.ct2.accountservice/log4net.config'
      encoding: 'auto'
      writeBOM: true
      actionOnMissing: 'warn'
      keepToken: false
      tokenPrefix: '#{'
      tokenSuffix: '}#'
      useLegacyPattern: false
      enableTelemetry: true
      
  - task: Docker@0
    displayName: 'Build an image'
    inputs:
      azureSubscription: ${{ parameters.Subscription }}
      azureContainerRegistry:  ${{ parameters.ContainerRegistry }}
      dockerFile: ${{ parameters.dockerFile }}
      imageName: ${{ parameters.imageName }}

  - task: Docker@0
    displayName: 'Push an image'
    inputs:
      azureSubscription:  ${{ parameters.Subscription }}
      azureContainerRegistry:  ${{ parameters.ContainerRegistry }}
      action: 'Push an image'
      imageName: ${{ parameters.imageName }}
  
  - task: CmdLine@2
    inputs:
      script: |
        echo ${{ parameters.manifestFile }}

  - task: CopyFiles@2
    displayName: 'Copy Kubernetes manifest'
    inputs:
      SourceFolder: '$(system.defaultworkingdirectory)'
      Contents: ${{ parameters.manifestFile }} 
      TargetFolder: '$(build.artifactstagingdirectory)'

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: Drop'
    inputs:
      PathtoPublish: '$(build.artifactstagingdirectory)'