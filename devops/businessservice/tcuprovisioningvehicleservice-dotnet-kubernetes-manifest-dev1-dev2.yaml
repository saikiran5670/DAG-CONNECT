apiVersion: apps/v1
kind: Deployment
metadata:
  name: tcuprovisioningvehicleservice-deployment
  labels:
    app.kubernetes.io/name: tcuprovisioningvehicleservice
    app.kubernetes.io/type: businessservice
spec:
  template:
    metadata:
      annotations:
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
      labels:
        app.kubernetes.io/name: tcuprovisioningvehicleservice
        app.kubernetes.io/type: businessservice
    spec:
      automountServiceAccountToken: false
      securityContext:
        runAsUser: 10001
        runAsGroup: 3000
        runAsNonRoot: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                - tcuprovisioningvehicleservice
              - key: app.kubernetes.io/type
                operator: In
                values:
                - businessservice
            topologyKey: "kubernetes.io/hostname"
      containers:
      - name: tcuprovisioningvehicleservice-container
        image: #{acrurl}#/tcuprovisioningvehicleservice
        imagePullPolicy: "Always"
        volumeMounts:
        - name: log
          mountPath: /app/log
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
             - all
        resources:
          limits:
            cpu: 100m
            memory: 256Mi
          requests:
            cpu: 50m
            memory: 128Mi
        env:
        - name: ASPNETCORE_URLS
          value: "http://*:8080"
        - name: COMPlus_EnableDiagnostics
          value: "0"
        ports:
          - containerPort: 8080
      volumes:
      - name: log
        emptyDir: {}
      nodeSelector:
        agentpool: npuser01         
  selector:
    matchLabels:
        app.kubernetes.io/name: tcuprovisioningvehicleservice
        app.kubernetes.io/type: businessservice
---
apiVersion: v1
kind: Service
metadata:
  name: tcuprovisioningvehicleservice
  labels:
    svc.kubernetes.io/name: tcuprovisioningvehicleservice
    svc.kubernetes.io/type: businessservice
  annotations:
    service.beta.kubernetes.io/azure-load-balancer-internal: "true"
spec:
  type: ClusterIP
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8080
  selector:
    app.kubernetes.io/name: tcuprovisioningvehicleservice
    app.kubernetes.io/type: businessservice

---
kind: HorizontalPodAutoscaler 
apiVersion: autoscaling/v2beta1 
metadata: 
  name: tcuprovisioningvehicleservice-hpa
  labels:
    hpa.kubernetes.io/name: tcuprovisioningvehicleservice
    hpa.kubernetes.io/type: businessservice 
spec: 
  maxReplicas: 5 
  minReplicas: 1
  scaleTargetRef: 
    apiVersion: apps/v1 
    kind: Deployment 
    name: tcuprovisioningvehicleservice-deployment 
  metrics: 
  - type: Resource 
    resource: 
      name: cpu 
      targetAverageUtilization: 70