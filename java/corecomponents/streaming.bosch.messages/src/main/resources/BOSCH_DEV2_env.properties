


#Flink properties
parallelism=1
checkpoint_interval=120000
min_checkpoint_pause=500
checkpoint_timeout=240000
max_concurrent_checkpoints=1
checkpoint_directory_index=file:///daf/ct2/flink/indexDatacheckpoints
checkpoint_directory_status=file:///daf/ct2/flink/statusdatacheckpoints
checkpoint_directory_monitor=file:///daf/ct2/flink/monitordatacheckpoints
restart_attempts=2
restart_interval=2000

###HBase properties
hbase.zookeeper.quorum=zk0-hbase.m22ew3hbsyaurnkjauftc1mbxg.ax.internal.cloudapp.net,zk1-hbase.m22ew3hbsyaurnkjauftc1mbxg.ax.internal.cloudapp.net,zk4-hbase.m22ew3hbsyaurnkjauftc1mbxg.ax.internal.cloudapp.net
hbase.zookeeper.property.clientPort=2181
zookeeper.znode.parent=/hbase-unsecure

#group.id=ct2contiprocessing_group100

#hbase.regionserver=wn1-hbase.c0kbh01dsx0uhhbdv5oig221gb.ax.internal.cloudapp.net,wn2-hbase.c0kbh01dsx0uhhbdv5oig221gb.ax.internal.cloudapp.net,wn3-hbase.c0kbh01dsx0uhhbdv5oig221gb.ax.internal.cloudapp.net

hbase.master=zk0-hbase.m22ew3hbsyaurnkjauftc1mbxg.ax.internal.cloudapp.net:16000
#hbase.regionserver.port=16020
hbase.rootdir=/hbase

#hbase.table.name=dafctetl:data_bosch_test
#bosch.historical.table.name=dafctetl:data_bosch_test
#bosch.historical.table.colfm=cfraw



##GRPC

grpc_server=10.20.128.107
grpc_port=80

###PostgreSQL

postgresql_driver=org.postgresql.Driver
postgresql_password=lx7w+hs&}Iq!
server_name=jdbc:postgresql://dafct-lan2-d-euwe-cdp-pgsql-datamart.postgres.database.azure.com
port=5432
postgres_database_name=vehicledatamart
userId=pgrdm_dbcreator_dev2@dafct-lan2-d-euwe-cdp-pgsql-datamart

#Master Datamart
master_postgre_server_name=jdbc:postgresql://dafct-lan2-d-euwe-cdp-pgsql-master.postgres.database.azure.com
master_postgre_port=5432
master_postgre_userId=pgdbadmin@dafct-lan2-d-euwe-cdp-pgsql-master
master_postgre_database_name=dafconnectmasterdatabase
master_postgre_password=PgdbLogin@21

#job names
IndexJob=IndexJob
MonitorJob=MonitorJob
StatusJob=StatusJob

#queries
driver.activity.query=INSERT INTO livefleet.livefleet_trip_driver_activity  (trip_id    , trip_start_time_stamp , trip_end_time_stamp   , activity_date,  vin   , driver_id     , code  , start_time    , end_time      , duration      , created_at_m2m        , created_at_kafka      , created_at_dm , modified_at   , last_processed_message_time_stamp     ) VALUES ( ?, ?, ?, ?   , ?,?, ?, ?, ?, ?       , ?     , ?     , ?     , ?     ,?)
driver.activity.read.query=SELECT * FROM livefleet.livefleet_trip_driver_activity WHERE trip_start_time_stamp !=0 AND trip_id = ?
livefleet.position.query=INSERT INTO livefleet.livefleet_position_statistics ( trip_id  , vin   ,message_time_stamp     ,gps_altitude   ,gps_heading    ,gps_latitude   ,gps_longitude  ,co2_emission   ,fuel_consumption       , last_odometer_val  ,distance_until_next_service       , created_at_m2m        ,created_at_kafka       ,created_at_dm  ) VALUES (?     ,?      ,?      ,?      ,?      ,?      ,?      ,?      ,?      ,?      ,?      ,?      ,?      ,?      )
livefleet.trip.statistics.query=INSERT INTO livefleet.livefleet_current_trip_statistics ( trip_id   , vin        ,start_time_stamp          ,end_time_stamp                ,driver1_id          ,start_position_lattitude              ,start_position_longitude             ,start_position                ,last_received_position_lattitude             , last_received_position_longitude  ,last_known_position                ,vehicle_status ,driver1_status ,vehicle_health_status  ,last_odometer_val ,distance_until_next_service ,last_processed_message_time_stamp ,driver2_id ,driver2_status ,created_at_m2m ,created_at_kafka ,created_at_dm_ ,modified_at ) VALUES (? ,?         ,?            ,?            ,?            ,?            ,?            ,?            ,?            ,?            ,?                ,?            ,?            ,? ,? ,?   ,?            ,?            ,?            ,?            ,?            ,?            ,?            )
livefleet.trip.read.query=SELECT * FROM livefleet.livefleet_current_trip_statistics WHERE trip_id = ? ORDER BY created_at_m2m ASC limit 1
livefleet.position.read.query=SELECT distance_until_next_service from livefleet.livefleet_position_statistics WHERE vin = ? ORDER BY created_at_m2m DESC limit 1
livefleet.trip.read.query.fuel.consumption=SELECT fuel_consumption FROM livefleet.livefleet_current_trip_statistics WHERE trip_id = ? ORDER BY created_at_m2m DESC limit 1
master.co2coefficient.read.query= SELECT fuel_type,coefficient from master.co2coefficient














#############Bosch properties###########


#Kafka properties



##KAFKA
auto.offset.reset=latest
client.id=Bosch_ct2_ingress_client
group.id=ct2coBoschrocessing_group88
request.timeout.ms=6000
bootstrap.servers=daf-lan2-d-euwe-cdp-evh-int.servicebus.windows.net:9093
security.protocol=SASL_SSL
sasl.mechanism=PLAIN
sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username='$ConnectionString' password='Endpoint=sb://daf-lan2-d-euwe-cdp-evh-int.servicebus.windows.net/;SharedAccessKeyName=RootManageSharedAccessKey;SharedAccessKey=t4FskguopPHqRbS3Cq5HSBgmRLtZ0DSd6Upo8RE5VF4=';

##TOPICS
Index_Topic=egress.bosch.indexdata.object
Monitoring_Topic=egress.bosch.monitordata.object
Status_Topic=egress.bosch.statusdata.object


bosch.historical.table.name=dafctetl:tblboschdata
bosch.historical.table.colfm=cfraw


#job names
IndexJob=IndexJob
MonitorJob=MonitorJob
StatusJob=StatusJob





#source
source.topic.name=ingress.conti.vehicledata.string
source.bosch.topic.name=ingress.bosch.vehicledata.string

#sink
sink.index.topic.name=egress.bosch.indexdata.object
sink.status.topic.name=egress.bosch.statusdata.object
sink.monitor.topic.name=egress.bosch.monitordata.object


filter.index.transid=1000
filter.status.transid=1100
filter.monitor.transid=1300

index.transid=1000
status.transid=1100
monitor.transid=1300 

conti.index.transid=03000
conti.status.transid=03010
conti.monitor.transid=03030


#HBase key - sourceName
INDEXKEY=INDEX
MONITORKEY=MONITOR
STATUSKEY=STATUS

BOSCH_JOB_NAME=Bosch Streaming

#Hbase store enable or disable
sink.hbase.store=TRUE