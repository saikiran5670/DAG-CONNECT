driver.class.name=org.postgresql.Driver
# Database Properties
datamart.database=postgres
datamart.username=postgres
datamart.password=root
datamart.host.name=localhost
datamart.port=5432
datamart.ssl=disable

# master database Properties
master.database=postgres
master.username=postgres
master.password=root
master.host.name=localhost
master.port=5432
master.ssl=disable

#KAFKA alerts topic
daf.alert.cdc.topic=internal.alerts.cdc.string
daf.status.topic=egress.conti.statusdata.object
daf.alert.produce.topic=egress.alerts.produce.string

#Kafka connection properties
request.timeout.ms=6000
client.id=alertsprocessing_client
auto.offset.reset=latest
group.id=alertsprocessing_grp
bootstrap.servers=localhost:9092

#KAFKA connection status object properties
status.object.bootstrap.servers=localhost:9092
# DB Fetch Queries
#If change in select clause we must change the type information
postgres.threshold.fetch.query=SELECT distinct  ale_id,  ale_category,  ale_type, ale_state,  aleurg_urgency_level_type,  aleurg_threshold_value,  aleurg_unit_type FROM  threshold_tbl where aleurg_threshold_value is not NULL AND ale_id=
postgres.alert.map.fetch.query=select Id, vin, alert_id from public.vehiclealertref
postgres.alert.threshold.fetch.query=SELECT distinct  ale_id,  ale_category,  ale_type, ale_state,  aleurg_urgency_level_type,  aleurg_threshold_value,  aleurg_unit_type FROM  threshold_tbl where aleurg_threshold_value is not NULL

#DB insert query for alert
postgres.insert.into.alerts=INSERT INTO tripalert(trip_id, vin, category_type, type, alert_id, alert_generated_time, created_at, urgency_level_type) VALUES (?, ?, ?, ?, ?, ?, ?, ?)
