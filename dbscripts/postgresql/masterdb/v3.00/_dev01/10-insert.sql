INSERT INTO master.feature  (id, name , type , data_attribute_set_id , key, level,state)   
SELECT 456,'Configuration.TermsAndCondition','F',null,'feat_config_termsandcondition',20,'A' 
WHERE NOT EXISTS  (   SELECT 1   FROM master.feature   WHERE name ='Configuration.TermsAndCondition');

insert into master.menu (id ,name  ,parent_id ,  feature_id,seq_no,key,state,url,sort_id) 
select 41,'Terms And Condition',(select id from master.menu where name='Configuration'),
(select id from master.feature where name='Configuration.TermsAndCondition'),6,'lblTermsAndCondition','A','termsandcondition' ,22
WHERE NOT EXISTS  (   SELECT 1   FROM master.menu   WHERE name ='Terms And Condition');

INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)  
SELECT 'EN-GB','L','feat_config_termsandcondition','Configuration.TermsAndCondition',(select extract(epoch from now()) * 1000),null 
WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'feat_config_termsandcondition');

INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   
SELECT 'feat_config_termsandcondition',(select id from master.menu where name = 'Terms And Condition'),'L' 
WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'feat_config_termsandcondition' 
and ref_id=(select id from master.menu where name = 'Terms And Condition'));

INSERT INTO master.feature  (id, name , type ,  data_attribute_set_id , key, level,state)   
SELECT 457,'Configuration.DTCTranslation','F',null,'feat_config_dtctranslation',20,'A' 
WHERE NOT EXISTS  (   SELECT 1   FROM master.feature   WHERE name ='Configuration.DTCTranslation');

insert into master.menu (id ,name ,parent_id ,  feature_id,seq_no,key,state,url,sort_id) 
select 42,'DTC Translation',(select id from master.menu where name='Configuration'),
(select id from master.feature where name='Configuration.DTCTranslation'),7,'lblDTCTranslation','A','dtctranslation',23 
WHERE NOT EXISTS  (   SELECT 1   FROM master.menu   WHERE name ='DTC Translation');

INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)  
SELECT 'EN-GB','L','feat_config_dtctranslation','Configuration.DTCTranslation',(select extract(epoch from now()) * 1000),null 
WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'feat_config_dtctranslation');

INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   
SELECT 'feat_config_dtctranslation',(select id from master.menu where name = 'DTC Translation'),'L' 
WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'feat_config_dtctranslation' 
and ref_id=(select id from master.menu where name = 'DTC Translation'));

INSERT INTO master.feature  (id, name , type , data_attribute_set_id , key, level,state)   
SELECT 761,'TermsAndConditionHistory','F',null,'feat_config_termsandconditionhistory',40,'A' 
WHERE NOT EXISTS  (   SELECT 1   FROM master.feature   WHERE name ='TermsAndConditionHistory');

insert into master.menu (id ,name  ,parent_id ,  feature_id,seq_no,key,state,url,sort_id) 
select 43,'Terms And Condition History',null,
(select id from master.feature where name='TermsAndConditionHistory'),11,'lblTermsAndConditionHistory','A','termsAndconditionhistory' ,43
WHERE NOT EXISTS  (   SELECT 1   FROM master.menu   WHERE name ='Terms And Condition History');

INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)  
SELECT 'EN-GB','L','feat_config_termsandconditionhistory','TermsAndConditionHistory',(select extract(epoch from now()) * 1000),null 
WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'feat_config_termsandconditionhistory');

INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   
SELECT 'feat_config_termsandconditionhistory',(select id from master.menu where name = 'Terms And Condition History'),'L' 
WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'feat_config_termsandconditionhistory' 
and ref_id=(select id from master.menu where name = 'Terms And Condition History'));


alter table master.menu alter column sort_id set not null;
update master.menu set name='Fleet Overview' , key='lblfleetoverview',url='fleetoverview' where id=2;
update translation.translationgrouping  set name=replace(name,'livefleet','fleetoverview') 
where name like '%livefleet%';
update translation.translationgrouping  set name=replace(update translation.translation  set name=replace(name,'LiveFleet','FleetOverview') 
where name like '%LiveFleet%';
update translation.translation  set value=replace(value,'Live Fleet','Fleet Overview') 
where value like '%Live Fleet%';
update translation.translation  set value=replace(value,'LiveFleet','FleetOverview') 
where value like '%LiveFleet%';
update translation.translation  set name=replace(name,'livefleet','fleetoverview') 
where name like '%livefleet%';
update master.feature  set name=replace(name,'LiveFleet','FleetOverview') 
where name like '%LiveFleet%';
update master.feature  set name=replace(name,'Live Fleet','Fleet Overview') 
where name like '%Live Fleet%';
update master.feature  set name=replace(name,'livefleet','fleetoverview') 
where name like '%livefleet%';
update master.feature  set name=replace(name,'live fleet','fleet overview') 
where name like '%live fleet%';


/* replace the text in feature and translation table 
select * from translation.translation where lower(name) like '%live fleet%'
select * from translation.translation where lower(value) like '%live fleet%'
select * from master.feature where lower(name) like '%livefleet%'

*/

INSERT INTO master.icon  (type , warning_class ,warning_number , name , color_name , state , created_at  , created_by)   select 'D',4,5,'671-red_dsym0334.svg',LEFT('Red',1),'A',(select extract(epoch from now()) * 1000),(select min(id) from master.account) WHERE NOT EXISTS  (   SELECT 1   FROM master.icon   WHERE warning_class=4 and warning_number=5 and name='671-red_dsym0334.svg');
INSERT INTO master.icon  (type , warning_class ,warning_number , name , color_name , state , created_at  , created_by)   select 'D',5,0,'673-red_dsym0365.svg',LEFT('Red',1),'A',(select extract(epoch from now()) * 1000),(select min(id) from master.account) WHERE NOT EXISTS  (   SELECT 1   FROM master.icon   WHERE warning_class=5 and warning_number=0 and name='673-red_dsym0365.svg');
INSERT INTO master.icon  (type , warning_class ,warning_number , name , color_name , state , created_at  , created_by)   select 'D',5,1,'664-red_dsym027.svg',LEFT('Red',1),'A',(select extract(epoch from now()) * 1000),(select min(id) from master.account) WHERE NOT EXISTS  (   SELECT 1   FROM master.icon   WHERE warning_class=5 and warning_number=1 and name='664-red_dsym027.svg');
INSERT INTO master.icon  (type , warning_class ,warning_number , name , color_name , state , created_at  , created_by)   select 'D',5,2,'674-red_dsym0366.svg',LEFT('Red',1),'A',(select extract(epoch from now()) * 1000),(select min(id) from master.account) WHERE NOT EXISTS  (   SELECT 1   FROM master.icon   WHERE warning_class=5 and warning_number=2 and name='674-red_dsym0366.svg');
INSERT INTO master.icon  (type , warning_class ,warning_number , name , color_name , state , created_at  , created_by)   select 'D',5,3,'1957-red_dsym0386.svg',LEFT('Red',1),'A',(select extract(epoch from now()) * 1000),(select min(id) from master.account) WHERE NOT EXISTS  (   SELECT 1   FROM master.icon   WHERE warning_class=5 and warning_number=3 and name='1957-red_dsym0386.svg');
INSERT INTO master.icon  (type , warning_class ,warning_number , name , color_name , state , created_at  , created_by)   select 'D',6,1,'692-red_dsym0356.svg',LEFT('Red',1),'A',(select extract(epoch from now()) * 1000),(select min(id) from master.account) WHERE NOT EXISTS  (   SELECT 1   FROM master.icon   WHERE warning_class=6 and warning_number=1 and name='692-red_dsym0356.svg');
INSERT INTO master.icon  (type , warning_class ,warning_number , name , color_name , state , created_at  , created_by)   select 'D',6,2,'662-red_dsym025.svg',LEFT('Red',1),'A',(select extract(epoch from now()) * 1000),(select min(id) from master.account) WHERE NOT EXISTS  (   SELECT 1   FROM master.icon   WHERE warning_class=6 and warning_number=2 and name='662-red_dsym025.svg');
INSERT INTO master.icon  (type , warning_class ,warning_number , name , color_name , state , created_at  , created_by)   select 'D',6,4,'2020-red_dsym0335.svg',LEFT('Red',1),'A',(select extract(epoch from now()) * 1000),(select min(id) from master.account) WHERE NOT EXISTS  (   SELECT 1   FROM master.icon   WHERE warning_class=6 and warning_number=4 and name='2020-red_dsym0335.svg');
INSERT INTO master.icon  (type , warning_class ,warning_number , name , color_name , state , created_at  , created_by)   select 'D',6,5,'691-red_dsym0335.svg',LEFT('Red',1),'A',(select extract(epoch from now()) * 1000),(select min(id) from master.account) WHERE NOT EXISTS  (   SELECT 1   FROM master.icon   WHERE warning_class=6 and warning_number=5 and name='691-red_dsym0335.svg');
INSERT INTO master.icon  (type , warning_class ,warning_number , name , color_name , state , created_at  , created_by)   select 'D',7,0,'2086-red_dsym030.svg',LEFT('Red',1),'A',(select extract(epoch from now()) * 1000),(select min(id) from master.account) WHERE NOT EXISTS  (   SELECT 1   FROM master.icon   WHERE warning_class=7 and warning_number=0 and name='2086-red_dsym030.svg');
INSERT INTO master.icon  (type , warning_class ,warning_number , name , color_name , state , created_at  , created_by)   select 'D',7,2,'668-red_dsym059.svg',LEFT('Red',1),'A',(select extract(epoch from now()) * 1000),(select min(id) from master.account) WHERE NOT EXISTS  (   SELECT 1   FROM master.icon   WHERE warning_class=7 and warning_number=2 and name='668-red_dsym059.svg');
INSERT INTO master.icon  (type , warning_class ,warning_number , name , color_name , state , created_at  , created_by)   select 'D',7,3,'666-red_dsym0357.svg',LEFT('Red',1),'A',(select extract(epoch from now()) * 1000),(select min(id) from master.account) WHERE NOT EXISTS  (   SELECT 1   FROM master.icon   WHERE warning_class=7 and warning_number=3 and name='666-red_dsym0357.svg');
INSERT INTO master.icon  (type , warning_class ,warning_number , name , color_name , state , created_at  , created_by)   select 'D',7,4,'671-red_dsym0334.svg',LEFT('Red',1),'A',(select extract(epoch from now()) * 1000),(select min(id) from master.account) WHERE NOT EXISTS  (   SELECT 1   FROM master.icon   WHERE warning_class=7 and warning_number=4 and name='671-red_dsym0334.svg');
INSERT INTO master.icon  (type , warning_class ,warning_number , name , color_name , state , created_at  , created_by)   select 'D',7,6,'692-red_dsym0356.svg',LEFT('Red',1),'A',(select extract(epoch from now()) * 1000),(select min(id) from master.account) WHERE NOT EXISTS  (   SELECT 1   FROM master.icon   WHERE warning_class=7 and warning_number=6 and name='692-red_dsym0356.svg');
INSERT INTO master.icon  (type , warning_class ,warning_number , name , color_name , state , created_at  , created_by)   select 'D',7,7,'672-red_dsym085.svg',LEFT('Red',1),'A',(select extract(epoch from now()) * 1000),(select min(id) from master.account) WHERE NOT EXISTS  (   SELECT 1   FROM master.icon   WHERE warning_class=7 and warning_number=7 and name='672-red_dsym085.svg');
INSERT INTO master.icon  (type , warning_class ,warning_number , name , color_name , state , created_at  , created_by)   select 'D',7,8,'671-red_dsym0334.svg',LEFT('Red',1),'A',(select extract(epoch from now()) * 1000),(select min(id) from master.account) WHERE NOT EXISTS  (   SELECT 1   FROM master.icon   WHERE warning_class=7 and warning_number=8 and name='671-red_dsym0334.svg');
INSERT INTO master.icon  (type , warning_class ,warning_number , name , color_name , state , created_at  , created_by)   select 'D',7,13,'691-red_dsym0335.svg',LEFT('Red',1),'A',(select extract(epoch from now()) * 1000),(select min(id) from master.account) WHERE NOT EXISTS  (   SELECT 1   FROM master.icon   WHERE warning_class=7 and warning_number=13 and name='691-red_dsym0335.svg');
INSERT INTO master.icon  (type , warning_class ,warning_number , name , color_name , state , created_at  , created_by)   select 'D',8,0,'673-yellow_dsym0365.svg',LEFT('Yellow',1),'A',(select extract(epoch from now()) * 1000),(select min(id) from master.account) WHERE NOT EXISTS  (   SELECT 1   FROM master.icon   WHERE warning_class=8 and warning_number=0 and name='673-yellow_dsym0365.svg');
INSERT INTO master.icon  (type , warning_class ,warning_number , name , color_name , state , created_at  , created_by)   select 'D',8,1,'674-yellow_dsym0366.svg',LEFT('Yellow',1),'A',(select extract(epoch from now()) * 1000),(select min(id) from master.account) WHERE NOT EXISTS  (   SELECT 1   FROM master.icon   WHERE warning_class=8 and warning_number=1 and name='674-yellow_dsym0366.svg');
INSERT INTO master.icon  (type , warning_class ,warning_number , name , color_name , state , created_at  , created_by)   select 'D',8,6,'691-yellow_dsym0335.svg',LEFT('Yellow',1),'A',(select extract(epoch from now()) * 1000),(select min(id) from master.account) WHERE NOT EXISTS  (   SELECT 1   FROM master.icon   WHERE warning_class=8 and warning_number=6 and name='691-yellow_dsym0335.svg');
INSERT INTO master.icon  (type , warning_class ,warning_number , name , color_name , state , created_at  , created_by)   select 'D',8,7,'2086-yellow_dsym030.svg',LEFT('Yellow',1),'A',(select extract(epoch from now()) * 1000),(select min(id) from master.account) WHERE NOT EXISTS  (   SELECT 1   FROM master.icon   WHERE warning_class=8 and warning_number=7 and name='2086-yellow_dsym030.svg');
INSERT INTO master.icon  (type , warning_class ,warning_number , name , color_name , state , created_at  , created_by)   select 'D',8,15,'712-yellow_dsym0420.svg',LEFT('Yellow',1),'A',(select extract(epoch from now()) * 1000),(select min(id) from master.account) WHERE NOT EXISTS  (   SELECT 1   FROM master.icon   WHERE warning_class=8 and warning_number=15 and name='712-yellow_dsym0420.svg');
INSERT INTO master.icon  (type , warning_class ,warning_number , name , color_name , state , created_at  , created_by)   select 'D',9,3,'693-yellow_dsym084.svg',LEFT('Yellow',1),'A',(select extract(epoch from now()) * 1000),(select min(id) from master.account) WHERE NOT EXISTS  (   SELECT 1   FROM master.icon   WHERE warning_class=9 and warning_number=3 and name='693-yellow_dsym084.svg');
INSERT INTO master.icon  (type , warning_class ,warning_number , name , color_name , state , created_at  , created_by)   select 'D',9,6,'692-yellow_dsym0356.svg',LEFT('Yellow',1),'A',(select extract(epoch from now()) * 1000),(select min(id) from master.account) WHERE NOT EXISTS  (   SELECT 1   FROM master.icon   WHERE warning_class=9 and warning_number=6 and name='692-yellow_dsym0356.svg');
INSERT INTO master.icon  (type , warning_class ,warning_number , name , color_name , state , created_at  , created_by)   select 'D',9,7,'692-yellow_dsym0356.svg',LEFT('Yellow',1),'A',(select extract(epoch from now()) * 1000),(select min(id) from master.account) WHERE NOT EXISTS  (   SELECT 1   FROM master.icon   WHERE warning_class=9 and warning_number=7 and name='692-yellow_dsym0356.svg');
INSERT INTO master.icon  (type , warning_class ,warning_number , name , color_name , state , created_at  , created_by)   select 'D',9,11,'672-yellow_dsym085.svg',LEFT('Yellow',1),'A',(select extract(epoch from now()) * 1000),(select min(id) from master.account) WHERE NOT EXISTS  (   SELECT 1   FROM master.icon   WHERE warning_class=9 and warning_number=11 and name='672-yellow_dsym085.svg');
INSERT INTO master.icon  (type , warning_class ,warning_number , name , color_name , state , created_at  , created_by)   select 'D',9,12,'672-yellow_dsym085.svg',LEFT('Yellow',1),'A',(select extract(epoch from now()) * 1000),(select min(id) from master.account) WHERE NOT EXISTS  (   SELECT 1   FROM master.icon   WHERE warning_class=9 and warning_number=12 and name='672-yellow_dsym085.svg');
INSERT INTO master.icon  (type , warning_class ,warning_number , name , color_name , state , created_at  , created_by)   select 'D',9,16,'691-yellow_dsym0335.svg',LEFT('Yellow',1),'A',(select extract(epoch from now()) * 1000),(select min(id) from master.account) WHERE NOT EXISTS  (   SELECT 1   FROM master.icon   WHERE warning_class=9 and warning_number=16 and name='691-yellow_dsym0335.svg');
INSERT INTO master.icon  (type , warning_class ,warning_number , name , color_name , state , created_at  , created_by)   select 'D',9,22,'2075-yellow_dsym0349.svg',LEFT('Yellow',1),'A',(select extract(epoch from now()) * 1000),(select min(id) from master.account) WHERE NOT EXISTS  (   SELECT 1   FROM master.icon   WHERE warning_class=9 and warning_number=22 and name='2075-yellow_dsym0349.svg');
INSERT INTO master.icon  (type , warning_class ,warning_number , name , color_name , state , created_at  , created_by)   select 'D',9,23,'2072-yellow.svg',LEFT('Yellow',1),'A',(select extract(epoch from now()) * 1000),(select min(id) from master.account) WHERE NOT EXISTS  (   SELECT 1   FROM master.icon   WHERE warning_class=9 and warning_number=23 and name='2072-yellow.svg');
INSERT INTO master.icon  (type , warning_class ,warning_number , name , color_name , state , created_at  , created_by)   select 'D',9,29,'2075-yellow_dsym0349.svg',LEFT('Yellow',1),'A',(select extract(epoch from now()) * 1000),(select min(id) from master.account) WHERE NOT EXISTS  (   SELECT 1   FROM master.icon   WHERE warning_class=9 and warning_number=29 and name='2075-yellow_dsym0349.svg');
INSERT INTO master.icon  (type , warning_class ,warning_number , name , color_name , state , created_at  , created_by)   select 'D',9,40,'712-yellow_dsym0420.svg',LEFT('Yellow',1),'A',(select extract(epoch from now()) * 1000),(select min(id) from master.account) WHERE NOT EXISTS  (   SELECT 1   FROM master.icon   WHERE warning_class=9 and warning_number=40 and name='712-yellow_dsym0420.svg');
INSERT INTO master.icon  (type , warning_class ,warning_number , name , color_name , state , created_at  , created_by)   select 'D',9,41,'691-yellow_dsym0335.svg',LEFT('Yellow',1),'A',(select extract(epoch from now()) * 1000),(select min(id) from master.account) WHERE NOT EXISTS  (   SELECT 1   FROM master.icon   WHERE warning_class=9 and warning_number=41 and name='691-yellow_dsym0335.svg');
INSERT INTO master.icon  (type , warning_class ,warning_number , name , color_name , state , created_at  , created_by)   select 'D',10,4,'679-yellow_dsym0322.svg',LEFT('Yellow',1),'A',(select extract(epoch from now()) * 1000),(select min(id) from master.account) WHERE NOT EXISTS  (   SELECT 1   FROM master.icon   WHERE warning_class=10 and warning_number=4 and name='679-yellow_dsym0322.svg');
INSERT INTO master.icon  (type , warning_class ,warning_number , name , color_name , state , created_at  , created_by)   select 'D',10,6,'708-yellow_dsym0389.svg',LEFT('Yellow',1),'A',(select extract(epoch from now()) * 1000),(select min(id) from master.account) WHERE NOT EXISTS  (   SELECT 1   FROM master.icon   WHERE warning_class=10 and warning_number=6 and name='708-yellow_dsym0389.svg');
INSERT INTO master.icon  (type , warning_class ,warning_number , name , color_name , state , created_at  , created_by)   select 'D',10,7,'664-yellow_dsym027.svg',LEFT('Yellow',1),'A',(select extract(epoch from now()) * 1000),(select min(id) from master.account) WHERE NOT EXISTS  (   SELECT 1   FROM master.icon   WHERE warning_class=10 and warning_number=7 and name='664-yellow_dsym027.svg');
INSERT INTO master.icon  (type , warning_class ,warning_number , name , color_name , state , created_at  , created_by)   select 'D',10,10,'671-yellow_dsym0334.svg',LEFT('Yellow',1),'A',(select extract(epoch from now()) * 1000),(select min(id) from master.account) WHERE NOT EXISTS  (   SELECT 1   FROM master.icon   WHERE warning_class=10 and warning_number=10 and name='671-yellow_dsym0334.svg');
INSERT INTO master.icon  (type , warning_class ,warning_number , name , color_name , state , created_at  , created_by)   select 'D',10,11,'691-yellow_dsym0335.svg',LEFT('Yellow',1),'A',(select extract(epoch from now()) * 1000),(select min(id) from master.account) WHERE NOT EXISTS  (   SELECT 1   FROM master.icon   WHERE warning_class=10 and warning_number=11 and name='691-yellow_dsym0335.svg');
INSERT INTO master.icon  (type , warning_class ,warning_number , name , color_name , state , created_at  , created_by)   select 'D',10,13,'715-yellow_dsym0341.svg',LEFT('Yellow',1),'A',(select extract(epoch from now()) * 1000),(select min(id) from master.account) WHERE NOT EXISTS  (   SELECT 1   FROM master.icon   WHERE warning_class=10 and warning_number=13 and name='715-yellow_dsym0341.svg');
INSERT INTO master.icon  (type , warning_class ,warning_number , name , color_name , state , created_at  , created_by)   select 'D',10,20,'664-yellow_dsym027.svg',LEFT('Yellow',1),'A',(select extract(epoch from now()) * 1000),(select min(id) from master.account) WHERE NOT EXISTS  (   SELECT 1   FROM master.icon   WHERE warning_class=10 and warning_number=20 and name='664-yellow_dsym027.svg');
INSERT INTO master.icon  (type , warning_class ,warning_number , name , color_name , state , created_at  , created_by)   select 'D',10,41,'696-yellow_dsym197.svg',LEFT('Yellow',1),'A',(select extract(epoch from now()) * 1000),(select min(id) from master.account) WHERE NOT EXISTS  (   SELECT 1   FROM master.icon   WHERE warning_class=10 and warning_number=41 and name='696-yellow_dsym197.svg');
INSERT INTO master.icon  (type , warning_class ,warning_number , name , color_name , state , created_at  , created_by)   select 'D',10,42,'696-yellow_dsym197.svg',LEFT('Yellow',1),'A',(select extract(epoch from now()) * 1000),(select min(id) from master.account) WHERE NOT EXISTS  (   SELECT 1   FROM master.icon   WHERE warning_class=10 and warning_number=42 and name='696-yellow_dsym197.svg');
INSERT INTO master.icon  (type , warning_class ,warning_number , name , color_name , state , created_at  , created_by)   select 'D',10,43,'696-yellow_dsym197.svg',LEFT('Yellow',1),'A',(select extract(epoch from now()) * 1000),(select min(id) from master.account) WHERE NOT EXISTS  (   SELECT 1   FROM master.icon   WHERE warning_class=10 and warning_number=43 and name='696-yellow_dsym197.svg');
INSERT INTO master.icon  (type , warning_class ,warning_number , name , color_name , state , created_at  , created_by)   select 'D',10,44,'696-yellow_dsym197.svg',LEFT('Yellow',1),'A',(select extract(epoch from now()) * 1000),(select min(id) from master.account) WHERE NOT EXISTS  (   SELECT 1   FROM master.icon   WHERE warning_class=10 and warning_number=44 and name='696-yellow_dsym197.svg');
INSERT INTO master.icon  (type , warning_class ,warning_number , name , color_name , state , created_at  , created_by)   select 'D',10,45,'696-yellow_dsym197.svg',LEFT('Yellow',1),'A',(select extract(epoch from now()) * 1000),(select min(id) from master.account) WHERE NOT EXISTS  (   SELECT 1   FROM master.icon   WHERE warning_class=10 and warning_number=45 and name='696-yellow_dsym197.svg');
INSERT INTO master.icon  (type , warning_class ,warning_number , name , color_name , state , created_at  , created_by)   select 'D',10,46,'703-yellow_dsym0240.svg',LEFT('Yellow',1),'A',(select extract(epoch from now()) * 1000),(select min(id) from master.account) WHERE NOT EXISTS  (   SELECT 1   FROM master.icon   WHERE warning_class=10 and warning_number=46 and name='703-yellow_dsym0240.svg');
INSERT INTO master.icon  (type , warning_class ,warning_number , name , color_name , state , created_at  , created_by)   select 'D',10,47,'671-yellow_dsym0334.svg',LEFT('Yellow',1),'A',(select extract(epoch from now()) * 1000),(select min(id) from master.account) WHERE NOT EXISTS  (   SELECT 1   FROM master.icon   WHERE warning_class=10 and warning_number=47 and name='671-yellow_dsym0334.svg');
INSERT INTO master.icon  (type , warning_class ,warning_number , name , color_name , state , created_at  , created_by)   select 'D',10,49,'712-yellow_dsym0420.svg',LEFT('Yellow',1),'A',(select extract(epoch from now()) * 1000),(select min(id) from master.account) WHERE NOT EXISTS  (   SELECT 1   FROM master.icon   WHERE warning_class=10 and warning_number=49 and name='712-yellow_dsym0420.svg');
INSERT INTO master.icon  (type , warning_class ,warning_number , name , color_name , state , created_at  , created_by)   select 'D',10,80,'2092-yellow.svg',LEFT('Yellow',1),'A',(select extract(epoch from now()) * 1000),(select min(id) from master.account) WHERE NOT EXISTS  (   SELECT 1   FROM master.icon   WHERE warning_class=10 and warning_number=80 and name='2092-yellow.svg');
INSERT INTO master.icon  (type , warning_class ,warning_number , name , color_name , state , created_at  , created_by)   select 'D',10,81,'2092-yellow.svg',LEFT('Yellow',1),'A',(select extract(epoch from now()) * 1000),(select min(id) from master.account) WHERE NOT EXISTS  (   SELECT 1   FROM master.icon   WHERE warning_class=10 and warning_number=81 and name='2092-yellow.svg');
INSERT INTO master.icon  (type , warning_class ,warning_number , name , color_name , state , created_at  , created_by)   select 'D',10,82,'2092-yellow.svg',LEFT('Yellow',1),'A',(select extract(epoch from now()) * 1000),(select min(id) from master.account) WHERE NOT EXISTS  (   SELECT 1   FROM master.icon   WHERE warning_class=10 and warning_number=82 and name='2092-yellow.svg');
INSERT INTO master.icon  (type , warning_class ,warning_number , name , color_name , state , created_at  , created_by)   select 'D',10,83,'2092-yellow.svg',LEFT('Yellow',1),'A',(select extract(epoch from now()) * 1000),(select min(id) from master.account) WHERE NOT EXISTS  (   SELECT 1   FROM master.icon   WHERE warning_class=10 and warning_number=83 and name='2092-yellow.svg');
INSERT INTO master.icon  (type , warning_class ,warning_number , name , color_name , state , created_at  , created_by)   select 'D',10,84,'671-yellow_dsym0334.svg',LEFT('Yellow',1),'A',(select extract(epoch from now()) * 1000),(select min(id) from master.account) WHERE NOT EXISTS  (   SELECT 1   FROM master.icon   WHERE warning_class=10 and warning_number=84 and name='671-yellow_dsym0334.svg');
INSERT INTO master.icon  (type , warning_class ,warning_number , name , color_name , state , created_at  , created_by)   select 'D',10,85,'2086-yellow_dsym030.svg',LEFT('Yellow',1),'A',(select extract(epoch from now()) * 1000),(select min(id) from master.account) WHERE NOT EXISTS  (   SELECT 1   FROM master.icon   WHERE warning_class=10 and warning_number=85 and name='2086-yellow_dsym030.svg');
INSERT INTO master.icon  (type , warning_class ,warning_number , name , color_name , state , created_at  , created_by)   select 'D',10,86,'2086-yellow_dsym030.svg',LEFT('Yellow',1),'A',(select extract(epoch from now()) * 1000),(select min(id) from master.account) WHERE NOT EXISTS  (   SELECT 1   FROM master.icon   WHERE warning_class=10 and warning_number=86 and name='2086-yellow_dsym030.svg');
INSERT INTO master.icon  (type , warning_class ,warning_number , name , color_name , state , created_at  , created_by)   select 'D',10,87,'2086-yellow_dsym030.svg',LEFT('Yellow',1),'A',(select extract(epoch from now()) * 1000),(select min(id) from master.account) WHERE NOT EXISTS  (   SELECT 1   FROM master.icon   WHERE warning_class=10 and warning_number=87 and name='2086-yellow_dsym030.svg');
INSERT INTO master.icon  (type , warning_class ,warning_number , name , color_name , state , created_at  , created_by)   select 'D',11,2,'682-grey_dsym075.svg',LEFT('Grey',1),'A',(select extract(epoch from now()) * 1000),(select min(id) from master.account) WHERE NOT EXISTS  (   SELECT 1   FROM master.icon   WHERE warning_class=11 and warning_number=2 and name='682-grey_dsym075.svg');


INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)  
SELECT 'EN-GB','L','feat_config_termsandcondition','Configuration.TermsAndCondition',(select extract(epoch from now()) * 1000),null 
WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'feat_config_termsandcondition');


--MERGE INTO translation.translation t USING (select  code , name, value) d ON t.code = d.code and t.name=d.name
 --WHEN MATCHED THEN UPDATE SET value = trim(d.value),modified_at=(select extract(epoch from now()) * 1000)
 --WHEN NOT MATCHED THEN INSERT VALUES (d.code,'L',d.name,d.value,(select extract(epoch from now()) * 1000),null);
 
 
 
 
 
update translation.translation set value='Access Relationship Management' where lower(code)=lower('EN-GB') and name='lblAccessRelationshipManagement';
update translation.translation set value='Delete' where lower(code)=lower('EN-GB') and name='lblDelete';
update translation.translation set value='Are you sure you want to delete ''$'' Association Relationship?' where lower(code)=lower('EN-GB') and name='lblAreyousureyouwanttodeleteAssociationRelationship';
update translation.translation set value='Cancel' where lower(code)=lower('EN-GB') and name='lblCancel';
update translation.translation set value='Association Relationship ''$'' was successfully deleted' where lower(code)=lower('EN-GB') and name='lblAssociationRelationshipwassuccessfullydeleted';
update translation.translation set value='Account Name' where lower(code)=lower('EN-GB') and name='lblUserName';
update translation.translation set value='Email ID' where lower(code)=lower('EN-GB') and name='lblEmailID';
update translation.translation set value='Account Role' where lower(code)=lower('EN-GB') and name='lblUserRole';
update translation.translation set value='Accounts' where lower(code)=lower('EN-GB') and name='lblUsers';
update translation.translation set value='Vehicle Name' where lower(code)=lower('EN-GB') and name='lblVehicleName';
update translation.translation set value='VIN' where lower(code)=lower('EN-GB') and name='lblVIN';
update translation.translation set value='Registration Number' where lower(code)=lower('EN-GB') and name='lblRegistrationNumber';
update translation.translation set value='Vehicles' where lower(code)=lower('EN-GB') and name='lblVehicles';
update translation.translation set value='All Access Relationship Details' where lower(code)=lower('EN-GB') and name='lblAllAccessRelationshipDetails';
update translation.translation set value='Search' where lower(code)=lower('EN-GB') and name='lblSearch';
update translation.translation set value='View list by' where lower(code)=lower('EN-GB') and name='lblViewlistby';
update translation.translation set value='Group' where lower(code)=lower('EN-GB') and name='lblGroup';
update translation.translation set value='Vehicle' where lower(code)=lower('EN-GB') and name='lblVehicle';
update translation.translation set value='Both' where lower(code)=lower('EN-GB') and name='lblBoth';
update translation.translation set value='Account' where lower(code)=lower('EN-GB') and name='lblAccount';
update translation.translation set value='View first column by' where lower(code)=lower('EN-GB') and name='lblViewfirstcolumnby';
update translation.translation set value='New Association' where lower(code)=lower('EN-GB') and name='lblNewAssociation';
update translation.translation set value='No Record Found' where lower(code)=lower('EN-GB') and name='lblNoRecordFound';
update translation.translation set value='Full Access' where lower(code)=lower('EN-GB') and name='lblFullAccess';
update translation.translation set value='View' where lower(code)=lower('EN-GB') and name='lblView';
update translation.translation set value='Edit' where lower(code)=lower('EN-GB') and name='lblEdit';
update translation.translation set value='Home' where lower(code)=lower('EN-GB') and name='lblHome';
update translation.translation set value='Admin' where lower(code)=lower('EN-GB') and name='lblAdmin';
update translation.translation set value='View Vehicle Association Details' where lower(code)=lower('EN-GB') and name='lblViewVehicleAssociationDetails';
update translation.translation set value='Edit Vehicle Association Details' where lower(code)=lower('EN-GB') and name='lblEditVehicleAssociationDetails';
update translation.translation set value='''$'' Access Relationship created successfully' where lower(code)=lower('EN-GB') and name='lblAccessRelationshipcreatedsuccessfully';
update translation.translation set value='''$'' Access Relationship updated successfully' where lower(code)=lower('EN-GB') and name='lblAccessRelationshipupdatedsuccessfully';
update translation.translation set value='View Only' where lower(code)=lower('EN-GB') and name='lblViewOnly';
update translation.translation set value='Back' where lower(code)=lower('EN-GB') and name='lblBack';
update translation.translation set value='Add New Association' where lower(code)=lower('EN-GB') and name='lblAddNewAssociation';
update translation.translation set value='Edit Association' where lower(code)=lower('EN-GB') and name='lblEditAssociation';
update translation.translation set value='View Association' where lower(code)=lower('EN-GB') and name='lblViewAssociation';
update translation.translation set value='Vehicle Group/Vehicle' where lower(code)=lower('EN-GB') and name='lblVehicleGroupVehicle';
update translation.translation set value='Select Vehicle Group/Vehicle' where lower(code)=lower('EN-GB') and name='lblSelectVehicleGroupVehicle';
update translation.translation set value='Please Select Vehicle Group/Vehicle' where lower(code)=lower('EN-GB') and name='lblPleaseSelectVehicleGroupVehicle';
update translation.translation set value='Access Type' where lower(code)=lower('EN-GB') and name='lblAccessType';
update translation.translation set value='Select Access Type' where lower(code)=lower('EN-GB') and name='lblSelectAccessType';
update translation.translation set value='Please Select Access Type' where lower(code)=lower('EN-GB') and name='lblPleaseSelectAccessType';
update translation.translation set value='You can select multiple Account Group/Account from below list to map with selected Vehicle Group/Vehicle list' where lower(code)=lower('EN-GB') and name='lblVehicleAccessRelationCreateHintMessage';
update translation.translation set value='Select Account Group/Account' where lower(code)=lower('EN-GB') and name='lblSelectAccountGroupAccount';
update translation.translation set value='All' where lower(code)=lower('EN-GB') and name='lblAll';
update translation.translation set value='Account Group/Account' where lower(code)=lower('EN-GB') and name='lblAccountGroupAccount';
update translation.translation set value='Reset' where lower(code)=lower('EN-GB') and name='lblReset';
update translation.translation set value='Confirm' where lower(code)=lower('EN-GB') and name='lblConfirm';
update translation.translation set value='View Account Association Details' where lower(code)=lower('EN-GB') and name='lblViewAccountAssociationDetails';
update translation.translation set value='Edit Account Association Details' where lower(code)=lower('EN-GB') and name='lblEditAccountAssociationDetails';
update translation.translation set value='Please Select Account Group/Account' where lower(code)=lower('EN-GB') and name='lblPleaseSelectAccountGroupAccount';
update translation.translation set value='You can select multiple Vehicle Group/Vehicle from below list to map with selected Account Group/Account list' where lower(code)=lower('EN-GB') and name='lblAccountAccessRelationCreateHintMessage';

INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblAccessRelationshipManagement','Access Relationship Management',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblAccessRelationshipManagement');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblDelete','Delete',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblDelete');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblAreyousureyouwanttodeleteAssociationRelationship','Are you sure you want to delete ''$'' Association Relationship?',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblAreyousureyouwanttodeleteAssociationRelationship');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblCancel','Cancel',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblCancel');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblAssociationRelationshipwassuccessfullydeleted','Association Relationship ''$'' was successfully deleted',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblAssociationRelationshipwassuccessfullydeleted');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblUserName','Account Name',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblUserName');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblEmailID','Email ID',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblEmailID');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblUserRole','Account Role',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblUserRole');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblUsers','Accounts',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblUsers');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblVehicleName','Vehicle Name',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblVehicleName');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblVIN','VIN',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblVIN');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblRegistrationNumber','Registration Number',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblRegistrationNumber');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblVehicles','Vehicles',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblVehicles');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblAllAccessRelationshipDetails','All Access Relationship Details',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblAllAccessRelationshipDetails');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblSearch','Search',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblSearch');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblViewlistby','View list by',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblViewlistby');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblGroup','Group',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblGroup');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblVehicle','Vehicle',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblVehicle');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblBoth','Both',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblBoth');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblAccount','Account',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblAccount');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblViewfirstcolumnby','View first column by',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblViewfirstcolumnby');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblNewAssociation','New Association',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblNewAssociation');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblNoRecordFound','No Record Found',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblNoRecordFound');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblFullAccess','Full Access',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblFullAccess');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblView','View',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblView');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblEdit','Edit',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblEdit');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblHome','Home',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblHome');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblAdmin','Admin',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblAdmin');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblViewVehicleAssociationDetails','View Vehicle Association Details',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblViewVehicleAssociationDetails');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblEditVehicleAssociationDetails','Edit Vehicle Association Details',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblEditVehicleAssociationDetails');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblAccessRelationshipcreatedsuccessfully','''$'' Access Relationship created successfully',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblAccessRelationshipcreatedsuccessfully');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblAccessRelationshipupdatedsuccessfully','''$'' Access Relationship updated successfully',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblAccessRelationshipupdatedsuccessfully');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblViewOnly','View Only',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblViewOnly');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblBack','Back',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblBack');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblAddNewAssociation','Add New Association',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblAddNewAssociation');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblEditAssociation','Edit Association',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblEditAssociation');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblViewAssociation','View Association',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblViewAssociation');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblVehicleGroupVehicle','Vehicle Group/Vehicle',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblVehicleGroupVehicle');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblSelectVehicleGroupVehicle','Select Vehicle Group/Vehicle',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblSelectVehicleGroupVehicle');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblPleaseSelectVehicleGroupVehicle','Please Select Vehicle Group/Vehicle',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblPleaseSelectVehicleGroupVehicle');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblAccessType','Access Type',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblAccessType');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblSelectAccessType','Select Access Type',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblSelectAccessType');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblPleaseSelectAccessType','Please Select Access Type',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblPleaseSelectAccessType');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblVehicleAccessRelationCreateHintMessage','You can select multiple Account Group/Account from below list to map with selected Vehicle Group/Vehicle list',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblVehicleAccessRelationCreateHintMessage');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblSelectAccountGroupAccount','Select Account Group/Account',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblSelectAccountGroupAccount');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblAll','All',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblAll');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblAccountGroupAccount','Account Group/Account',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblAccountGroupAccount');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblReset','Reset',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblReset');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblConfirm','Confirm',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblConfirm');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblViewAccountAssociationDetails','View Account Association Details',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblViewAccountAssociationDetails');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblEditAccountAssociationDetails','Edit Account Association Details',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblEditAccountAssociationDetails');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblPleaseSelectAccountGroupAccount','Please Select Account Group/Account',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblPleaseSelectAccountGroupAccount');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblAccountAccessRelationCreateHintMessage','You can select multiple Vehicle Group/Vehicle from below list to map with selected Account Group/Account list',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblAccountAccessRelationCreateHintMessage');

INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblAccessRelationshipManagement',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblAccessRelationshipManagement' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblDelete',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblDelete' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblAreyousureyouwanttodeleteAssociationRelationship',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblAreyousureyouwanttodeleteAssociationRelationship' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblCancel',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblCancel' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblAssociationRelationshipwassuccessfullydeleted',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblAssociationRelationshipwassuccessfullydeleted' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblUserName',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblUserName' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblEmailID',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblEmailID' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblUserRole',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblUserRole' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblUsers',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblUsers' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblVehicleName',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblVehicleName' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblVIN',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblVIN' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblRegistrationNumber',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblRegistrationNumber' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblVehicles',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblVehicles' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblAllAccessRelationshipDetails',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblAllAccessRelationshipDetails' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblSearch',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblSearch' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblViewlistby',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblViewlistby' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblGroup',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblGroup' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblVehicle',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblVehicle' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblBoth',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblBoth' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblAccount',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblAccount' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblViewfirstcolumnby',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblViewfirstcolumnby' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblNewAssociation',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblNewAssociation' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblNoRecordFound',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblNoRecordFound' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblFullAccess',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblFullAccess' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblView',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblView' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblEdit',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblEdit' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblHome',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblHome' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblAdmin',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblAdmin' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblViewVehicleAssociationDetails',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblViewVehicleAssociationDetails' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblEditVehicleAssociationDetails',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblEditVehicleAssociationDetails' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblAccessRelationshipcreatedsuccessfully',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblAccessRelationshipcreatedsuccessfully' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblAccessRelationshipupdatedsuccessfully',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblAccessRelationshipupdatedsuccessfully' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblViewOnly',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblViewOnly' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblBack',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblBack' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblAddNewAssociation',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblAddNewAssociation' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblEditAssociation',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblEditAssociation' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblViewAssociation',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblViewAssociation' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblVehicleGroupVehicle',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblVehicleGroupVehicle' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblSelectVehicleGroupVehicle',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblSelectVehicleGroupVehicle' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblPleaseSelectVehicleGroupVehicle',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblPleaseSelectVehicleGroupVehicle' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblAccessType',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblAccessType' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblSelectAccessType',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblSelectAccessType' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblPleaseSelectAccessType',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblPleaseSelectAccessType' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblVehicleAccessRelationCreateHintMessage',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblVehicleAccessRelationCreateHintMessage' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblSelectAccountGroupAccount',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblSelectAccountGroupAccount' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblAll',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblAll' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblAccountGroupAccount',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblAccountGroupAccount' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblReset',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblReset' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblConfirm',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblConfirm' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblViewAccountAssociationDetails',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblViewAccountAssociationDetails' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblEditAccountAssociationDetails',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblEditAccountAssociationDetails' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblPleaseSelectAccountGroupAccount',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblPleaseSelectAccountGroupAccount' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblAccountAccessRelationCreateHintMessage',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblAccountAccessRelationCreateHintMessage' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));

update translation.translation set value='Account Group Management' where lower(code)=lower('EN-GB') and name='lblAccountGroupManagement';
update translation.translation set value='Are you sure you want to delete ''$'' account group?' where lower(code)=lower('EN-GB') and name='lblAreyousureyouwanttodeleteusergroup';
update translation.translation set value='New Account Group Name' where lower(code)=lower('EN-GB') and name='lblNewUserGroupName';
update translation.translation set value='Account Group ''$'' was successfully deleted' where lower(code)=lower('EN-GB') and name='lblUserGroupDelete';
update translation.translation set value='Account Name' where lower(code)=lower('EN-GB') and name='lblUserName';
update translation.translation set value='Account Role' where lower(code)=lower('EN-GB') and name='lblUserRole';
update translation.translation set value='Accounts' where lower(code)=lower('EN-GB') and name='lblUsers';
update translation.translation set value='New Account Group' where lower(code)=lower('EN-GB') and name='lblNewUserGroup';
update translation.translation set value='Account Group ''$'' Created Successfully' where lower(code)=lower('EN-GB') and name='lblUserGroupCreatedSuccessfully';
update translation.translation set value='Account Group ''$'' Updated Successfully' where lower(code)=lower('EN-GB') and name='lblUserGroupUpdatedSuccessfully';
update translation.translation set value='Add New Account Group' where lower(code)=lower('EN-GB') and name='lblAddNewUserGroup';
update translation.translation set value='Edit Account Group' where lower(code)=lower('EN-GB') and name='lblEditUserGroup';
update translation.translation set value='View Account Group' where lower(code)=lower('EN-GB') and name='lblViewUserGroup';
update translation.translation set value='Account Group Name' where lower(code)=lower('EN-GB') and name='lblUserGroupName';
update translation.translation set value='Enter New Account Group Name' where lower(code)=lower('EN-GB') and name='lblEnterNewUserGroupName';
update translation.translation set value='Please enter any Account Group name' where lower(code)=lower('EN-GB') and name='lblErrorUserGroupName';
update translation.translation set value='Account Group Name cannot contain only whitespace' where lower(code)=lower('EN-GB') and name='lblUserGroupNamecannotcontainonlywhitespace';
update translation.translation set value='Duplicate Account Group Name' where lower(code)=lower('EN-GB') and name='lblDuplicateUserGroupName';
update translation.translation set value='Account Group Description (Optional)' where lower(code)=lower('EN-GB') and name='lblUserGroupDescriptionOptional';
update translation.translation set value='Account Group Description cannot contain only whitespace' where lower(code)=lower('EN-GB') and name='lblUserGroupDescriptioncannotcontainonlywhitespace';
update translation.translation set value='You can select Account from below list to map with this Account Group' where lower(code)=lower('EN-GB') and name='lblUserGroupManagementInfo';
update translation.translation set value='Selected Account' where lower(code)=lower('EN-GB') and name='lblSelectedUser';
update translation.translation set value='Select Account' where lower(code)=lower('EN-GB') and name='lblSelectUser';
update translation.translation set value='Account Group' where lower(code)=lower('EN-GB') and name='lblUserGroup';

INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblAccountGroupManagement','Account Group Management',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblAccountGroupManagement');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblAreyousureyouwanttodeleteusergroup','Are you sure you want to delete ''$'' account group?',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblAreyousureyouwanttodeleteusergroup');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblNewUserGroupName','New Account Group Name',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblNewUserGroupName');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblUserGroupDelete','Account Group ''$'' was successfully deleted',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblUserGroupDelete');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblUserName','Account Name',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblUserName');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblUserRole','Account Role',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblUserRole');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblUsers','Accounts',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblUsers');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblNewUserGroup','New Account Group',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblNewUserGroup');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblUserGroupCreatedSuccessfully','Account Group ''$'' Created Successfully',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblUserGroupCreatedSuccessfully');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblUserGroupUpdatedSuccessfully','Account Group ''$'' Updated Successfully',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblUserGroupUpdatedSuccessfully');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblAddNewUserGroup','Add New Account Group',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblAddNewUserGroup');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblEditUserGroup','Edit Account Group',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblEditUserGroup');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblViewUserGroup','View Account Group',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblViewUserGroup');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblUserGroupName','Account Group Name',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblUserGroupName');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblEnterNewUserGroupName','Enter New Account Group Name',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblEnterNewUserGroupName');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblErrorUserGroupName','Please enter any Account Group name',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblErrorUserGroupName');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblUserGroupNamecannotcontainonlywhitespace','Account Group Name cannot contain only whitespace',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblUserGroupNamecannotcontainonlywhitespace');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblDuplicateUserGroupName','Duplicate Account Group Name',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblDuplicateUserGroupName');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblUserGroupDescriptionOptional','Account Group Description (Optional)',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblUserGroupDescriptionOptional');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblUserGroupDescriptioncannotcontainonlywhitespace','Account Group Description cannot contain only whitespace',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblUserGroupDescriptioncannotcontainonlywhitespace');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblUserGroupManagementInfo','You can select Account from below list to map with this Account Group',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblUserGroupManagementInfo');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblSelectedUser','Selected Account',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblSelectedUser');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblSelectUser','Select Account',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblSelectUser');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblUserGroup','Account Group',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblUserGroup');

INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblAccountGroupManagement',(select id from master.menu where name = 'Account Group Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblAccountGroupManagement' and ref_id=(select id from master.menu where name = 'Account Group Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblAreyousureyouwanttodeleteusergroup',(select id from master.menu where name = 'Account Group Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblAreyousureyouwanttodeleteusergroup' and ref_id=(select id from master.menu where name = 'Account Group Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblNewUserGroupName',(select id from master.menu where name = 'Account Group Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblNewUserGroupName' and ref_id=(select id from master.menu where name = 'Account Group Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblUserGroupDelete',(select id from master.menu where name = 'Account Group Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblUserGroupDelete' and ref_id=(select id from master.menu where name = 'Account Group Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblUserName',(select id from master.menu where name = 'Account Group Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblUserName' and ref_id=(select id from master.menu where name = 'Account Group Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblUserRole',(select id from master.menu where name = 'Account Group Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblUserRole' and ref_id=(select id from master.menu where name = 'Account Group Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblUsers',(select id from master.menu where name = 'Account Group Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblUsers' and ref_id=(select id from master.menu where name = 'Account Group Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblNewUserGroup',(select id from master.menu where name = 'Account Group Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblNewUserGroup' and ref_id=(select id from master.menu where name = 'Account Group Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblUserGroupCreatedSuccessfully',(select id from master.menu where name = 'Account Group Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblUserGroupCreatedSuccessfully' and ref_id=(select id from master.menu where name = 'Account Group Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblUserGroupUpdatedSuccessfully',(select id from master.menu where name = 'Account Group Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblUserGroupUpdatedSuccessfully' and ref_id=(select id from master.menu where name = 'Account Group Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblAddNewUserGroup',(select id from master.menu where name = 'Account Group Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblAddNewUserGroup' and ref_id=(select id from master.menu where name = 'Account Group Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblEditUserGroup',(select id from master.menu where name = 'Account Group Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblEditUserGroup' and ref_id=(select id from master.menu where name = 'Account Group Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblViewUserGroup',(select id from master.menu where name = 'Account Group Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblViewUserGroup' and ref_id=(select id from master.menu where name = 'Account Group Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblUserGroupName',(select id from master.menu where name = 'Account Group Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblUserGroupName' and ref_id=(select id from master.menu where name = 'Account Group Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblEnterNewUserGroupName',(select id from master.menu where name = 'Account Group Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblEnterNewUserGroupName' and ref_id=(select id from master.menu where name = 'Account Group Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblErrorUserGroupName',(select id from master.menu where name = 'Account Group Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblErrorUserGroupName' and ref_id=(select id from master.menu where name = 'Account Group Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblUserGroupNamecannotcontainonlywhitespace',(select id from master.menu where name = 'Account Group Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblUserGroupNamecannotcontainonlywhitespace' and ref_id=(select id from master.menu where name = 'Account Group Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblDuplicateUserGroupName',(select id from master.menu where name = 'Account Group Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblDuplicateUserGroupName' and ref_id=(select id from master.menu where name = 'Account Group Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblUserGroupDescriptionOptional',(select id from master.menu where name = 'Account Group Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblUserGroupDescriptionOptional' and ref_id=(select id from master.menu where name = 'Account Group Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblUserGroupDescriptioncannotcontainonlywhitespace',(select id from master.menu where name = 'Account Group Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblUserGroupDescriptioncannotcontainonlywhitespace' and ref_id=(select id from master.menu where name = 'Account Group Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblUserGroupManagementInfo',(select id from master.menu where name = 'Account Group Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblUserGroupManagementInfo' and ref_id=(select id from master.menu where name = 'Account Group Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblSelectedUser',(select id from master.menu where name = 'Account Group Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblSelectedUser' and ref_id=(select id from master.menu where name = 'Account Group Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblSelectUser',(select id from master.menu where name = 'Account Group Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblSelectUser' and ref_id=(select id from master.menu where name = 'Account Group Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblUserGroup',(select id from master.menu where name = 'Account Group Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblUserGroup' and ref_id=(select id from master.menu where name = 'Account Group Management'));

update translation.translation set value='Account Management' where lower(code)=lower('EN-GB') and name='lblAccountManagement';
update translation.translation set value='Are you sure you want to delete ''$'' account?' where lower(code)=lower('EN-GB') and name='lblAreyousureyouwanttodeleteuseraccount';
update translation.translation set value='Account ''$'' was successfully deleted' where lower(code)=lower('EN-GB') and name='lblUseraccountwassuccessfullydeleted';
update translation.translation set value='Account Details' where lower(code)=lower('EN-GB') and name='lblUserDetails';
update translation.translation set value='All Account Details' where lower(code)=lower('EN-GB') and name='lblAllUserDetails';
update translation.translation set value='New Account' where lower(code)=lower('EN-GB') and name='lblNewUser';
update translation.translation set value='Account Group' where lower(code)=lower('EN-GB') and name='lblUserGroup';
update translation.translation set value='Account ''$'' already exists.' where lower(code)=lower('EN-GB') and name='lblUseraccountalreadyexists';
update translation.translation set value='New Account ''$'' Created Successfully' where lower(code)=lower('EN-GB') and name='lblNewUserAccountCreatedSuccessfully';
update translation.translation set value='Account ''$'' Updated SuccessfullylblUsers' where lower(code)=lower('EN-GB') and name='lblUserAccountUpdatedSuccessfully';
update translation.translation set value='Account Role' where lower(code)=lower('EN-GB') and name='lblUserRole';
update translation.translation set value='Accounts' where lower(code)=lower('EN-GB') and name='lblUsers';
update translation.translation set value='Account Name' where lower(code)=lower('EN-GB') and name='lblUserName';
update translation.translation set value='Add New Account' where lower(code)=lower('EN-GB') and name='lblAddNewUser';
update translation.translation set value='Please choose account type' where lower(code)=lower('EN-GB') and name='lblPleasechooseusertype';
update translation.translation set value='Account General Setting' where lower(code)=lower('EN-GB') and name='lblUserGeneralSetting';
update translation.translation set value='Select Account Role' where lower(code)=lower('EN-GB') and name='lblSelectUserRole';
update translation.translation set value='Select Account Group' where lower(code)=lower('EN-GB') and name='lblSelectUserGroup';
update translation.translation set value='Selected Account Roles' where lower(code)=lower('EN-GB') and name='lblSelectedUserRoles';
update translation.translation set value='Selected Account Groups' where lower(code)=lower('EN-GB') and name='lblSelectedUserGroups';
update translation.translation set value='Alert' where lower(code)=lower('EN-GB') and name='lblAlert';
update translation.translation set value='Do you want to link this account to your organisation?' where lower(code)=lower('EN-GB') and name='lblDoyouwanttolinkthisaccounttoyourorganisation';
update translation.translation set value='Portal Account' where lower(code)=lower('EN-GB') and name='lblPortalUser';
update translation.translation set value='System Account' where lower(code)=lower('EN-GB') and name='lblSystemUser';
update translation.translation set value='Account Type' where lower(code)=lower('EN-GB') and name='lblUserType';
update translation.translation set value='Link' where lower(code)=lower('EN-GB') and name='lblLink';
update translation.translation set value='Link & Continue' where lower(code)=lower('EN-GB') and name='lblLinkContinue';

INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblAccountManagement','Account Management',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblAccountManagement');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblAreyousureyouwanttodeleteuseraccount','Are you sure you want to delete ''$'' account?',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblAreyousureyouwanttodeleteuseraccount');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblUseraccountwassuccessfullydeleted','Account ''$'' was successfully deleted',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblUseraccountwassuccessfullydeleted');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblUserDetails','Account Details',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblUserDetails');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblAllUserDetails','All Account Details',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblAllUserDetails');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblNewUser','New Account',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblNewUser');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblUserGroup','Account Group',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblUserGroup');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblUseraccountalreadyexists','Account ''$'' already exists.',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblUseraccountalreadyexists');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblNewUserAccountCreatedSuccessfully','New Account ''$'' Created Successfully',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblNewUserAccountCreatedSuccessfully');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblUserAccountUpdatedSuccessfully','Account ''$'' Updated SuccessfullylblUsers',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblUserAccountUpdatedSuccessfully');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblUserRole','Account Role',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblUserRole');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblUsers','Accounts',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblUsers');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblUserName','Account Name',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblUserName');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblAddNewUser','Add New Account',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblAddNewUser');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblPleasechooseusertype','Please choose account type',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblPleasechooseusertype');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblUserGeneralSetting','Account General Setting',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblUserGeneralSetting');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblSelectUserRole','Select Account Role',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblSelectUserRole');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblSelectUserGroup','Select Account Group',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblSelectUserGroup');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblSelectedUserRoles','Selected Account Roles',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblSelectedUserRoles');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblSelectedUserGroups','Selected Account Groups',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblSelectedUserGroups');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblAlert','Alert',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblAlert');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblDoyouwanttolinkthisaccounttoyourorganisation','Do you want to link this account to your organisation?',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblDoyouwanttolinkthisaccounttoyourorganisation');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblPortalUser','Portal Account',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblPortalUser');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblSystemUser','System Account',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblSystemUser');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblUserType','Account Type',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblUserType');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblLink','Link',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblLink');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblLinkContinue','Link & Continue',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblLinkContinue');

INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblAccountManagement',(select id from master.menu where name = 'Account Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblAccountManagement' and ref_id=(select id from master.menu where name = 'Account Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblAreyousureyouwanttodeleteuseraccount',(select id from master.menu where name = 'Account Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblAreyousureyouwanttodeleteuseraccount' and ref_id=(select id from master.menu where name = 'Account Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblUseraccountwassuccessfullydeleted',(select id from master.menu where name = 'Account Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblUseraccountwassuccessfullydeleted' and ref_id=(select id from master.menu where name = 'Account Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblUserDetails',(select id from master.menu where name = 'Account Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblUserDetails' and ref_id=(select id from master.menu where name = 'Account Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblAllUserDetails',(select id from master.menu where name = 'Account Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblAllUserDetails' and ref_id=(select id from master.menu where name = 'Account Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblNewUser',(select id from master.menu where name = 'Account Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblNewUser' and ref_id=(select id from master.menu where name = 'Account Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblUserGroup',(select id from master.menu where name = 'Account Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblUserGroup' and ref_id=(select id from master.menu where name = 'Account Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblUseraccountalreadyexists',(select id from master.menu where name = 'Account Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblUseraccountalreadyexists' and ref_id=(select id from master.menu where name = 'Account Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblNewUserAccountCreatedSuccessfully',(select id from master.menu where name = 'Account Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblNewUserAccountCreatedSuccessfully' and ref_id=(select id from master.menu where name = 'Account Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblUserAccountUpdatedSuccessfully',(select id from master.menu where name = 'Account Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblUserAccountUpdatedSuccessfully' and ref_id=(select id from master.menu where name = 'Account Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblUserRole',(select id from master.menu where name = 'Account Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblUserRole' and ref_id=(select id from master.menu where name = 'Account Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblUsers',(select id from master.menu where name = 'Account Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblUsers' and ref_id=(select id from master.menu where name = 'Account Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblUserName',(select id from master.menu where name = 'Account Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblUserName' and ref_id=(select id from master.menu where name = 'Account Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblAddNewUser',(select id from master.menu where name = 'Account Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblAddNewUser' and ref_id=(select id from master.menu where name = 'Account Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblPleasechooseusertype',(select id from master.menu where name = 'Account Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblPleasechooseusertype' and ref_id=(select id from master.menu where name = 'Account Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblUserGeneralSetting',(select id from master.menu where name = 'Account Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblUserGeneralSetting' and ref_id=(select id from master.menu where name = 'Account Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblSelectUserRole',(select id from master.menu where name = 'Account Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblSelectUserRole' and ref_id=(select id from master.menu where name = 'Account Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblSelectUserGroup',(select id from master.menu where name = 'Account Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblSelectUserGroup' and ref_id=(select id from master.menu where name = 'Account Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblSelectedUserRoles',(select id from master.menu where name = 'Account Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblSelectedUserRoles' and ref_id=(select id from master.menu where name = 'Account Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblSelectedUserGroups',(select id from master.menu where name = 'Account Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblSelectedUserGroups' and ref_id=(select id from master.menu where name = 'Account Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblAlert',(select id from master.menu where name = 'Account Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblAlert' and ref_id=(select id from master.menu where name = 'Account Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblDoyouwanttolinkthisaccounttoyourorganisation',(select id from master.menu where name = 'Account Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblDoyouwanttolinkthisaccounttoyourorganisation' and ref_id=(select id from master.menu where name = 'Account Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblPortalUser',(select id from master.menu where name = 'Account Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblPortalUser' and ref_id=(select id from master.menu where name = 'Account Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblSystemUser',(select id from master.menu where name = 'Account Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblSystemUser' and ref_id=(select id from master.menu where name = 'Account Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblUserType',(select id from master.menu where name = 'Account Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblUserType' and ref_id=(select id from master.menu where name = 'Account Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblLink',(select id from master.menu where name = 'Account Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblLink' and ref_id=(select id from master.menu where name = 'Account Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblLinkContinue',(select id from master.menu where name = 'Account Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblLinkContinue' and ref_id=(select id from master.menu where name = 'Account Management'));


update translation.translation set value='Account Role Management' where lower(code)=lower('EN-GB') and name='lblAccountRoleManagement';
update translation.translation set value='Create New Account Role' where lower(code)=lower('EN-GB') and name='lblCreateNewUserRole';
update translation.translation set value='View Account Role' where lower(code)=lower('EN-GB') and name='lblViewUserRole';
update translation.translation set value='Account role ''$'' was successfully deleted' where lower(code)=lower('EN-GB') and name='lblUserRoleDelete';
update translation.translation set value='Account Role ''$'' Created Successfully' where lower(code)=lower('EN-GB') and name='lblUserRoleCreatedSuccessfully';
update translation.translation set value='Account Role ''$'' details successfully updated' where lower(code)=lower('EN-GB') and name='lblUserRoledetailssuccessfullyupdated';
update translation.translation set value='All Account Role Details' where lower(code)=lower('EN-GB') and name='lblAllUserRoleDetails';
update translation.translation set value='New Account Role' where lower(code)=lower('EN-GB') and name='lblNewUserRole';
update translation.translation set value='Account Role Details' where lower(code)=lower('EN-GB') and name='lblAccountRoleDetails';
update translation.translation set value='Account Role Name' where lower(code)=lower('EN-GB') and name='lblUserRoleName';
update translation.translation set value='Account Role Type' where lower(code)=lower('EN-GB') and name='lblUserRoleType';
update translation.translation set value='Account Role Description' where lower(code)=lower('EN-GB') and name='lblUserRoleDescriptionOptional';
update translation.translation set value='New Account Role Name' where lower(code)=lower('EN-GB') and name='lblNewUserRoleName';
update translation.translation set value='Enter Account Role Name' where lower(code)=lower('EN-GB') and name='lblEnterUserRoleName';
update translation.translation set value='Please enter the Account Role name' where lower(code)=lower('EN-GB') and name='lblPleaseentertheUserRolename';
update translation.translation set value='Account Role name should be max. 60 characters' where lower(code)=lower('EN-GB') and name='lblUserRoleNameShouldbeMax60Characters';
update translation.translation set value='Account Role already exists. Please choose a different name.' where lower(code)=lower('EN-GB') and name='lblUserRolealreadyexistsPleasechooseadifferentname';
update translation.translation set value='Account Role Description (Optional)' where lower(code)=lower('EN-GB') and name='lblUserRoleDescriptionOptional';
update translation.translation set value='Enter About Account Role' where lower(code)=lower('EN-GB') and name='lblEnterAboutUserRole';
update translation.translation set value='You can select features from below list to provide access for this role. Feature selection is mandatory' where lower(code)=lower('EN-GB') and name='lblHintMessage';

INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblAccountRoleManagement','Account Role Management',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblAccountRoleManagement');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblCreateNewUserRole','Create New Account Role',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblCreateNewUserRole');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblViewUserRole','View Account Role',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblViewUserRole');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblUserRoleDelete','Account role ''$'' was successfully deleted',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblUserRoleDelete');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblUserRoleCreatedSuccessfully','Account Role ''$'' Created Successfully',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblUserRoleCreatedSuccessfully');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblUserRoledetailssuccessfullyupdated','Account Role ''$'' details successfully updated',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblUserRoledetailssuccessfullyupdated');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblAllUserRoleDetails','All Account Role Details',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblAllUserRoleDetails');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblNewUserRole','New Account Role',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblNewUserRole');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblAccountRoleDetails','Account Role Details',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblAccountRoleDetails');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblUserRoleName','Account Role Name',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblUserRoleName');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblUserRoleType','Account Role Type',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblUserRoleType');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblUserRoleDescriptionOptional','Account Role Description',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblUserRoleDescriptionOptional');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblNewUserRoleName','New Account Role Name',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblNewUserRoleName');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblEnterUserRoleName','Enter Account Role Name',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblEnterUserRoleName');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblPleaseentertheUserRolename','Please enter the Account Role name',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblPleaseentertheUserRolename');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblUserRoleNameShouldbeMax60Characters','Account Role name should be max. 60 characters',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblUserRoleNameShouldbeMax60Characters');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblUserRolealreadyexistsPleasechooseadifferentname','Account Role already exists. Please choose a different name.',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblUserRolealreadyexistsPleasechooseadifferentname');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblUserRoleDescriptionOptional','Account Role Description (Optional)',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblUserRoleDescriptionOptional');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblEnterAboutUserRole','Enter About Account Role',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblEnterAboutUserRole');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblHintMessage','You can select features from below list to provide access for this role. Feature selection is mandatory',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblHintMessage');

INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblAccountRoleManagement',(select id from master.menu where name = 'Account Role Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblAccountRoleManagement' and ref_id=(select id from master.menu where name = 'Account Role Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblCreateNewUserRole',(select id from master.menu where name = 'Account Role Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblCreateNewUserRole' and ref_id=(select id from master.menu where name = 'Account Role Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblViewUserRole',(select id from master.menu where name = 'Account Role Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblViewUserRole' and ref_id=(select id from master.menu where name = 'Account Role Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblUserRoleDelete',(select id from master.menu where name = 'Account Role Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblUserRoleDelete' and ref_id=(select id from master.menu where name = 'Account Role Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblUserRoleCreatedSuccessfully',(select id from master.menu where name = 'Account Role Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblUserRoleCreatedSuccessfully' and ref_id=(select id from master.menu where name = 'Account Role Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblUserRoledetailssuccessfullyupdated',(select id from master.menu where name = 'Account Role Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblUserRoledetailssuccessfullyupdated' and ref_id=(select id from master.menu where name = 'Account Role Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblAllUserRoleDetails',(select id from master.menu where name = 'Account Role Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblAllUserRoleDetails' and ref_id=(select id from master.menu where name = 'Account Role Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblNewUserRole',(select id from master.menu where name = 'Account Role Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblNewUserRole' and ref_id=(select id from master.menu where name = 'Account Role Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblAccountRoleDetails',(select id from master.menu where name = 'Account Role Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblAccountRoleDetails' and ref_id=(select id from master.menu where name = 'Account Role Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblUserRoleName',(select id from master.menu where name = 'Account Role Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblUserRoleName' and ref_id=(select id from master.menu where name = 'Account Role Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblUserRoleType',(select id from master.menu where name = 'Account Role Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblUserRoleType' and ref_id=(select id from master.menu where name = 'Account Role Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblUserRoleDescriptionOptional',(select id from master.menu where name = 'Account Role Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblUserRoleDescriptionOptional' and ref_id=(select id from master.menu where name = 'Account Role Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblNewUserRoleName',(select id from master.menu where name = 'Account Role Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblNewUserRoleName' and ref_id=(select id from master.menu where name = 'Account Role Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblEnterUserRoleName',(select id from master.menu where name = 'Account Role Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblEnterUserRoleName' and ref_id=(select id from master.menu where name = 'Account Role Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblPleaseentertheUserRolename',(select id from master.menu where name = 'Account Role Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblPleaseentertheUserRolename' and ref_id=(select id from master.menu where name = 'Account Role Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblUserRoleNameShouldbeMax60Characters',(select id from master.menu where name = 'Account Role Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblUserRoleNameShouldbeMax60Characters' and ref_id=(select id from master.menu where name = 'Account Role Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblUserRolealreadyexistsPleasechooseadifferentname',(select id from master.menu where name = 'Account Role Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblUserRolealreadyexistsPleasechooseadifferentname' and ref_id=(select id from master.menu where name = 'Account Role Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblUserRoleDescriptionOptional',(select id from master.menu where name = 'Account Role Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblUserRoleDescriptionOptional' and ref_id=(select id from master.menu where name = 'Account Role Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblEnterAboutUserRole',(select id from master.menu where name = 'Account Role Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblEnterAboutUserRole' and ref_id=(select id from master.menu where name = 'Account Role Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblHintMessage',(select id from master.menu where name = 'Account Role Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblHintMessage' and ref_id=(select id from master.menu where name = 'Account Role Management'));


update translation.translation set value='Driver Management' where lower(code)=lower('EN-GB') and name='lblDriverManagement';
update translation.translation set value='Email ID exceeds maximum allowed length of 100 chars' where lower(code)=lower('EN-GB') and name='lblEmailIDexceedsmaximumallowedlengthof100chars';
update translation.translation set value='Email ID format is invalid' where lower(code)=lower('EN-GB') and name='lblEmailIDformatisinvalid';
update translation.translation set value='Driver ID is mandatory input' where lower(code)=lower('EN-GB') and name='lblDriverIDismandatoryinput';
update translation.translation set value='Driver ID should be exactly 19 chars in length' where lower(code)=lower('EN-GB') and name='lblDriverIDshouldbeexactly19charsinlength';
update translation.translation set value='Driver ID format is invalid' where lower(code)=lower('EN-GB') and name='lblDriverIDformatisinvalid';
update translation.translation set value='''$'' exceeds maximum allowed length of ''#'' chars' where lower(code)=lower('EN-GB') and name='lblexceedsmaximumallowedlengthofchars';
update translation.translation set value='Numbers not allowed in ''$''' where lower(code)=lower('EN-GB') and name='lblNumbersnotallowedin';
update translation.translation set value='Special characters not allowed in ''$''' where lower(code)=lower('EN-GB') and name='lblSpecialcharactersnotallowedin';
update translation.translation set value='Whitespaces not allowed in ''$''' where lower(code)=lower('EN-GB') and name='lblWhitespacesnotallowedin';
update translation.translation set value='Delete Driver' where lower(code)=lower('EN-GB') and name='lblDeleteDriver';
update translation.translation set value='Are you sure you want to delete driver ''$''?' where lower(code)=lower('EN-GB') and name='lblAreyousureyouwanttodeletedriver';
update translation.translation set value='Delete' where lower(code)=lower('EN-GB') and name='lblDelete';
update translation.translation set value='Cancel' where lower(code)=lower('EN-GB') and name='lblCancel';
update translation.translation set value='Driver ''$'' was successfully deleted' where lower(code)=lower('EN-GB') and name='lblDriverwassuccessfullydeleted';
update translation.translation set value='Driver ID' where lower(code)=lower('EN-GB') and name='lblDriverID';
update translation.translation set value='First Name' where lower(code)=lower('EN-GB') and name='lblFirstName';
update translation.translation set value='Last Name' where lower(code)=lower('EN-GB') and name='lblLastName';
update translation.translation set value='Email ID' where lower(code)=lower('EN-GB') and name='lblEmailID';
update translation.translation set value='Fail Reason' where lower(code)=lower('EN-GB') and name='lblFailReason';
update translation.translation set value='Rejected Driver Details' where lower(code)=lower('EN-GB') and name='lblRejectedDriverDetails';
update translation.translation set value='`Driver ID: Driver''s ID. Mandatory input. Format must follow the listed rules - 
 > If Driver ID contains a country code of 1 character (e.g. F) then country code is followed by 2 space characters e.g. F[space][space]1000000123456001
 > If Driver ID contains a country code of 2 characters (e.g. NL) then country code is followed by 1 space character e.g. NL[space]B000012345000002
 > Driver ID contains 19 characters and ends with the sequence number of the driver card
 E-mail: Driver''s email-id. Optional input. In case of a non-empty input for an existing driver record, the email-id shall be updated accordingly. Please enter a valid email-id.
 First Name: Driver''s first name. Optional input. In case of a non-empty input for an existing driver record, the email-id shall be updated accordingly. 
 Last Name: Driver''s last name. Optional input. In case of a non-empty input for an existing driver record, the email-id shall be updated accordingly`' where lower(code)=lower('EN-GB') and name='lblExcelHintMsg';
update translation.translation set value='DriverID' where lower(code)=lower('EN-GB') and name='lblExcelDriverID';
update translation.translation set value='Email' where lower(code)=lower('EN-GB') and name='lblExcelEmail';
update translation.translation set value='FirstName' where lower(code)=lower('EN-GB') and name='lblExcelFirstName';
update translation.translation set value='LastName' where lower(code)=lower('EN-GB') and name='lblExcelLastName';
update translation.translation set value='Import New Drivers' where lower(code)=lower('EN-GB') and name='lblImportNewDrivers';
update translation.translation set value='Download a Template' where lower(code)=lower('EN-GB') and name='lblDownloadaTemplate';
update translation.translation set value='You can enter multiple driver records. New Driver IDs records will be added and existing Driver ID records will be updated. Only Driver ID is mandatory, rest all fields are optional. See the template for details on valid input criteria for each field. All the fields (with the exception of the Driver ID) can be edited later from the Driver Management screen shown below.' where lower(code)=lower('EN-GB') and name='lblDownloadaTemplateMessage';
update translation.translation set value='Upload updated Excel file' where lower(code)=lower('EN-GB') and name='lblUploadUpdatedExcelFile';
update translation.translation set value='Browse' where lower(code)=lower('EN-GB') and name='lblBrowse';
update translation.translation set value='Please select a file' where lower(code)=lower('EN-GB') and name='lblPleaseselectafile';
update translation.translation set value='Empty File' where lower(code)=lower('EN-GB') and name='lblEmptyFile';
update translation.translation set value='Import Driver(s)' where lower(code)=lower('EN-GB') and name='lblImportDrivers';
update translation.translation set value='Imported file details' where lower(code)=lower('EN-GB') and name='lblImportedfiledetails';
update translation.translation set value='Imported' where lower(code)=lower('EN-GB') and name='lblImported';
update translation.translation set value='new drivers' where lower(code)=lower('EN-GB') and name='lblnewdrivers';
update translation.translation set value='Rejected' where lower(code)=lower('EN-GB') and name='lblRejected';
update translation.translation set value='drivers' where lower(code)=lower('EN-GB') and name='lbldrivers';
update translation.translation set value='Driver Details' where lower(code)=lower('EN-GB') and name='lblDriverDetails';
update translation.translation set value='Search' where lower(code)=lower('EN-GB') and name='lblSearch';
update translation.translation set value='Select Consent ID Status' where lower(code)=lower('EN-GB') and name='lblSelectConsentIDStatus';
update translation.translation set value='Reset All' where lower(code)=lower('EN-GB') and name='lblResetAll';
update translation.translation set value='Opt-In All' where lower(code)=lower('EN-GB') and name='lblOptInAll';
update translation.translation set value='Opt-Out All' where lower(code)=lower('EN-GB') and name='lblOptOutAll';
update translation.translation set value='No Record Found' where lower(code)=lower('EN-GB') and name='lblNoRecordFound';
update translation.translation set value='New' where lower(code)=lower('EN-GB') and name='lblNew';
update translation.translation set value='Driver Name' where lower(code)=lower('EN-GB') and name='lblDriverName';
update translation.translation set value='Driver Id' where lower(code)=lower('EN-GB') and name='lblDriverId';
update translation.translation set value='Consent' where lower(code)=lower('EN-GB') and name='lblConsent';
update translation.translation set value='Opt-In' where lower(code)=lower('EN-GB') and name='lblOptIn';
update translation.translation set value='Opt-Out' where lower(code)=lower('EN-GB') and name='lblOptOut';
update translation.translation set value='Action' where lower(code)=lower('EN-GB') and name='lblAction';
update translation.translation set value='View' where lower(code)=lower('EN-GB') and name='lblView';
update translation.translation set value='Edit' where lower(code)=lower('EN-GB') and name='lblEdit';
update translation.translation set value='Home' where lower(code)=lower('EN-GB') and name='lblHome';
update translation.translation set value='Configuration' where lower(code)=lower('EN-GB') and name='lblConfiguration';
update translation.translation set value='Edit Driver Details' where lower(code)=lower('EN-GB') and name='lblEditDriverDetails';
update translation.translation set value='View Driver Details' where lower(code)=lower('EN-GB') and name='lblViewDriverDetails';
update translation.translation set value='Driver ''$'' was successfully updated' where lower(code)=lower('EN-GB') and name='lblDriverwassuccessfullyupdated';
update translation.translation set value='Back' where lower(code)=lower('EN-GB') and name='lblBack';
update translation.translation set value='All details are mandatory' where lower(code)=lower('EN-GB') and name='lblAlldetailsaremandatory';
update translation.translation set value='Driver ID is required' where lower(code)=lower('EN-GB') and name='lblDriverIDirequired';
update translation.translation set value='Please enter valid email ID' where lower(code)=lower('EN-GB') and name='lblPleaseentervalidemailID';
update translation.translation set value='Email ID already exists' where lower(code)=lower('EN-GB') and name='lblEmailIDAlreadyExists';
update translation.translation set value='Driver ID Consent Status' where lower(code)=lower('EN-GB') and name='lblDriverIDConsentStatus';
update translation.translation set value='Inherit' where lower(code)=lower('EN-GB') and name='lblInherit';
update translation.translation set value='Special characters not allowed' where lower(code)=lower('EN-GB') and name='lblSpecialcharactersnotallowed';
update translation.translation set value='Numbers not allowed' where lower(code)=lower('EN-GB') and name='lblNumbersNotAllowed';
update translation.translation set value='First Name cannot contain only whitespace' where lower(code)=lower('EN-GB') and name='lblFirstNamecannotcontainonlywhitespace';
update translation.translation set value='Last Name cannot contain only whitespace' where lower(code)=lower('EN-GB') and name='lblLastNamecannotcontainonlywhitespace';
update translation.translation set value='Reset' where lower(code)=lower('EN-GB') and name='lblReset';
update translation.translation set value='Confirm' where lower(code)=lower('EN-GB') and name='lblConfirm';
update translation.translation set value='You are attempting to change consent to ''$''' where lower(code)=lower('EN-GB') and name='lblOptInOptOutAttemptingMsg';
update translation.translation set value='By selecting and confirming this option you are confirming that the personal data of the selected driver(s), such as the driver ID, will be visible in the DAF CONNECT portal. You state that you are aware of your responsibility with regard to data privacy. At the same time, you state that you have consent from all your drivers to have their driver ID stored and shown in the DAF CONNECT portal and/or, if applicable, to share information with third parties. By submitting this request, you fully accept your legal responsibilities and thereby indemnify DAF Trucks NV from any privacy related responsibilities based on this decision.' where lower(code)=lower('EN-GB') and name='lblOptInExtraMsg';
update translation.translation set value='By selecting and confirming this option, you are confirming that you understand that the personal data of the selected driver(s) such as the driver ID will no longer be visible in the DAF CONNECT portal. As a result of opting-out some services will no longer show the driver ID in the DAF CONNECT portal while some services may be terminated altogether. Termination (or partial or complete unavailability) of any services as a result of the opt-out request will by no means result in any restitution of fees or any other form of compensation from DAF Trucks NV.' where lower(code)=lower('EN-GB') and name='lblOptOutExtraMsg';
update translation.translation set value='You are attempting to ''$'' your organisation’s consent setting. This means that the consent of this driver will set to the consent of your organisation' where lower(code)=lower('EN-GB') and name='lblInheritAttemptingMsg';
update translation.translation set value='Since your organisation’s consent is ''$''.' where lower(code)=lower('EN-GB') and name='lblSinceyourorganisationconsentis';
update translation.translation set value='All drivers was ''$'' successfully' where lower(code)=lower('EN-GB') and name='lblAlldriverswassuccessfully';
update translation.translation set value='Opted-in' where lower(code)=lower('EN-GB') and name='lblOptedin';
update translation.translation set value='The driver ''$'' was Opted-in successfully' where lower(code)=lower('EN-GB') and name='lblThedrivewasOptedinsuccessfully';
update translation.translation set value='Opted-out' where lower(code)=lower('EN-GB') and name='lblOptedout';
update translation.translation set value='The driver ''$'' was Opted-out successfully' where lower(code)=lower('EN-GB') and name='lblThedrivewasOptedoutsuccessfully';
update translation.translation set value='The driver ''$'' was successfully ''#''' where lower(code)=lower('EN-GB') and name='lblThedrivewassuccessfully';
update translation.translation set value='Driver ID Consent' where lower(code)=lower('EN-GB') and name='lblDriverIDConsent';
update translation.translation set value='Name' where lower(code)=lower('EN-GB') and name='lblName';
update translation.translation set value='Orgnization' where lower(code)=lower('EN-GB') and name='lblOrgnization';
update translation.translation set value='Total Drivers' where lower(code)=lower('EN-GB') and name='lblTotalDrivers';
update translation.translation set value='Current Consent Status For Subscriber' where lower(code)=lower('EN-GB') and name='lblCurrentConsentStatusForSubscriber';
update translation.translation set value='Now you are proceeding with Driver ID Consent Opt-Out operation, Click ''Confirm'' to change the consent status.' where lower(code)=lower('EN-GB') and name='lblOptOutMessage';
update translation.translation set value='Hence' where lower(code)=lower('EN-GB') and name='lblHence';

INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblDriverManagement','Driver Management',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblDriverManagement');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblEmailIDexceedsmaximumallowedlengthof100chars','Email ID exceeds maximum allowed length of 100 chars',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblEmailIDexceedsmaximumallowedlengthof100chars');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblEmailIDformatisinvalid','Email ID format is invalid',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblEmailIDformatisinvalid');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblDriverIDismandatoryinput','Driver ID is mandatory input',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblDriverIDismandatoryinput');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblDriverIDshouldbeexactly19charsinlength','Driver ID should be exactly 19 chars in length',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblDriverIDshouldbeexactly19charsinlength');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblDriverIDformatisinvalid','Driver ID format is invalid',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblDriverIDformatisinvalid');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblexceedsmaximumallowedlengthofchars','''$'' exceeds maximum allowed length of ''#'' chars',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblexceedsmaximumallowedlengthofchars');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblNumbersnotallowedin','Numbers not allowed in ''$''',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblNumbersnotallowedin');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblSpecialcharactersnotallowedin','Special characters not allowed in ''$''',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblSpecialcharactersnotallowedin');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblWhitespacesnotallowedin','Whitespaces not allowed in ''$''',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblWhitespacesnotallowedin');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblDeleteDriver','Delete Driver',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblDeleteDriver');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblAreyousureyouwanttodeletedriver','Are you sure you want to delete driver ''$''?',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblAreyousureyouwanttodeletedriver');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblDelete','Delete',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblDelete');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblCancel','Cancel',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblCancel');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblDriverwassuccessfullydeleted','Driver ''$'' was successfully deleted',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblDriverwassuccessfullydeleted');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblDriverID','Driver ID',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblDriverID');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblFirstName','First Name',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblFirstName');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblLastName','Last Name',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblLastName');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblEmailID','Email ID',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblEmailID');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblFailReason','Fail Reason',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblFailReason');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblRejectedDriverDetails','Rejected Driver Details',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblRejectedDriverDetails');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblExcelHintMsg','`Driver ID: Driver''s ID. Mandatory input. Format must follow the listed rules - 
 > If Driver ID contains a country code of 1 character (e.g. F) then country code is followed by 2 space characters e.g. F[space][space]1000000123456001
 > If Driver ID contains a country code of 2 characters (e.g. NL) then country code is followed by 1 space character e.g. NL[space]B000012345000002
 > Driver ID contains 19 characters and ends with the sequence number of the driver card
 E-mail: Driver''s email-id. Optional input. In case of a non-empty input for an existing driver record, the email-id shall be updated accordingly. Please enter a valid email-id.
 First Name: Driver''s first name. Optional input. In case of a non-empty input for an existing driver record, the email-id shall be updated accordingly. 
 Last Name: Driver''s last name. Optional input. In case of a non-empty input for an existing driver record, the email-id shall be updated accordingly`',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblExcelHintMsg');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblExcelDriverID','DriverID',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblExcelDriverID');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblExcelEmail','Email',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblExcelEmail');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblExcelFirstName','FirstName',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblExcelFirstName');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblExcelLastName','LastName',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblExcelLastName');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblImportNewDrivers','Import New Drivers',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblImportNewDrivers');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblDownloadaTemplate','Download a Template',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblDownloadaTemplate');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblDownloadaTemplateMessage','You can enter multiple driver records. New Driver IDs records will be added and existing Driver ID records will be updated. Only Driver ID is mandatory, rest all fields are optional. See the template for details on valid input criteria for each field. All the fields (with the exception of the Driver ID) can be edited later from the Driver Management screen shown below.',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblDownloadaTemplateMessage');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblUploadUpdatedExcelFile','Upload updated Excel file',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblUploadUpdatedExcelFile');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblBrowse','Browse',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblBrowse');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblPleaseselectafile','Please select a file',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblPleaseselectafile');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblEmptyFile','Empty File',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblEmptyFile');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblImportDrivers','Import Driver(s)',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblImportDrivers');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblImportedfiledetails','Imported file details',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblImportedfiledetails');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblImported','Imported',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblImported');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblnewdrivers','new drivers',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblnewdrivers');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblRejected','Rejected',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblRejected');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lbldrivers','drivers',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lbldrivers');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblDriverDetails','Driver Details',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblDriverDetails');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblSearch','Search',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblSearch');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblSelectConsentIDStatus','Select Consent ID Status',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblSelectConsentIDStatus');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblResetAll','Reset All',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblResetAll');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblOptInAll','Opt-In All',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblOptInAll');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblOptOutAll','Opt-Out All',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblOptOutAll');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblNoRecordFound','No Record Found',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblNoRecordFound');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblNew','New',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblNew');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblDriverName','Driver Name',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblDriverName');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblDriverId','Driver Id',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblDriverId');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblConsent','Consent',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblConsent');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblOptIn','Opt-In',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblOptIn');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblOptOut','Opt-Out',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblOptOut');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblAction','Action',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblAction');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblView','View',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblView');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblEdit','Edit',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblEdit');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblHome','Home',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblHome');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblConfiguration','Configuration',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblConfiguration');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblEditDriverDetails','Edit Driver Details',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblEditDriverDetails');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblViewDriverDetails','View Driver Details',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblViewDriverDetails');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblDriverwassuccessfullyupdated','Driver ''$'' was successfully updated',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblDriverwassuccessfullyupdated');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblBack','Back',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblBack');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblAlldetailsaremandatory','All details are mandatory',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblAlldetailsaremandatory');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblDriverIDirequired','Driver ID is required',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblDriverIDirequired');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblPleaseentervalidemailID','Please enter valid email ID',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblPleaseentervalidemailID');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblEmailIDAlreadyExists','Email ID already exists',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblEmailIDAlreadyExists');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblDriverIDConsentStatus','Driver ID Consent Status',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblDriverIDConsentStatus');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblInherit','Inherit',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblInherit');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblSpecialcharactersnotallowed','Special characters not allowed',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblSpecialcharactersnotallowed');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblNumbersNotAllowed','Numbers not allowed',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblNumbersNotAllowed');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblFirstNamecannotcontainonlywhitespace','First Name cannot contain only whitespace',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblFirstNamecannotcontainonlywhitespace');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblLastNamecannotcontainonlywhitespace','Last Name cannot contain only whitespace',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblLastNamecannotcontainonlywhitespace');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblReset','Reset',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblReset');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblConfirm','Confirm',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblConfirm');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblOptInOptOutAttemptingMsg','You are attempting to change consent to ''$''',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblOptInOptOutAttemptingMsg');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblOptInExtraMsg','By selecting and confirming this option you are confirming that the personal data of the selected driver(s), such as the driver ID, will be visible in the DAF CONNECT portal. You state that you are aware of your responsibility with regard to data privacy. At the same time, you state that you have consent from all your drivers to have their driver ID stored and shown in the DAF CONNECT portal and/or, if applicable, to share information with third parties. By submitting this request, you fully accept your legal responsibilities and thereby indemnify DAF Trucks NV from any privacy related responsibilities based on this decision.',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblOptInExtraMsg');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblOptOutExtraMsg','By selecting and confirming this option, you are confirming that you understand that the personal data of the selected driver(s) such as the driver ID will no longer be visible in the DAF CONNECT portal. As a result of opting-out some services will no longer show the driver ID in the DAF CONNECT portal while some services may be terminated altogether. Termination (or partial or complete unavailability) of any services as a result of the opt-out request will by no means result in any restitution of fees or any other form of compensation from DAF Trucks NV.',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblOptOutExtraMsg');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblInheritAttemptingMsg','You are attempting to ''$'' your organisation’s consent setting. This means that the consent of this driver will set to the consent of your organisation',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblInheritAttemptingMsg');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblSinceyourorganisationconsentis','Since your organisation’s consent is ''$''.',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblSinceyourorganisationconsentis');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblAlldriverswassuccessfully','All drivers was ''$'' successfully',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblAlldriverswassuccessfully');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblOptedin','Opted-in',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblOptedin');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblThedrivewasOptedinsuccessfully','The driver ''$'' was Opted-in successfully',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblThedrivewasOptedinsuccessfully');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblOptedout','Opted-out',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblOptedout');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblThedrivewasOptedoutsuccessfully','The driver ''$'' was Opted-out successfully',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblThedrivewasOptedoutsuccessfully');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblThedrivewassuccessfully','The driver ''$'' was successfully ''#''',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblThedrivewassuccessfully');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblDriverIDConsent','Driver ID Consent',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblDriverIDConsent');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblName','Name',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblName');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblOrgnization','Orgnization',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblOrgnization');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblTotalDrivers','Total Drivers',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblTotalDrivers');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblCurrentConsentStatusForSubscriber','Current Consent Status For Subscriber',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblCurrentConsentStatusForSubscriber');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblOptOutMessage','Now you are proceeding with Driver ID Consent Opt-Out operation, Click ''Confirm'' to change the consent status.',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblOptOutMessage');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblHence','Hence',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblHence');

INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblDriverManagement',(select id from master.menu where name = 'Driver Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblDriverManagement' and ref_id=(select id from master.menu where name = 'Driver Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblEmailIDexceedsmaximumallowedlengthof100chars',(select id from master.menu where name = 'Driver Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblEmailIDexceedsmaximumallowedlengthof100chars' and ref_id=(select id from master.menu where name = 'Driver Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblEmailIDformatisinvalid',(select id from master.menu where name = 'Driver Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblEmailIDformatisinvalid' and ref_id=(select id from master.menu where name = 'Driver Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblDriverIDismandatoryinput',(select id from master.menu where name = 'Driver Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblDriverIDismandatoryinput' and ref_id=(select id from master.menu where name = 'Driver Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblDriverIDshouldbeexactly19charsinlength',(select id from master.menu where name = 'Driver Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblDriverIDshouldbeexactly19charsinlength' and ref_id=(select id from master.menu where name = 'Driver Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblDriverIDformatisinvalid',(select id from master.menu where name = 'Driver Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblDriverIDformatisinvalid' and ref_id=(select id from master.menu where name = 'Driver Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblexceedsmaximumallowedlengthofchars',(select id from master.menu where name = 'Driver Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblexceedsmaximumallowedlengthofchars' and ref_id=(select id from master.menu where name = 'Driver Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblNumbersnotallowedin',(select id from master.menu where name = 'Driver Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblNumbersnotallowedin' and ref_id=(select id from master.menu where name = 'Driver Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblSpecialcharactersnotallowedin',(select id from master.menu where name = 'Driver Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblSpecialcharactersnotallowedin' and ref_id=(select id from master.menu where name = 'Driver Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblWhitespacesnotallowedin',(select id from master.menu where name = 'Driver Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblWhitespacesnotallowedin' and ref_id=(select id from master.menu where name = 'Driver Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblDeleteDriver',(select id from master.menu where name = 'Driver Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblDeleteDriver' and ref_id=(select id from master.menu where name = 'Driver Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblAreyousureyouwanttodeletedriver',(select id from master.menu where name = 'Driver Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblAreyousureyouwanttodeletedriver' and ref_id=(select id from master.menu where name = 'Driver Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblDelete',(select id from master.menu where name = 'Driver Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblDelete' and ref_id=(select id from master.menu where name = 'Driver Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblCancel',(select id from master.menu where name = 'Driver Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblCancel' and ref_id=(select id from master.menu where name = 'Driver Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblDriverwassuccessfullydeleted',(select id from master.menu where name = 'Driver Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblDriverwassuccessfullydeleted' and ref_id=(select id from master.menu where name = 'Driver Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblDriverID',(select id from master.menu where name = 'Driver Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblDriverID' and ref_id=(select id from master.menu where name = 'Driver Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblFirstName',(select id from master.menu where name = 'Driver Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblFirstName' and ref_id=(select id from master.menu where name = 'Driver Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblLastName',(select id from master.menu where name = 'Driver Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblLastName' and ref_id=(select id from master.menu where name = 'Driver Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblEmailID',(select id from master.menu where name = 'Driver Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblEmailID' and ref_id=(select id from master.menu where name = 'Driver Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblFailReason',(select id from master.menu where name = 'Driver Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblFailReason' and ref_id=(select id from master.menu where name = 'Driver Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblRejectedDriverDetails',(select id from master.menu where name = 'Driver Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblRejectedDriverDetails' and ref_id=(select id from master.menu where name = 'Driver Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblExcelHintMsg',(select id from master.menu where name = 'Driver Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblExcelHintMsg' and ref_id=(select id from master.menu where name = 'Driver Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblExcelDriverID',(select id from master.menu where name = 'Driver Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblExcelDriverID' and ref_id=(select id from master.menu where name = 'Driver Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblExcelEmail',(select id from master.menu where name = 'Driver Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblExcelEmail' and ref_id=(select id from master.menu where name = 'Driver Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblExcelFirstName',(select id from master.menu where name = 'Driver Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblExcelFirstName' and ref_id=(select id from master.menu where name = 'Driver Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblExcelLastName',(select id from master.menu where name = 'Driver Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblExcelLastName' and ref_id=(select id from master.menu where name = 'Driver Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblImportNewDrivers',(select id from master.menu where name = 'Driver Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblImportNewDrivers' and ref_id=(select id from master.menu where name = 'Driver Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblDownloadaTemplate',(select id from master.menu where name = 'Driver Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblDownloadaTemplate' and ref_id=(select id from master.menu where name = 'Driver Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblDownloadaTemplateMessage',(select id from master.menu where name = 'Driver Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblDownloadaTemplateMessage' and ref_id=(select id from master.menu where name = 'Driver Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblUploadUpdatedExcelFile',(select id from master.menu where name = 'Driver Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblUploadUpdatedExcelFile' and ref_id=(select id from master.menu where name = 'Driver Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblBrowse',(select id from master.menu where name = 'Driver Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblBrowse' and ref_id=(select id from master.menu where name = 'Driver Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblPleaseselectafile',(select id from master.menu where name = 'Driver Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblPleaseselectafile' and ref_id=(select id from master.menu where name = 'Driver Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblEmptyFile',(select id from master.menu where name = 'Driver Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblEmptyFile' and ref_id=(select id from master.menu where name = 'Driver Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblImportDrivers',(select id from master.menu where name = 'Driver Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblImportDrivers' and ref_id=(select id from master.menu where name = 'Driver Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblImportedfiledetails',(select id from master.menu where name = 'Driver Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblImportedfiledetails' and ref_id=(select id from master.menu where name = 'Driver Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblImported',(select id from master.menu where name = 'Driver Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblImported' and ref_id=(select id from master.menu where name = 'Driver Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblnewdrivers',(select id from master.menu where name = 'Driver Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblnewdrivers' and ref_id=(select id from master.menu where name = 'Driver Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblRejected',(select id from master.menu where name = 'Driver Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblRejected' and ref_id=(select id from master.menu where name = 'Driver Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lbldrivers',(select id from master.menu where name = 'Driver Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lbldrivers' and ref_id=(select id from master.menu where name = 'Driver Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblDriverDetails',(select id from master.menu where name = 'Driver Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblDriverDetails' and ref_id=(select id from master.menu where name = 'Driver Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblSearch',(select id from master.menu where name = 'Driver Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblSearch' and ref_id=(select id from master.menu where name = 'Driver Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblSelectConsentIDStatus',(select id from master.menu where name = 'Driver Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblSelectConsentIDStatus' and ref_id=(select id from master.menu where name = 'Driver Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblResetAll',(select id from master.menu where name = 'Driver Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblResetAll' and ref_id=(select id from master.menu where name = 'Driver Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblOptInAll',(select id from master.menu where name = 'Driver Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblOptInAll' and ref_id=(select id from master.menu where name = 'Driver Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblOptOutAll',(select id from master.menu where name = 'Driver Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblOptOutAll' and ref_id=(select id from master.menu where name = 'Driver Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblNoRecordFound',(select id from master.menu where name = 'Driver Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblNoRecordFound' and ref_id=(select id from master.menu where name = 'Driver Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblNew',(select id from master.menu where name = 'Driver Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblNew' and ref_id=(select id from master.menu where name = 'Driver Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblDriverName',(select id from master.menu where name = 'Driver Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblDriverName' and ref_id=(select id from master.menu where name = 'Driver Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblDriverId',(select id from master.menu where name = 'Driver Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblDriverId' and ref_id=(select id from master.menu where name = 'Driver Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblConsent',(select id from master.menu where name = 'Driver Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblConsent' and ref_id=(select id from master.menu where name = 'Driver Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblOptIn',(select id from master.menu where name = 'Driver Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblOptIn' and ref_id=(select id from master.menu where name = 'Driver Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblOptOut',(select id from master.menu where name = 'Driver Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblOptOut' and ref_id=(select id from master.menu where name = 'Driver Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblAction',(select id from master.menu where name = 'Driver Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblAction' and ref_id=(select id from master.menu where name = 'Driver Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblView',(select id from master.menu where name = 'Driver Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblView' and ref_id=(select id from master.menu where name = 'Driver Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblEdit',(select id from master.menu where name = 'Driver Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblEdit' and ref_id=(select id from master.menu where name = 'Driver Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblHome',(select id from master.menu where name = 'Driver Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblHome' and ref_id=(select id from master.menu where name = 'Driver Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblConfiguration',(select id from master.menu where name = 'Driver Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblConfiguration' and ref_id=(select id from master.menu where name = 'Driver Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblEditDriverDetails',(select id from master.menu where name = 'Driver Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblEditDriverDetails' and ref_id=(select id from master.menu where name = 'Driver Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblViewDriverDetails',(select id from master.menu where name = 'Driver Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblViewDriverDetails' and ref_id=(select id from master.menu where name = 'Driver Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblDriverwassuccessfullyupdated',(select id from master.menu where name = 'Driver Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblDriverwassuccessfullyupdated' and ref_id=(select id from master.menu where name = 'Driver Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblBack',(select id from master.menu where name = 'Driver Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblBack' and ref_id=(select id from master.menu where name = 'Driver Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblAlldetailsaremandatory',(select id from master.menu where name = 'Driver Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblAlldetailsaremandatory' and ref_id=(select id from master.menu where name = 'Driver Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblDriverIDirequired',(select id from master.menu where name = 'Driver Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblDriverIDirequired' and ref_id=(select id from master.menu where name = 'Driver Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblPleaseentervalidemailID',(select id from master.menu where name = 'Driver Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblPleaseentervalidemailID' and ref_id=(select id from master.menu where name = 'Driver Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblEmailIDAlreadyExists',(select id from master.menu where name = 'Driver Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblEmailIDAlreadyExists' and ref_id=(select id from master.menu where name = 'Driver Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblDriverIDConsentStatus',(select id from master.menu where name = 'Driver Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblDriverIDConsentStatus' and ref_id=(select id from master.menu where name = 'Driver Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblInherit',(select id from master.menu where name = 'Driver Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblInherit' and ref_id=(select id from master.menu where name = 'Driver Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblSpecialcharactersnotallowed',(select id from master.menu where name = 'Driver Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblSpecialcharactersnotallowed' and ref_id=(select id from master.menu where name = 'Driver Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblNumbersNotAllowed',(select id from master.menu where name = 'Driver Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblNumbersNotAllowed' and ref_id=(select id from master.menu where name = 'Driver Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblFirstNamecannotcontainonlywhitespace',(select id from master.menu where name = 'Driver Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblFirstNamecannotcontainonlywhitespace' and ref_id=(select id from master.menu where name = 'Driver Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblLastNamecannotcontainonlywhitespace',(select id from master.menu where name = 'Driver Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblLastNamecannotcontainonlywhitespace' and ref_id=(select id from master.menu where name = 'Driver Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblReset',(select id from master.menu where name = 'Driver Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblReset' and ref_id=(select id from master.menu where name = 'Driver Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblConfirm',(select id from master.menu where name = 'Driver Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblConfirm' and ref_id=(select id from master.menu where name = 'Driver Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblOptInOptOutAttemptingMsg',(select id from master.menu where name = 'Driver Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblOptInOptOutAttemptingMsg' and ref_id=(select id from master.menu where name = 'Driver Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblOptInExtraMsg',(select id from master.menu where name = 'Driver Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblOptInExtraMsg' and ref_id=(select id from master.menu where name = 'Driver Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblOptOutExtraMsg',(select id from master.menu where name = 'Driver Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblOptOutExtraMsg' and ref_id=(select id from master.menu where name = 'Driver Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblInheritAttemptingMsg',(select id from master.menu where name = 'Driver Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblInheritAttemptingMsg' and ref_id=(select id from master.menu where name = 'Driver Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblSinceyourorganisationconsentis',(select id from master.menu where name = 'Driver Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblSinceyourorganisationconsentis' and ref_id=(select id from master.menu where name = 'Driver Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblAlldriverswassuccessfully',(select id from master.menu where name = 'Driver Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblAlldriverswassuccessfully' and ref_id=(select id from master.menu where name = 'Driver Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblOptedin',(select id from master.menu where name = 'Driver Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblOptedin' and ref_id=(select id from master.menu where name = 'Driver Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblThedrivewasOptedinsuccessfully',(select id from master.menu where name = 'Driver Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblThedrivewasOptedinsuccessfully' and ref_id=(select id from master.menu where name = 'Driver Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblOptedout',(select id from master.menu where name = 'Driver Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblOptedout' and ref_id=(select id from master.menu where name = 'Driver Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblThedrivewasOptedoutsuccessfully',(select id from master.menu where name = 'Driver Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblThedrivewasOptedoutsuccessfully' and ref_id=(select id from master.menu where name = 'Driver Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblThedrivewassuccessfully',(select id from master.menu where name = 'Driver Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblThedrivewassuccessfully' and ref_id=(select id from master.menu where name = 'Driver Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblDriverIDConsent',(select id from master.menu where name = 'Driver Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblDriverIDConsent' and ref_id=(select id from master.menu where name = 'Driver Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblName',(select id from master.menu where name = 'Driver Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblName' and ref_id=(select id from master.menu where name = 'Driver Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblOrgnization',(select id from master.menu where name = 'Driver Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblOrgnization' and ref_id=(select id from master.menu where name = 'Driver Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblTotalDrivers',(select id from master.menu where name = 'Driver Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblTotalDrivers' and ref_id=(select id from master.menu where name = 'Driver Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblCurrentConsentStatusForSubscriber',(select id from master.menu where name = 'Driver Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblCurrentConsentStatusForSubscriber' and ref_id=(select id from master.menu where name = 'Driver Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblOptOutMessage',(select id from master.menu where name = 'Driver Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblOptOutMessage' and ref_id=(select id from master.menu where name = 'Driver Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblHence',(select id from master.menu where name = 'Driver Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblHence' and ref_id=(select id from master.menu where name = 'Driver Management'));

update translation.translation set value='Feature Management' where lower(code)=lower('EN-GB') and name='lblFeatureManagement';
update translation.translation set value='Alert' where lower(code)=lower('EN-GB') and name='lblAlert';
update translation.translation set value='You want to # ''$'' Details?' where lower(code)=lower('EN-GB') and name='lblYouwanttoDetails';
update translation.translation set value='No' where lower(code)=lower('EN-GB') and name='lblNo';
update translation.translation set value='Yes' where lower(code)=lower('EN-GB') and name='lblYes';
update translation.translation set value='Delete' where lower(code)=lower('EN-GB') and name='lblDelete';
update translation.translation set value='Are you sure you want to delete ''$'' ?' where lower(code)=lower('EN-GB') and name='lblAreyousureyouwanttodelete';
update translation.translation set value='Cancel' where lower(code)=lower('EN-GB') and name='lblCancel';
update translation.translation set value='Feature Relationship ''$'' was successfully deleted' where lower(code)=lower('EN-GB') and name='lblFeatureRelationshipwassuccessfullydeleted';
update translation.translation set value='Data Attribute Features' where lower(code)=lower('EN-GB') and name='lblDataAttributeFeatures';
update translation.translation set value='Search' where lower(code)=lower('EN-GB') and name='lblSearch';
update translation.translation set value='New Feature' where lower(code)=lower('EN-GB') and name='lblNewFeature';
update translation.translation set value='No Record Found' where lower(code)=lower('EN-GB') and name='lblNoRecordFound';
update translation.translation set value='Data Attribute Set Name' where lower(code)=lower('EN-GB') and name='lblDataAttributeSetName';
update translation.translation set value='New' where lower(code)=lower('EN-GB') and name='lblNew';
update translation.translation set value='Data Attribute Set Type' where lower(code)=lower('EN-GB') and name='lblDataAttributeSetType';
update translation.translation set value='Status' where lower(code)=lower('EN-GB') and name='lblStatus';
update translation.translation set value='Active' where lower(code)=lower('EN-GB') and name='lblActive';
update translation.translation set value='InActive' where lower(code)=lower('EN-GB') and name='lblInActive';
update translation.translation set value='Action' where lower(code)=lower('EN-GB') and name='lblAction';
update translation.translation set value='View' where lower(code)=lower('EN-GB') and name='lblView';
update translation.translation set value='Edit' where lower(code)=lower('EN-GB') and name='lblEdit';
update translation.translation set value='Home' where lower(code)=lower('EN-GB') and name='lblHome';
update translation.translation set value='Admin' where lower(code)=lower('EN-GB') and name='lblAdmin';
update translation.translation set value='View Feature Relationship' where lower(code)=lower('EN-GB') and name='lblViewFeatureRelationship';
update translation.translation set value='Feature Relationship Details' where lower(code)=lower('EN-GB') and name='lblFeatureRelationshipDetails';
update translation.translation set value='New Feature ''''$'''' Created Successfully' where lower(code)=lower('EN-GB') and name='lblNewFeatureCreatedSuccessfully';
update translation.translation set value='Feature ''''$'''' Updated Successfully' where lower(code)=lower('EN-GB') and name='lblFeatureUpdatedSuccessfully';
update translation.translation set value='Back' where lower(code)=lower('EN-GB') and name='lblBack';
update translation.translation set value='Add Feature Relationship' where lower(code)=lower('EN-GB') and name='lblAddFeatureRelationship';
update translation.translation set value='Edit Feature Relationship' where lower(code)=lower('EN-GB') and name='lblEditFeatureRelationship';
update translation.translation set value='New Feature will auto create same as Data Attribute set name' where lower(code)=lower('EN-GB') and name='lblToolTipTextDataAttrSetName';
update translation.translation set value='250 characters max' where lower(code)=lower('EN-GB') and name='lbl250CharMax';
update translation.translation set value='Duplicate Data Attribute Set Name' where lower(code)=lower('EN-GB') and name='lblDuplicateDataAttributeSetName';
update translation.translation set value='Enter Data Attribute Set Name' where lower(code)=lower('EN-GB') and name='lblEnterDataAttributeSetName';
update translation.translation set value='Please enter data attribute set name' where lower(code)=lower('EN-GB') and name='lblPleasenterdatattributesetname';
update translation.translation set value='Data Attribute Set cannot contain only whitespace' where lower(code)=lower('EN-GB') and name='lblDataAttributeSetcannotcontainonlywhitespace';
update translation.translation set value='Max length should be 250' where lower(code)=lower('EN-GB') and name='lblDataAttributeSetmaxlength';
update translation.translation set value='Special characters not allowed' where lower(code)=lower('EN-GB') and name='lblSpecialcharactersnotallowed';
update translation.translation set value='Data Attribute Set already exists. Please choose a different.' where lower(code)=lower('EN-GB') and name='lblDataAttributeSetalreadyexistsPleasechooseadifferentisAttributeSet';
update translation.translation set value='Data Attribute Description' where lower(code)=lower('EN-GB') and name='lblDataAttributeDescription';
update translation.translation set value='100 characters max' where lower(code)=lower('EN-GB') and name='lbl100CharMax';
update translation.translation set value='Enter Data Attribute Description' where lower(code)=lower('EN-GB') and name='lblEnterDataAttributeDescription';
update translation.translation set value='Data Attribute Description cannot contain only whitespace' where lower(code)=lower('EN-GB') and name='lblDataAttributeDescriptioncannotcontainonlywhitespace';
update translation.translation set value='Exclusive' where lower(code)=lower('EN-GB') and name='lblExclusive';
update translation.translation set value='Inclusive' where lower(code)=lower('EN-GB') and name='lblInclusive';
update translation.translation set value='You can select multiple ''''Data Attributes'''' from below list to map with this Feature Relationship' where lower(code)=lower('EN-GB') and name='lblFeatureHintMessage';
update translation.translation set value='You can select multiple ''''Data Attributes'''' from below list to map with this Feature Relationship' where lower(code)=lower('EN-GB') and name='lblEditFeatureHintMessage';
update translation.translation set value='Reset' where lower(code)=lower('EN-GB') and name='lblReset';
update translation.translation set value='Create' where lower(code)=lower('EN-GB') and name='lblCreate';
update translation.translation set value='Confirm' where lower(code)=lower('EN-GB') and name='lblConfirm';
update translation.translation set value='Selected Data Attribute' where lower(code)=lower('EN-GB') and name='lblSelectedDataAttribute';
update translation.translation set value='Select Data Attribute' where lower(code)=lower('EN-GB') and name='lblSelectDataAttribute';
update translation.translation set value='Data Attribute' where lower(code)=lower('EN-GB') and name='lblDataAttribute';
update translation.translation set value='Exclude' where lower(code)=lower('EN-GB') and name='lblExclude';
update translation.translation set value='Include' where lower(code)=lower('EN-GB') and name='lblInclude';

INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblFeatureManagement','Feature Management',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblFeatureManagement');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblAlert','Alert',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblAlert');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblYouwanttoDetails','You want to # ''$'' Details?',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblYouwanttoDetails');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblNo','No',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblNo');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblYes','Yes',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblYes');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblDelete','Delete',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblDelete');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblAreyousureyouwanttodelete','Are you sure you want to delete ''$'' ?',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblAreyousureyouwanttodelete');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblCancel','Cancel',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblCancel');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblFeatureRelationshipwassuccessfullydeleted','Feature Relationship ''$'' was successfully deleted',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblFeatureRelationshipwassuccessfullydeleted');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblDataAttributeFeatures','Data Attribute Features',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblDataAttributeFeatures');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblSearch','Search',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblSearch');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblNewFeature','New Feature',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblNewFeature');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblNoRecordFound','No Record Found',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblNoRecordFound');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblDataAttributeSetName','Data Attribute Set Name',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblDataAttributeSetName');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblNew','New',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblNew');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblDataAttributeSetType','Data Attribute Set Type',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblDataAttributeSetType');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblStatus','Status',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblStatus');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblActive','Active',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblActive');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblInActive','InActive',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblInActive');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblAction','Action',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblAction');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblView','View',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblView');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblEdit','Edit',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblEdit');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblHome','Home',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblHome');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblAdmin','Admin',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblAdmin');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblViewFeatureRelationship','View Feature Relationship',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblViewFeatureRelationship');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblFeatureRelationshipDetails','Feature Relationship Details',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblFeatureRelationshipDetails');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblNewFeatureCreatedSuccessfully','New Feature ''''$'''' Created Successfully',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblNewFeatureCreatedSuccessfully');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblFeatureUpdatedSuccessfully','Feature ''''$'''' Updated Successfully',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblFeatureUpdatedSuccessfully');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblBack','Back',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblBack');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblAddFeatureRelationship','Add Feature Relationship',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblAddFeatureRelationship');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblEditFeatureRelationship','Edit Feature Relationship',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblEditFeatureRelationship');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblToolTipTextDataAttrSetName','New Feature will auto create same as Data Attribute set name',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblToolTipTextDataAttrSetName');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lbl250CharMax','250 characters max',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lbl250CharMax');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblDuplicateDataAttributeSetName','Duplicate Data Attribute Set Name',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblDuplicateDataAttributeSetName');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblEnterDataAttributeSetName','Enter Data Attribute Set Name',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblEnterDataAttributeSetName');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblPleasenterdatattributesetname','Please enter data attribute set name',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblPleasenterdatattributesetname');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblDataAttributeSetcannotcontainonlywhitespace','Data Attribute Set cannot contain only whitespace',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblDataAttributeSetcannotcontainonlywhitespace');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblDataAttributeSetmaxlength','Max length should be 250',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblDataAttributeSetmaxlength');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblSpecialcharactersnotallowed','Special characters not allowed',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblSpecialcharactersnotallowed');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblDataAttributeSetalreadyexistsPleasechooseadifferentisAttributeSet','Data Attribute Set already exists. Please choose a different.',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblDataAttributeSetalreadyexistsPleasechooseadifferentisAttributeSet');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblDataAttributeDescription','Data Attribute Description',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblDataAttributeDescription');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lbl100CharMax','100 characters max',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lbl100CharMax');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblEnterDataAttributeDescription','Enter Data Attribute Description',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblEnterDataAttributeDescription');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblDataAttributeDescriptioncannotcontainonlywhitespace','Data Attribute Description cannot contain only whitespace',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblDataAttributeDescriptioncannotcontainonlywhitespace');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblExclusive','Exclusive',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblExclusive');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblInclusive','Inclusive',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblInclusive');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblFeatureHintMessage','You can select multiple ''''Data Attributes'''' from below list to map with this Feature Relationship',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblFeatureHintMessage');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblEditFeatureHintMessage','You can select multiple ''''Data Attributes'''' from below list to map with this Feature Relationship',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblEditFeatureHintMessage');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblReset','Reset',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblReset');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblCreate','Create',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblCreate');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblConfirm','Confirm',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblConfirm');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblSelectedDataAttribute','Selected Data Attribute',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblSelectedDataAttribute');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblSelectDataAttribute','Select Data Attribute',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblSelectDataAttribute');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblDataAttribute','Data Attribute',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblDataAttribute');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblExclude','Exclude',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblExclude');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblInclude','Include',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblInclude');

INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblFeatureManagement',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblFeatureManagement' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblAlert',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblAlert' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblYouwanttoDetails',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblYouwanttoDetails' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblNo',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblNo' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblYes',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblYes' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblDelete',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblDelete' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblAreyousureyouwanttodelete',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblAreyousureyouwanttodelete' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblCancel',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblCancel' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblFeatureRelationshipwassuccessfullydeleted',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblFeatureRelationshipwassuccessfullydeleted' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblDataAttributeFeatures',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblDataAttributeFeatures' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblSearch',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblSearch' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblNewFeature',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblNewFeature' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblNoRecordFound',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblNoRecordFound' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblDataAttributeSetName',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblDataAttributeSetName' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblNew',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblNew' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblDataAttributeSetType',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblDataAttributeSetType' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblStatus',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblStatus' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblActive',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblActive' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblInActive',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblInActive' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblAction',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblAction' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblView',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblView' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblEdit',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblEdit' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblHome',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblHome' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblAdmin',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblAdmin' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblViewFeatureRelationship',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblViewFeatureRelationship' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblFeatureRelationshipDetails',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblFeatureRelationshipDetails' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblNewFeatureCreatedSuccessfully',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblNewFeatureCreatedSuccessfully' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblFeatureUpdatedSuccessfully',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblFeatureUpdatedSuccessfully' and ref_id=(select id from master.menu where name = 'Feature Management'));

INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblBack',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblBack' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblAddFeatureRelationship',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblAddFeatureRelationship' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblEditFeatureRelationship',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblEditFeatureRelationship' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblToolTipTextDataAttrSetName',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblToolTipTextDataAttrSetName' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lbl250CharMax',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lbl250CharMax' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblDuplicateDataAttributeSetName',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblDuplicateDataAttributeSetName' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblEnterDataAttributeSetName',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblEnterDataAttributeSetName' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblPleasenterdatattributesetname',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblPleasenterdatattributesetname' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblDataAttributeSetcannotcontainonlywhitespace',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblDataAttributeSetcannotcontainonlywhitespace' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblDataAttributeSetmaxlength',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblDataAttributeSetmaxlength' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblSpecialcharactersnotallowed',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblSpecialcharactersnotallowed' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblDataAttributeSetalreadyexistsPleasechooseadifferentisAttributeSet',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblDataAttributeSetalreadyexistsPleasechooseadifferentisAttributeSet' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblDataAttributeDescription',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblDataAttributeDescription' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lbl100CharMax',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lbl100CharMax' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblEnterDataAttributeDescription',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblEnterDataAttributeDescription' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblDataAttributeDescriptioncannotcontainonlywhitespace',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblDataAttributeDescriptioncannotcontainonlywhitespace' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblExclusive',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblExclusive' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblInclusive',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblInclusive' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblFeatureHintMessage',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblFeatureHintMessage' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblEditFeatureHintMessage',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblEditFeatureHintMessage' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblReset',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblReset' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblCreate',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblCreate' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblConfirm',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblConfirm' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblSelectedDataAttribute',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblSelectedDataAttribute' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblSelectDataAttribute',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblSelectDataAttribute' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblDataAttribute',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblDataAttribute' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblExclude',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblExclude' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblInclude',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblInclude' and ref_id=(select id from master.menu where name = 'Feature Management'));

update translation.translation set value='Organisation Relationship Management' where lower(code)=lower('EN-GB') and name='lblOrganisationRelationshipManagement';
update translation.translation set value='Delete' where lower(code)=lower('EN-GB') and name='lblDelete';
update translation.translation set value='Do you want to end ''$'' relationship?' where lower(code)=lower('EN-GB') and name='lblAreyousureyouwanttodeleterelationship';
update translation.translation set value='No' where lower(code)=lower('EN-GB') and name='lblNo';
update translation.translation set value='Yes' where lower(code)=lower('EN-GB') and name='lblYes';
update translation.translation set value='Alert' where lower(code)=lower('EN-GB') and name='lblAlert';
update translation.translation set value='You want to # ''$'' Details?' where lower(code)=lower('EN-GB') and name='lblYouwanttoDetails';
update translation.translation set value='Relationship ''$'' was successfully deleted' where lower(code)=lower('EN-GB') and name='lblRelationshipwassuccessfullydeleted';
update translation.translation set value='Organisation Relationship Details' where lower(code)=lower('EN-GB') and name='lblOrganisationRelationshipDetails';
update translation.translation set value='New Relationship' where lower(code)=lower('EN-GB') and name='lblNewRelationship';
update translation.translation set value='Search' where lower(code)=lower('EN-GB') and name='lblSearch';
update translation.translation set value='End Relationship' where lower(code)=lower('EN-GB') and name='lblEndRelationship';
update translation.translation set value='No Record Found' where lower(code)=lower('EN-GB') and name='lblNoRecordFound';
update translation.translation set value='All' where lower(code)=lower('EN-GB') and name='lblAll';
update translation.translation set value='New' where lower(code)=lower('EN-GB') and name='lblNew';
update translation.translation set value='Relationship Name' where lower(code)=lower('EN-GB') and name='lblRelationshipName';
update translation.translation set value='Vehicle Group' where lower(code)=lower('EN-GB') and name='lblVehicleGroup';
update translation.translation set value='Target Organisation' where lower(code)=lower('EN-GB') and name='lblTargetOrganisation';
update translation.translation set value='Start Date' where lower(code)=lower('EN-GB') and name='lblStartDate';
update translation.translation set value='End Date' where lower(code)=lower('EN-GB') and name='lblEndDate';
update translation.translation set value='Allow Chaining' where lower(code)=lower('EN-GB') and name='lblAllowChaining';
update translation.translation set value='Home' where lower(code)=lower('EN-GB') and name='lblHome';
update translation.translation set value='Admin' where lower(code)=lower('EN-GB') and name='lblAdmin';
update translation.translation set value='Relationship Details' where lower(code)=lower('EN-GB') and name='lblRelationshipDetails';
update translation.translation set value='New Organisation Relationship ''$'' Created Successfully' where lower(code)=lower('EN-GB') and name='lblNewOrganisationRelationshipCreatedSuccessfully';
update translation.translation set value='Organisation Relationship ''$'' Updated Successfully' where lower(code)=lower('EN-GB') and name='lblOrganisationRelationshipUpdatedSuccessfully';
update translation.translation set value='Add New Relationship' where lower(code)=lower('EN-GB') and name='lblAddNewRelationsip';
update translation.translation set value='Relationship' where lower(code)=lower('EN-GB') and name='lblRelationsip';
update translation.translation set value='Select Relationship' where lower(code)=lower('EN-GB') and name='lblSelectCRelationship';
update translation.translation set value='Please select Relation' where lower(code)=lower('EN-GB') and name='lblPleaseEnterRelationname';
update translation.translation set value='Chain Relationship' where lower(code)=lower('EN-GB') and name='lblChainRelationship';
update translation.translation set value='Active' where lower(code)=lower('EN-GB') and name='lblActive';
update translation.translation set value='lnActive' where lower(code)=lower('EN-GB') and name='lblInActive';
update translation.translation set value='Select multiple ''vehicle Group and Organisation'' from below list to map with this Relationship.' where lower(code)=lower('EN-GB') and name='lblRelationshipInfo';
update translation.translation set value='Cancel' where lower(code)=lower('EN-GB') and name='lblCancel';
update translation.translation set value='Create' where lower(code)=lower('EN-GB') and name='lblCreate';
update translation.translation set value='Confirm' where lower(code)=lower('EN-GB') and name='lblConfirm';
update translation.translation set value='Select Vehicle Group' where lower(code)=lower('EN-GB') and name='lblSelectVehicleGroup';
update translation.translation set value='Vehicle Group Name' where lower(code)=lower('EN-GB') and name='lblVehicleGroupName';
update translation.translation set value='Select Organisation' where lower(code)=lower('EN-GB') and name='lblSelectOrganisation';
update translation.translation set value='Organisation Name' where lower(code)=lower('EN-GB') and name='lblOrganisationName';

INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblOrganisationRelationshipManagement','Organisation Relationship Management',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblOrganisationRelationshipManagement');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblDelete','Delete',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblDelete');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblAreyousureyouwanttodeleterelationship','Do you want to end ''$'' relationship?',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblAreyousureyouwanttodeleterelationship');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblNo','No',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblNo');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblYes','Yes',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblYes');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblAlert','Alert',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblAlert');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblYouwanttoDetails','You want to # ''$'' Details?',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblYouwanttoDetails');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblRelationshipwassuccessfullydeleted','Relationship ''$'' was successfully deleted',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblRelationshipwassuccessfullydeleted');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblOrganisationRelationshipDetails','Organisation Relationship Details',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblOrganisationRelationshipDetails');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblNewRelationship','New Relationship',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblNewRelationship');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblSearch','Search',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblSearch');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblEndRelationship','End Relationship',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblEndRelationship');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblNoRecordFound','No Record Found',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblNoRecordFound');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblAll','All',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblAll');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblNew','New',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblNew');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblRelationshipName','Relationship Name',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblRelationshipName');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblVehicleGroup','Vehicle Group',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblVehicleGroup');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblTargetOrganisation','Target Organisation',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblTargetOrganisation');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblStartDate','Start Date',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblStartDate');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblEndDate','End Date',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblEndDate');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblAllowChaining','Allow Chaining',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblAllowChaining');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblHome','Home',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblHome');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblAdmin','Admin',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblAdmin');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblRelationshipDetails','Relationship Details',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblRelationshipDetails');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblNewOrganisationRelationshipCreatedSuccessfully','New Organisation Relationship ''$'' Created Successfully',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblNewOrganisationRelationshipCreatedSuccessfully');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblOrganisationRelationshipUpdatedSuccessfully','Organisation Relationship ''$'' Updated Successfully',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblOrganisationRelationshipUpdatedSuccessfully');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblAddNewRelationsip','Add New Relationship',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblAddNewRelationsip');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblRelationsip','Relationship',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblRelationsip');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblSelectCRelationship','Select Relationship',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblSelectCRelationship');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblPleaseEnterRelationname','Please select Relation',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblPleaseEnterRelationname');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblChainRelationship','Chain Relationship',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblChainRelationship');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblActive','Active',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblActive');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblInActive','lnActive',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblInActive');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblRelationshipInfo','Select multiple ''vehicle Group and Organisation'' from below list to map with this Relationship.',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblRelationshipInfo');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblCancel','Cancel',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblCancel');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblCreate','Create',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblCreate');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblConfirm','Confirm',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblConfirm');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblSelectVehicleGroup','Select Vehicle Group',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblSelectVehicleGroup');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblVehicleGroupName','Vehicle Group Name',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblVehicleGroupName');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblSelectOrganisation','Select Organisation',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblSelectOrganisation');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblOrganisationName','Organisation Name',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblOrganisationName');

INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblOrganisationRelationshipManagement',(select id from master.menu where name = 'Organisation Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblOrganisationRelationshipManagement' and ref_id=(select id from master.menu where name = 'Organisation Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblDelete',(select id from master.menu where name = 'Organisation Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblDelete' and ref_id=(select id from master.menu where name = 'Organisation Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblAreyousureyouwanttodeleterelationship',(select id from master.menu where name = 'Organisation Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblAreyousureyouwanttodeleterelationship' and ref_id=(select id from master.menu where name = 'Organisation Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblNo',(select id from master.menu where name = 'Organisation Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblNo' and ref_id=(select id from master.menu where name = 'Organisation Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblYes',(select id from master.menu where name = 'Organisation Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblYes' and ref_id=(select id from master.menu where name = 'Organisation Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblAlert',(select id from master.menu where name = 'Organisation Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblAlert' and ref_id=(select id from master.menu where name = 'Organisation Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblYouwanttoDetails',(select id from master.menu where name = 'Organisation Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblYouwanttoDetails' and ref_id=(select id from master.menu where name = 'Organisation Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblRelationshipwassuccessfullydeleted',(select id from master.menu where name = 'Organisation Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblRelationshipwassuccessfullydeleted' and ref_id=(select id from master.menu where name = 'Organisation Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblOrganisationRelationshipDetails',(select id from master.menu where name = 'Organisation Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblOrganisationRelationshipDetails' and ref_id=(select id from master.menu where name = 'Organisation Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblNewRelationship',(select id from master.menu where name = 'Organisation Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblNewRelationship' and ref_id=(select id from master.menu where name = 'Organisation Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblSearch',(select id from master.menu where name = 'Organisation Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblSearch' and ref_id=(select id from master.menu where name = 'Organisation Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblEndRelationship',(select id from master.menu where name = 'Organisation Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblEndRelationship' and ref_id=(select id from master.menu where name = 'Organisation Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblNoRecordFound',(select id from master.menu where name = 'Organisation Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblNoRecordFound' and ref_id=(select id from master.menu where name = 'Organisation Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblAll',(select id from master.menu where name = 'Organisation Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblAll' and ref_id=(select id from master.menu where name = 'Organisation Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblNew',(select id from master.menu where name = 'Organisation Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblNew' and ref_id=(select id from master.menu where name = 'Organisation Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblRelationshipName',(select id from master.menu where name = 'Organisation Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblRelationshipName' and ref_id=(select id from master.menu where name = 'Organisation Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblVehicleGroup',(select id from master.menu where name = 'Organisation Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblVehicleGroup' and ref_id=(select id from master.menu where name = 'Organisation Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblTargetOrganisation',(select id from master.menu where name = 'Organisation Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblTargetOrganisation' and ref_id=(select id from master.menu where name = 'Organisation Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblStartDate',(select id from master.menu where name = 'Organisation Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblStartDate' and ref_id=(select id from master.menu where name = 'Organisation Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblEndDate',(select id from master.menu where name = 'Organisation Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblEndDate' and ref_id=(select id from master.menu where name = 'Organisation Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblAllowChaining',(select id from master.menu where name = 'Organisation Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblAllowChaining' and ref_id=(select id from master.menu where name = 'Organisation Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblHome',(select id from master.menu where name = 'Organisation Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblHome' and ref_id=(select id from master.menu where name = 'Organisation Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblAdmin',(select id from master.menu where name = 'Organisation Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblAdmin' and ref_id=(select id from master.menu where name = 'Organisation Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblRelationshipDetails',(select id from master.menu where name = 'Organisation Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblRelationshipDetails' and ref_id=(select id from master.menu where name = 'Organisation Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblNewOrganisationRelationshipCreatedSuccessfully',(select id from master.menu where name = 'Organisation Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblNewOrganisationRelationshipCreatedSuccessfully' and ref_id=(select id from master.menu where name = 'Organisation Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblOrganisationRelationshipUpdatedSuccessfully',(select id from master.menu where name = 'Organisation Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblOrganisationRelationshipUpdatedSuccessfully' and ref_id=(select id from master.menu where name = 'Organisation Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblAddNewRelationsip',(select id from master.menu where name = 'Organisation Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblAddNewRelationsip' and ref_id=(select id from master.menu where name = 'Organisation Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblRelationsip',(select id from master.menu where name = 'Organisation Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblRelationsip' and ref_id=(select id from master.menu where name = 'Organisation Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblSelectCRelationship',(select id from master.menu where name = 'Organisation Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblSelectCRelationship' and ref_id=(select id from master.menu where name = 'Organisation Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblPleaseEnterRelationname',(select id from master.menu where name = 'Organisation Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblPleaseEnterRelationname' and ref_id=(select id from master.menu where name = 'Organisation Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblChainRelationship',(select id from master.menu where name = 'Organisation Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblChainRelationship' and ref_id=(select id from master.menu where name = 'Organisation Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblActive',(select id from master.menu where name = 'Organisation Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblActive' and ref_id=(select id from master.menu where name = 'Organisation Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblInActive',(select id from master.menu where name = 'Organisation Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblInActive' and ref_id=(select id from master.menu where name = 'Organisation Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblRelationshipInfo',(select id from master.menu where name = 'Organisation Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblRelationshipInfo' and ref_id=(select id from master.menu where name = 'Organisation Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblCancel',(select id from master.menu where name = 'Organisation Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblCancel' and ref_id=(select id from master.menu where name = 'Organisation Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblCreate',(select id from master.menu where name = 'Organisation Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblCreate' and ref_id=(select id from master.menu where name = 'Organisation Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblConfirm',(select id from master.menu where name = 'Organisation Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblConfirm' and ref_id=(select id from master.menu where name = 'Organisation Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblSelectVehicleGroup',(select id from master.menu where name = 'Organisation Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblSelectVehicleGroup' and ref_id=(select id from master.menu where name = 'Organisation Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblVehicleGroupName',(select id from master.menu where name = 'Organisation Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblVehicleGroupName' and ref_id=(select id from master.menu where name = 'Organisation Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblSelectOrganisation',(select id from master.menu where name = 'Organisation Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblSelectOrganisation' and ref_id=(select id from master.menu where name = 'Organisation Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblOrganisationName',(select id from master.menu where name = 'Organisation Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblOrganisationName' and ref_id=(select id from master.menu where name = 'Organisation Relationship Management'));

update translation.translation set value='Package Management' where lower(code)=lower('EN-GB') and name='lblPackageManagement';
update translation.translation set value='Alert' where lower(code)=lower('EN-GB') and name='lblAlert';
update translation.translation set value='You want to # ''$'' Details?' where lower(code)=lower('EN-GB') and name='lblYouwanttoDetails';
update translation.translation set value='No' where lower(code)=lower('EN-GB') and name='lblNo';
update translation.translation set value='Yes' where lower(code)=lower('EN-GB') and name='lblYes';
update translation.translation set value='Delete' where lower(code)=lower('EN-GB') and name='lblDelete';
update translation.translation set value='Are you sure you want to delete ''$'' ?' where lower(code)=lower('EN-GB') and name='lblAreyousureyouwanttodelete';
update translation.translation set value='Cancel' where lower(code)=lower('EN-GB') and name='lblCancel';
update translation.translation set value='Package ''$'' was successfully deleted' where lower(code)=lower('EN-GB') and name='lblPackagewassuccessfullydeleted';
update translation.translation set value='Package Details' where lower(code)=lower('EN-GB') and name='lblPackageDetails';
update translation.translation set value='Search' where lower(code)=lower('EN-GB') and name='lblSearch';
update translation.translation set value='New Package' where lower(code)=lower('EN-GB') and name='lblNewPackage';
update translation.translation set value='No Record Found' where lower(code)=lower('EN-GB') and name='lblNoRecordFound';
update translation.translation set value='Package Code' where lower(code)=lower('EN-GB') and name='lblPackageCode';
update translation.translation set value='New' where lower(code)=lower('EN-GB') and name='lblNew';
update translation.translation set value='Name' where lower(code)=lower('EN-GB') and name='lblName';
update translation.translation set value='Type' where lower(code)=lower('EN-GB') and name='lblType';
update translation.translation set value='Status' where lower(code)=lower('EN-GB') and name='lblStatus';
update translation.translation set value='Click to Deactivate' where lower(code)=lower('EN-GB') and name='lblClicktodeactivate';
update translation.translation set value='Click to Activate' where lower(code)=lower('EN-GB') and name='lblClicktoactivate';
update translation.translation set value='Active' where lower(code)=lower('EN-GB') and name='lblActive';
update translation.translation set value='InActive' where lower(code)=lower('EN-GB') and name='lblInActive';
update translation.translation set value='Action' where lower(code)=lower('EN-GB') and name='lblAction';
update translation.translation set value='View' where lower(code)=lower('EN-GB') and name='lblView';
update translation.translation set value='Edit' where lower(code)=lower('EN-GB') and name='lblEdit';
update translation.translation set value='Home' where lower(code)=lower('EN-GB') and name='lblHome';
update translation.translation set value='Admin' where lower(code)=lower('EN-GB') and name='lblAdmin';
update translation.translation set value='View Package' where lower(code)=lower('EN-GB') and name='lblViewPackage';
update translation.translation set value='Edit Package Details' where lower(code)=lower('EN-GB') and name='lblEditPackageDetails';
update translation.translation set value='Add New Package' where lower(code)=lower('EN-GB') and name='lblAddNewPackage';
update translation.translation set value='New Package ''$'' Created Successfully' where lower(code)=lower('EN-GB') and name='lblNewPackageCreatedSuccessfully';
update translation.translation set value='Package ''$'' Updated Successfully' where lower(code)=lower('EN-GB') and name='lblPackageUpdatedSuccessfully';
update translation.translation set value='Back' where lower(code)=lower('EN-GB') and name='lblBack';
update translation.translation set value='View Package Details' where lower(code)=lower('EN-GB') and name='lblViewPackageDetails';
update translation.translation set value='Enter Package code' where lower(code)=lower('EN-GB') and name='lblEnterPackagecode';
update translation.translation set value='Please enter Package Code' where lower(code)=lower('EN-GB') and name='lblPleasenterpackagecode';
update translation.translation set value='Package Code cannot contain only whitespace' where lower(code)=lower('EN-GB') and name='lblPackagecodecannotcontainonlywhitespace';
update translation.translation set value='Special characters not allowed' where lower(code)=lower('EN-GB') and name='lblSpecialcharactersnotallowed';
update translation.translation set value='Package code already exists' where lower(code)=lower('EN-GB') and name='lblPackagecodealreadyexists';
update translation.translation set value='Package Name' where lower(code)=lower('EN-GB') and name='lblPackageName';
update translation.translation set value='Enter Package Name' where lower(code)=lower('EN-GB') and name='lblEnterPackageName';
update translation.translation set value='Please enter Package Name' where lower(code)=lower('EN-GB') and name='lblPleasenterpackagename';
update translation.translation set value='Package Name cannot contain only whitespace' where lower(code)=lower('EN-GB') and name='lblPackagenamecannotcontainonlywhitespace';
update translation.translation set value='Description' where lower(code)=lower('EN-GB') and name='lblDescription';
update translation.translation set value='100 characters max' where lower(code)=lower('EN-GB') and name='lbl120CharMax';
update translation.translation set value='Enter Description' where lower(code)=lower('EN-GB') and name='lblEnterDescription';
update translation.translation set value='Feature Description cannot contain only whitespace' where lower(code)=lower('EN-GB') and name='lblDescriptioncannotcontainonlywhitespace';
update translation.translation set value='Please Select Package Type' where lower(code)=lower('EN-GB') and name='lblPleaseselectpackagetype';
update translation.translation set value='You can select multiple features from below list to map with this Package. Feature selection is mandatory.' where lower(code)=lower('EN-GB') and name='lblHintMessage';
update translation.translation set value='Reset' where lower(code)=lower('EN-GB') and name='lblReset';
update translation.translation set value='Create' where lower(code)=lower('EN-GB') and name='lblCreate';
update translation.translation set value='Confirm' where lower(code)=lower('EN-GB') and name='lblConfirm';
update translation.translation set value='Selected Features' where lower(code)=lower('EN-GB') and name='lblSelectedFeatures';
update translation.translation set value='Select Features' where lower(code)=lower('EN-GB') and name='lblSelectFeatures';
update translation.translation set value='Feature Name' where lower(code)=lower('EN-GB') and name='lblFeatureName';
update translation.translation set value='Include' where lower(code)=lower('EN-GB') and name='lblInclude';

INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblPackageManagement','Package Management',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblPackageManagement');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblAlert','Alert',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblAlert');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblYouwanttoDetails','You want to # ''$'' Details?',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblYouwanttoDetails');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblNo','No',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblNo');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblYes','Yes',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblYes');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblDelete','Delete',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblDelete');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblAreyousureyouwanttodelete','Are you sure you want to delete ''$'' ?',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblAreyousureyouwanttodelete');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblCancel','Cancel',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblCancel');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblPackagewassuccessfullydeleted','Package ''$'' was successfully deleted',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblPackagewassuccessfullydeleted');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblPackageDetails','Package Details',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblPackageDetails');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblSearch','Search',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblSearch');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblNewPackage','New Package',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblNewPackage');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblNoRecordFound','No Record Found',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblNoRecordFound');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblPackageCode','Package Code',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblPackageCode');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblNew','New',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblNew');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblName','Name',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblName');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblType','Type',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblType');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblStatus','Status',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblStatus');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblClicktodeactivate','Click to Deactivate',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblClicktodeactivate');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblClicktoactivate','Click to Activate',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblClicktoactivate');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblActive','Active',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblActive');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblInActive','InActive',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblInActive');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblAction','Action',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblAction');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblView','View',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblView');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblEdit','Edit',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblEdit');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblHome','Home',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblHome');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblAdmin','Admin',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblAdmin');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblViewPackage','View Package',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblViewPackage');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblEditPackageDetails','Edit Package Details',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblEditPackageDetails');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblAddNewPackage','Add New Package',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblAddNewPackage');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblNewPackageCreatedSuccessfully','New Package ''$'' Created Successfully',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblNewPackageCreatedSuccessfully');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblPackageUpdatedSuccessfully','Package ''$'' Updated Successfully',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblPackageUpdatedSuccessfully');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblBack','Back',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblBack');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblViewPackageDetails','View Package Details',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblViewPackageDetails');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblEnterPackagecode','Enter Package code',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblEnterPackagecode');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblPleasenterpackagecode','Please enter Package Code',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblPleasenterpackagecode');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblPackagecodecannotcontainonlywhitespace','Package Code cannot contain only whitespace',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblPackagecodecannotcontainonlywhitespace');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblSpecialcharactersnotallowed','Special characters not allowed',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblSpecialcharactersnotallowed');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblPackagecodealreadyexists','Package code already exists',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblPackagecodealreadyexists');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblPackageName','Package Name',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblPackageName');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblEnterPackageName','Enter Package Name',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblEnterPackageName');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblPleasenterpackagename','Please enter Package Name',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblPleasenterpackagename');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblPackagenamecannotcontainonlywhitespace','Package Name cannot contain only whitespace',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblPackagenamecannotcontainonlywhitespace');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblDescription','Description',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblDescription');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lbl120CharMax','100 characters max',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lbl120CharMax');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblEnterDescription','Enter Description',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblEnterDescription');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblDescriptioncannotcontainonlywhitespace','Feature Description cannot contain only whitespace',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblDescriptioncannotcontainonlywhitespace');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblPleaseselectpackagetype','Please Select Package Type',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblPleaseselectpackagetype');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblHintMessage','You can select multiple features from below list to map with this Package. Feature selection is mandatory.',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblHintMessage');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblReset','Reset',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblReset');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblCreate','Create',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblCreate');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblConfirm','Confirm',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblConfirm');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblSelectedFeatures','Selected Features',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblSelectedFeatures');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblSelectFeatures','Select Features',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblSelectFeatures');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblFeatureName','Feature Name',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblFeatureName');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblInclude','Include',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblInclude');

INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblPackageManagement',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblPackageManagement' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblAlert',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblAlert' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblYouwanttoDetails',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblYouwanttoDetails' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblNo',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblNo' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblYes',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblYes' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblDelete',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblDelete' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblAreyousureyouwanttodelete',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblAreyousureyouwanttodelete' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblCancel',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblCancel' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblPackagewassuccessfullydeleted',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblPackagewassuccessfullydeleted' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblPackageDetails',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblPackageDetails' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblSearch',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblSearch' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblNewPackage',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblNewPackage' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblNoRecordFound',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblNoRecordFound' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblPackageCode',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblPackageCode' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblNew',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblNew' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblName',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblName' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblType',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblType' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblStatus',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblStatus' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblClicktodeactivate',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblClicktodeactivate' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblClicktoactivate',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblClicktoactivate' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblActive',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblActive' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblInActive',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblInActive' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblAction',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblAction' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblView',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblView' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblEdit',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblEdit' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblHome',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblHome' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblAdmin',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblAdmin' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblViewPackage',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblViewPackage' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblEditPackageDetails',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblEditPackageDetails' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblAddNewPackage',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblAddNewPackage' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblNewPackageCreatedSuccessfully',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblNewPackageCreatedSuccessfully' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblPackageUpdatedSuccessfully',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblPackageUpdatedSuccessfully' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblBack',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblBack' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblViewPackageDetails',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblViewPackageDetails' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblEnterPackagecode',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblEnterPackagecode' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblPleasenterpackagecode',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblPleasenterpackagecode' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblPackagecodecannotcontainonlywhitespace',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblPackagecodecannotcontainonlywhitespace' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblSpecialcharactersnotallowed',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblSpecialcharactersnotallowed' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblPackagecodealreadyexists',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblPackagecodealreadyexists' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblPackageName',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblPackageName' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblEnterPackageName',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblEnterPackageName' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblPleasenterpackagename',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblPleasenterpackagename' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblPackagenamecannotcontainonlywhitespace',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblPackagenamecannotcontainonlywhitespace' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblDescription',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblDescription' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lbl120CharMax',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lbl120CharMax' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblEnterDescription',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblEnterDescription' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblDescriptioncannotcontainonlywhitespace',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblDescriptioncannotcontainonlywhitespace' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblPleaseselectpackagetype',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblPleaseselectpackagetype' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblHintMessage',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblHintMessage' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblReset',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblReset' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblCreate',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblCreate' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblConfirm',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblConfirm' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblSelectedFeatures',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblSelectedFeatures' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblSelectFeatures',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblSelectFeatures' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblFeatureName',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblFeatureName' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblInclude',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblInclude' and ref_id=(select id from master.menu where name = 'Package Management'));

update translation.translation set value='Relationship Management' where lower(code)=lower('EN-GB') and name='lblRelationshipManagement';
update translation.translation set value='Add New Relationship' where lower(code)=lower('EN-GB') and name='lblAddNewRelationship';
update translation.translation set value='Relationship Details' where lower(code)=lower('EN-GB') and name='lblRelationshipDetails';
update translation.translation set value='Delete' where lower(code)=lower('EN-GB') and name='lblDelete';
update translation.translation set value='Are you sure you want to delete ''$'' relationship?' where lower(code)=lower('EN-GB') and name='lblAreyousureyouwanttodeleterelationship';
update translation.translation set value='Cancel' where lower(code)=lower('EN-GB') and name='lblCancel';
update translation.translation set value='Relationship ''$'' was successfully deleted' where lower(code)=lower('EN-GB') and name='lblRelationshipwassuccessfullydeleted';
update translation.translation set value='Relationship ''$'' Created Successfully' where lower(code)=lower('EN-GB') and name='lblRelationshipCreatedSuccessfully';
update translation.translation set value='Relationship ''$'' details successfully updated' where lower(code)=lower('EN-GB') and name='lblRelationshipdetailssuccessfullyupdated';
update translation.translation set value='Search' where lower(code)=lower('EN-GB') and name='lblSearch';
update translation.translation set value='New Relationship' where lower(code)=lower('EN-GB') and name='lblNewRelationship';
update translation.translation set value='No Record Found' where lower(code)=lower('EN-GB') and name='lblNoRecordFound';
update translation.translation set value='Name' where lower(code)=lower('EN-GB') and name='lblName';
update translation.translation set value='New' where lower(code)=lower('EN-GB') and name='lblNew';
update translation.translation set value='Features' where lower(code)=lower('EN-GB') and name='lblFeatures';
update translation.translation set value='Level' where lower(code)=lower('EN-GB') and name='lblLevel';
update translation.translation set value='Code' where lower(code)=lower('EN-GB') and name='lblCode';
update translation.translation set value='Description' where lower(code)=lower('EN-GB') and name='lblDescription';
update translation.translation set value='Action' where lower(code)=lower('EN-GB') and name='lblAction';
update translation.translation set value='Home' where lower(code)=lower('EN-GB') and name='lblHome';
update translation.translation set value='Admin' where lower(code)=lower('EN-GB') and name='lblAdmin';
update translation.translation set value='Back' where lower(code)=lower('EN-GB') and name='lblBack';
update translation.translation set value='Relationship Name' where lower(code)=lower('EN-GB') and name='lblRelationshipName';
update translation.translation set value='Relationship Description' where lower(code)=lower('EN-GB') and name='lblRelationshipDescription';
update translation.translation set value='New Relationship Name' where lower(code)=lower('EN-GB') and name='lblNewRelationshipName';
update translation.translation set value='Enter Relationship Name' where lower(code)=lower('EN-GB') and name='lblEnterRelationshipName';
update translation.translation set value='Please enter the relationship name' where lower(code)=lower('EN-GB') and name='lblPleaseentertheRelationshipname';
update translation.translation set value='Relationshipname should be max. 60 characters' where lower(code)=lower('EN-GB') and name='lblRelationshipNameShouldbeMax60Characters';
update translation.translation set value='Relationship already exists. Please choose a different name.' where lower(code)=lower('EN-GB') and name='lblRelationshipalreadyexistsPleasechooseadifferentname';
update translation.translation set value='Relationship name cannot contain only whitespace' where lower(code)=lower('EN-GB') and name='lblRelationshipnamecannotcontainonlywhitespace';
update translation.translation set value='120 characters max' where lower(code)=lower('EN-GB') and name='lbl120CharMax';
update translation.translation set value='Enter About Relationship' where lower(code)=lower('EN-GB') and name='lblEnterAboutRelationship';
update translation.translation set value='Select Level' where lower(code)=lower('EN-GB') and name='lblSelectLevel';
update translation.translation set value='Select Code' where lower(code)=lower('EN-GB') and name='lblSelectCode';
update translation.translation set value='You can select multiple ''features'' from below list to map with this Relationship' where lower(code)=lower('EN-GB') and name='lblHintMessage';
update translation.translation set value='Reset' where lower(code)=lower('EN-GB') and name='lblReset';
update translation.translation set value='Create' where lower(code)=lower('EN-GB') and name='lblCreate';
update translation.translation set value='Confirm' where lower(code)=lower('EN-GB') and name='lblConfirm';
update translation.translation set value='Select Features' where lower(code)=lower('EN-GB') and name='lblSelectFeatures';
update translation.translation set value='Selected Features' where lower(code)=lower('EN-GB') and name='lblSelectedFeatures';
update translation.translation set value='All' where lower(code)=lower('EN-GB') and name='lblAll';
update translation.translation set value='Feature Name' where lower(code)=lower('EN-GB') and name='lblFeatureName';

INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblRelationshipManagement','Relationship Management',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblRelationshipManagement');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblAddNewRelationship','Add New Relationship',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblAddNewRelationship');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblRelationshipDetails','Relationship Details',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblRelationshipDetails');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblDelete','Delete',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblDelete');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblAreyousureyouwanttodeleterelationship','Are you sure you want to delete ''$'' relationship?',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblAreyousureyouwanttodeleterelationship');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblCancel','Cancel',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblCancel');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblRelationshipwassuccessfullydeleted','Relationship ''$'' was successfully deleted',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblRelationshipwassuccessfullydeleted');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblRelationshipCreatedSuccessfully','Relationship ''$'' Created Successfully',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblRelationshipCreatedSuccessfully');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblRelationshipdetailssuccessfullyupdated','Relationship ''$'' details successfully updated',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblRelationshipdetailssuccessfullyupdated');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblSearch','Search',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblSearch');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblNewRelationship','New Relationship',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblNewRelationship');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblNoRecordFound','No Record Found',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblNoRecordFound');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblName','Name',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblName');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblNew','New',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblNew');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblFeatures','Features',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblFeatures');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblLevel','Level',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblLevel');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblCode','Code',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblCode');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblDescription','Description',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblDescription');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblAction','Action',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblAction');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblHome','Home',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblHome');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblAdmin','Admin',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblAdmin');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblBack','Back',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblBack');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblRelationshipName','Relationship Name',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblRelationshipName');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblRelationshipDescription','Relationship Description',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblRelationshipDescription');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblNewRelationshipName','New Relationship Name',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblNewRelationshipName');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblEnterRelationshipName','Enter Relationship Name',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblEnterRelationshipName');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblPleaseentertheRelationshipname','Please enter the relationship name',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblPleaseentertheRelationshipname');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblRelationshipNameShouldbeMax60Characters','Relationshipname should be max. 60 characters',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblRelationshipNameShouldbeMax60Characters');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblRelationshipalreadyexistsPleasechooseadifferentname','Relationship already exists. Please choose a different name.',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblRelationshipalreadyexistsPleasechooseadifferentname');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblRelationshipnamecannotcontainonlywhitespace','Relationship name cannot contain only whitespace',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblRelationshipnamecannotcontainonlywhitespace');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lbl120CharMax','120 characters max',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lbl120CharMax');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblEnterAboutRelationship','Enter About Relationship',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblEnterAboutRelationship');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblSelectLevel','Select Level',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblSelectLevel');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblSelectCode','Select Code',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblSelectCode');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblHintMessage','You can select multiple ''features'' from below list to map with this Relationship',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblHintMessage');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblReset','Reset',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblReset');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblCreate','Create',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblCreate');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblConfirm','Confirm',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblConfirm');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblSelectFeatures','Select Features',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblSelectFeatures');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblSelectedFeatures','Selected Features',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblSelectedFeatures');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblAll','All',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblAll');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblFeatureName','Feature Name',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblFeatureName');

INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblRelationshipManagement',(select id from master.menu where name = 'Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblRelationshipManagement' and ref_id=(select id from master.menu where name = 'Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblAddNewRelationship',(select id from master.menu where name = 'Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblAddNewRelationship' and ref_id=(select id from master.menu where name = 'Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblRelationshipDetails',(select id from master.menu where name = 'Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblRelationshipDetails' and ref_id=(select id from master.menu where name = 'Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblDelete',(select id from master.menu where name = 'Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblDelete' and ref_id=(select id from master.menu where name = 'Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblAreyousureyouwanttodeleterelationship',(select id from master.menu where name = 'Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblAreyousureyouwanttodeleterelationship' and ref_id=(select id from master.menu where name = 'Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblCancel',(select id from master.menu where name = 'Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblCancel' and ref_id=(select id from master.menu where name = 'Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblRelationshipwassuccessfullydeleted',(select id from master.menu where name = 'Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblRelationshipwassuccessfullydeleted' and ref_id=(select id from master.menu where name = 'Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblRelationshipCreatedSuccessfully',(select id from master.menu where name = 'Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblRelationshipCreatedSuccessfully' and ref_id=(select id from master.menu where name = 'Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblRelationshipdetailssuccessfullyupdated',(select id from master.menu where name = 'Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblRelationshipdetailssuccessfullyupdated' and ref_id=(select id from master.menu where name = 'Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblSearch',(select id from master.menu where name = 'Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblSearch' and ref_id=(select id from master.menu where name = 'Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblNewRelationship',(select id from master.menu where name = 'Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblNewRelationship' and ref_id=(select id from master.menu where name = 'Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblNoRecordFound',(select id from master.menu where name = 'Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblNoRecordFound' and ref_id=(select id from master.menu where name = 'Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblName',(select id from master.menu where name = 'Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblName' and ref_id=(select id from master.menu where name = 'Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblNew',(select id from master.menu where name = 'Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblNew' and ref_id=(select id from master.menu where name = 'Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblFeatures',(select id from master.menu where name = 'Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblFeatures' and ref_id=(select id from master.menu where name = 'Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblLevel',(select id from master.menu where name = 'Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblLevel' and ref_id=(select id from master.menu where name = 'Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblCode',(select id from master.menu where name = 'Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblCode' and ref_id=(select id from master.menu where name = 'Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblDescription',(select id from master.menu where name = 'Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblDescription' and ref_id=(select id from master.menu where name = 'Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblAction',(select id from master.menu where name = 'Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblAction' and ref_id=(select id from master.menu where name = 'Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblHome',(select id from master.menu where name = 'Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblHome' and ref_id=(select id from master.menu where name = 'Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblAdmin',(select id from master.menu where name = 'Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblAdmin' and ref_id=(select id from master.menu where name = 'Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblBack',(select id from master.menu where name = 'Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblBack' and ref_id=(select id from master.menu where name = 'Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblRelationshipName',(select id from master.menu where name = 'Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblRelationshipName' and ref_id=(select id from master.menu where name = 'Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblRelationshipDescription',(select id from master.menu where name = 'Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblRelationshipDescription' and ref_id=(select id from master.menu where name = 'Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblNewRelationshipName',(select id from master.menu where name = 'Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblNewRelationshipName' and ref_id=(select id from master.menu where name = 'Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblEnterRelationshipName',(select id from master.menu where name = 'Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblEnterRelationshipName' and ref_id=(select id from master.menu where name = 'Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblPleaseentertheRelationshipname',(select id from master.menu where name = 'Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblPleaseentertheRelationshipname' and ref_id=(select id from master.menu where name = 'Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblRelationshipNameShouldbeMax60Characters',(select id from master.menu where name = 'Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblRelationshipNameShouldbeMax60Characters' and ref_id=(select id from master.menu where name = 'Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblRelationshipalreadyexistsPleasechooseadifferentname',(select id from master.menu where name = 'Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblRelationshipalreadyexistsPleasechooseadifferentname' and ref_id=(select id from master.menu where name = 'Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblRelationshipnamecannotcontainonlywhitespace',(select id from master.menu where name = 'Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblRelationshipnamecannotcontainonlywhitespace' and ref_id=(select id from master.menu where name = 'Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lbl120CharMax',(select id from master.menu where name = 'Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lbl120CharMax' and ref_id=(select id from master.menu where name = 'Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblEnterAboutRelationship',(select id from master.menu where name = 'Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblEnterAboutRelationship' and ref_id=(select id from master.menu where name = 'Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblSelectLevel',(select id from master.menu where name = 'Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblSelectLevel' and ref_id=(select id from master.menu where name = 'Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblSelectCode',(select id from master.menu where name = 'Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblSelectCode' and ref_id=(select id from master.menu where name = 'Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblHintMessage',(select id from master.menu where name = 'Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblHintMessage' and ref_id=(select id from master.menu where name = 'Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblReset',(select id from master.menu where name = 'Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblReset' and ref_id=(select id from master.menu where name = 'Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblCreate',(select id from master.menu where name = 'Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblCreate' and ref_id=(select id from master.menu where name = 'Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblConfirm',(select id from master.menu where name = 'Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblConfirm' and ref_id=(select id from master.menu where name = 'Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblSelectFeatures',(select id from master.menu where name = 'Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblSelectFeatures' and ref_id=(select id from master.menu where name = 'Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblSelectedFeatures',(select id from master.menu where name = 'Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblSelectedFeatures' and ref_id=(select id from master.menu where name = 'Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblAll',(select id from master.menu where name = 'Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblAll' and ref_id=(select id from master.menu where name = 'Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblFeatureName',(select id from master.menu where name = 'Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblFeatureName' and ref_id=(select id from master.menu where name = 'Relationship Management'));

update translation.translation set value='Subscription Management' where lower(code)=lower('EN-GB') and name='lblSubscriptionManagement';
update translation.translation set value='Vehicle Name' where lower(code)=lower('EN-GB') and name='lblVehicleName';
update translation.translation set value='VIN' where lower(code)=lower('EN-GB') and name='lblVIN';
update translation.translation set value='Registration Number' where lower(code)=lower('EN-GB') and name='lblRegistrationNumber';
update translation.translation set value='Vehicles' where lower(code)=lower('EN-GB') and name='lblVehicles';
update translation.translation set value='Subscription Details' where lower(code)=lower('EN-GB') and name='lblSubscriptionDetails';
update translation.translation set value='Search' where lower(code)=lower('EN-GB') and name='lblSearch';
update translation.translation set value='Select Organisation' where lower(code)=lower('EN-GB') and name='lblSelectOrganisation';
update translation.translation set value='Select Type' where lower(code)=lower('EN-GB') and name='lblSelectType';
update translation.translation set value='Select Status' where lower(code)=lower('EN-GB') and name='lblSelectStatus';
update translation.translation set value='No Record Found' where lower(code)=lower('EN-GB') and name='lblNoRecordFound';
update translation.translation set value='Order ID' where lower(code)=lower('EN-GB') and name='lblOrderId';
update translation.translation set value='Package Code' where lower(code)=lower('EN-GB') and name='lblPackageCode';
update translation.translation set value='Package Name' where lower(code)=lower('EN-GB') and name='lblPackageName';
update translation.translation set value='Organization' where lower(code)=lower('EN-GB') and name='lblOrganization';
update translation.translation set value='Type' where lower(code)=lower('EN-GB') and name='lblType';
update translation.translation set value='Vehicle' where lower(code)=lower('EN-GB') and name='lblVehicle';
update translation.translation set value='Start Date' where lower(code)=lower('EN-GB') and name='lblStartDate';
update translation.translation set value='Active' where lower(code)=lower('EN-GB') and name='lblActive';
update translation.translation set value='InActive' where lower(code)=lower('EN-GB') and name='lblInActive';
update translation.translation set value='Expired' where lower(code)=lower('EN-GB') and name='lblExpired';
update translation.translation set value='End Date' where lower(code)=lower('EN-GB') and name='lblEndDate';
update translation.translation set value='Status' where lower(code)=lower('EN-GB') and name='lblStatus';
update translation.translation set value='Action' where lower(code)=lower('EN-GB') and name='lblAction';
update translation.translation set value='Shop' where lower(code)=lower('EN-GB') and name='lblShop';

INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblSubscriptionManagement','Subscription Management',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblSubscriptionManagement');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblVehicleName','Vehicle Name',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblVehicleName');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblVIN','VIN',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblVIN');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblRegistrationNumber','Registration Number',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblRegistrationNumber');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblVehicles','Vehicles',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblVehicles');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblSubscriptionDetails','Subscription Details',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblSubscriptionDetails');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblSearch','Search',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblSearch');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblSelectOrganisation','Select Organisation',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblSelectOrganisation');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblSelectType','Select Type',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblSelectType');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblSelectStatus','Select Status',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblSelectStatus');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblNoRecordFound','No Record Found',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblNoRecordFound');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblOrderId','Order ID',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblOrderId');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblPackageCode','Package Code',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblPackageCode');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblPackageName','Package Name',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblPackageName');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblOrganization','Organization',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblOrganization');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblType','Type',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblType');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblVehicle','Vehicle',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblVehicle');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblStartDate','Start Date',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblStartDate');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblActive','Active',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblActive');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblInActive','InActive',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblInActive');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblExpired','Expired',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblExpired');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblEndDate','End Date',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblEndDate');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblStatus','Status',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblStatus');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblAction','Action',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblAction');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblShop','Shop',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblShop');

INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblSubscriptionManagement',(select id from master.menu where name = 'Subscription Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblSubscriptionManagement' and ref_id=(select id from master.menu where name = 'Subscription Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblVehicleName',(select id from master.menu where name = 'Subscription Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblVehicleName' and ref_id=(select id from master.menu where name = 'Subscription Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblVIN',(select id from master.menu where name = 'Subscription Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblVIN' and ref_id=(select id from master.menu where name = 'Subscription Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblRegistrationNumber',(select id from master.menu where name = 'Subscription Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblRegistrationNumber' and ref_id=(select id from master.menu where name = 'Subscription Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblVehicles',(select id from master.menu where name = 'Subscription Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblVehicles' and ref_id=(select id from master.menu where name = 'Subscription Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblSubscriptionDetails',(select id from master.menu where name = 'Subscription Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblSubscriptionDetails' and ref_id=(select id from master.menu where name = 'Subscription Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblSearch',(select id from master.menu where name = 'Subscription Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblSearch' and ref_id=(select id from master.menu where name = 'Subscription Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblSelectOrganisation',(select id from master.menu where name = 'Subscription Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblSelectOrganisation' and ref_id=(select id from master.menu where name = 'Subscription Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblSelectType',(select id from master.menu where name = 'Subscription Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblSelectType' and ref_id=(select id from master.menu where name = 'Subscription Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblSelectStatus',(select id from master.menu where name = 'Subscription Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblSelectStatus' and ref_id=(select id from master.menu where name = 'Subscription Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblNoRecordFound',(select id from master.menu where name = 'Subscription Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblNoRecordFound' and ref_id=(select id from master.menu where name = 'Subscription Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblOrderId',(select id from master.menu where name = 'Subscription Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblOrderId' and ref_id=(select id from master.menu where name = 'Subscription Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblPackageCode',(select id from master.menu where name = 'Subscription Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblPackageCode' and ref_id=(select id from master.menu where name = 'Subscription Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblPackageName',(select id from master.menu where name = 'Subscription Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblPackageName' and ref_id=(select id from master.menu where name = 'Subscription Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblOrganization',(select id from master.menu where name = 'Subscription Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblOrganization' and ref_id=(select id from master.menu where name = 'Subscription Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblType',(select id from master.menu where name = 'Subscription Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblType' and ref_id=(select id from master.menu where name = 'Subscription Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblVehicle',(select id from master.menu where name = 'Subscription Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblVehicle' and ref_id=(select id from master.menu where name = 'Subscription Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblStartDate',(select id from master.menu where name = 'Subscription Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblStartDate' and ref_id=(select id from master.menu where name = 'Subscription Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblActive',(select id from master.menu where name = 'Subscription Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblActive' and ref_id=(select id from master.menu where name = 'Subscription Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblInActive',(select id from master.menu where name = 'Subscription Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblInActive' and ref_id=(select id from master.menu where name = 'Subscription Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblExpired',(select id from master.menu where name = 'Subscription Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblExpired' and ref_id=(select id from master.menu where name = 'Subscription Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblEndDate',(select id from master.menu where name = 'Subscription Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblEndDate' and ref_id=(select id from master.menu where name = 'Subscription Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblStatus',(select id from master.menu where name = 'Subscription Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblStatus' and ref_id=(select id from master.menu where name = 'Subscription Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblAction',(select id from master.menu where name = 'Subscription Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblAction' and ref_id=(select id from master.menu where name = 'Subscription Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblShop',(select id from master.menu where name = 'Subscription Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblShop' and ref_id=(select id from master.menu where name = 'Subscription Management'));

update translation.translation set value='Translation Management' where lower(code)=lower('EN-GB') and name='lblTranslationManagement';
update translation.translation set value='Translation file successfully uploaded' where lower(code)=lower('EN-GB') and name='lblTranslationFileSuccessfullyUploaded';
update translation.translation set value='Download Template' where lower(code)=lower('EN-GB') and name='lblDownloadTemplate';
update translation.translation set value='All' where lower(code)=lower('EN-GB') and name='lblAll';
update translation.translation set value='Language' where lower(code)=lower('EN-GB') and name='lbllanguage';
update translation.translation set value='Upload New Translation Data' where lower(code)=lower('EN-GB') and name='lblUploadNewTranslationData';
update translation.translation set value='Download Translated Data' where lower(code)=lower('EN-GB') and name='lblDownloadTranslatedData';
update translation.translation set value='Download final template from here and upload it here with updated details.' where lower(code)=lower('EN-GB') and name='lblDownloadaTemplateMessage';
update translation.translation set value='Upload Translation Data file' where lower(code)=lower('EN-GB') and name='lblUploadTranslationDataFile';
update translation.translation set value='Upload your updated xlsx File' where lower(code)=lower('EN-GB') and name='lblUploadYourUpdatedXLSXFile';
update translation.translation set value='Browse' where lower(code)=lower('EN-GB') and name='lblBrowse';
update translation.translation set value='Please select a file' where lower(code)=lower('EN-GB') and name='lblPleaseselectafile';
update translation.translation set value='Empty File' where lower(code)=lower('EN-GB') and name='lblEmptyFile';
update translation.translation set value='Upload File' where lower(code)=lower('EN-GB') and name='lblUploadFile';
update translation.translation set value='Description' where lower(code)=lower('EN-GB') and name='lblDescription';
update translation.translation set value='120 characters max' where lower(code)=lower('EN-GB') and name='lbl120CharMax';
update translation.translation set value='Enter File Description' where lower(code)=lower('EN-GB') and name='lblEnterFileDescription';
update translation.translation set value='Uploaded File Details' where lower(code)=lower('EN-GB') and name='lblUploadedFileDetails';
update translation.translation set value='File has been uploaded successfully' where lower(code)=lower('EN-GB') and name='lblFileuploadedSuccessfully';
update translation.translation set value='Uploaded File History' where lower(code)=lower('EN-GB') and name='lbluploadedFileHistory';
update translation.translation set value='Search' where lower(code)=lower('EN-GB') and name='lblSearch';
update translation.translation set value='No Record Found' where lower(code)=lower('EN-GB') and name='lblNoRecordFound';
update translation.translation set value='File Name' where lower(code)=lower('EN-GB') and name='lblFileName';
update translation.translation set value='Uploaded Date' where lower(code)=lower('EN-GB') and name='lblUploadedDate';
update translation.translation set value='File Size' where lower(code)=lower('EN-GB') and name='lblFileSize';
update translation.translation set value='Action' where lower(code)=lower('EN-GB') and name='lblAction';
update translation.translation set value='Download' where lower(code)=lower('EN-GB') and name='lblDownload';

INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblTranslationManagement','Translation Management',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblTranslationManagement');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblTranslationFileSuccessfullyUploaded','Translation file successfully uploaded',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblTranslationFileSuccessfullyUploaded');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblDownloadTemplate','Download Template',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblDownloadTemplate');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblAll','All',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblAll');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lbllanguage','Language',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lbllanguage');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblUploadNewTranslationData','Upload New Translation Data',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblUploadNewTranslationData');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblDownloadTranslatedData','Download Translated Data',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblDownloadTranslatedData');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblDownloadaTemplateMessage','Download final template from here and upload it here with updated details.',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblDownloadaTemplateMessage');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblUploadTranslationDataFile','Upload Translation Data file',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblUploadTranslationDataFile');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblUploadYourUpdatedXLSXFile','Upload your updated xlsx File',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblUploadYourUpdatedXLSXFile');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblBrowse','Browse',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblBrowse');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblPleaseselectafile','Please select a file',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblPleaseselectafile');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblEmptyFile','Empty File',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblEmptyFile');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblUploadFile','Upload File',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblUploadFile');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblDescription','Description',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblDescription');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lbl120CharMax','120 characters max',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lbl120CharMax');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblEnterFileDescription','Enter File Description',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblEnterFileDescription');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblUploadedFileDetails','Uploaded File Details',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblUploadedFileDetails');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblFileuploadedSuccessfully','File has been uploaded successfully',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblFileuploadedSuccessfully');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lbluploadedFileHistory','Uploaded File History',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lbluploadedFileHistory');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblSearch','Search',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblSearch');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblNoRecordFound','No Record Found',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblNoRecordFound');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblFileName','File Name',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblFileName');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblUploadedDate','Uploaded Date',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblUploadedDate');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblFileSize','File Size',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblFileSize');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblAction','Action',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblAction');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblDownload','Download',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblDownload');

INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblTranslationManagement',(select id from master.menu where name = 'Translation Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblTranslationManagement' and ref_id=(select id from master.menu where name = 'Translation Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblTranslationFileSuccessfullyUploaded',(select id from master.menu where name = 'Translation Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblTranslationFileSuccessfullyUploaded' and ref_id=(select id from master.menu where name = 'Translation Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblDownloadTemplate',(select id from master.menu where name = 'Translation Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblDownloadTemplate' and ref_id=(select id from master.menu where name = 'Translation Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblAll',(select id from master.menu where name = 'Translation Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblAll' and ref_id=(select id from master.menu where name = 'Translation Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lbllanguage',(select id from master.menu where name = 'Translation Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lbllanguage' and ref_id=(select id from master.menu where name = 'Translation Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblUploadNewTranslationData',(select id from master.menu where name = 'Translation Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblUploadNewTranslationData' and ref_id=(select id from master.menu where name = 'Translation Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblDownloadTranslatedData',(select id from master.menu where name = 'Translation Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblDownloadTranslatedData' and ref_id=(select id from master.menu where name = 'Translation Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblDownloadaTemplateMessage',(select id from master.menu where name = 'Translation Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblDownloadaTemplateMessage' and ref_id=(select id from master.menu where name = 'Translation Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblUploadTranslationDataFile',(select id from master.menu where name = 'Translation Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblUploadTranslationDataFile' and ref_id=(select id from master.menu where name = 'Translation Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblUploadYourUpdatedXLSXFile',(select id from master.menu where name = 'Translation Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblUploadYourUpdatedXLSXFile' and ref_id=(select id from master.menu where name = 'Translation Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblBrowse',(select id from master.menu where name = 'Translation Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblBrowse' and ref_id=(select id from master.menu where name = 'Translation Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblPleaseselectafile',(select id from master.menu where name = 'Translation Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblPleaseselectafile' and ref_id=(select id from master.menu where name = 'Translation Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblEmptyFile',(select id from master.menu where name = 'Translation Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblEmptyFile' and ref_id=(select id from master.menu where name = 'Translation Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblUploadFile',(select id from master.menu where name = 'Translation Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblUploadFile' and ref_id=(select id from master.menu where name = 'Translation Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblDescription',(select id from master.menu where name = 'Translation Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblDescription' and ref_id=(select id from master.menu where name = 'Translation Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lbl120CharMax',(select id from master.menu where name = 'Translation Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lbl120CharMax' and ref_id=(select id from master.menu where name = 'Translation Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblEnterFileDescription',(select id from master.menu where name = 'Translation Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblEnterFileDescription' and ref_id=(select id from master.menu where name = 'Translation Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblUploadedFileDetails',(select id from master.menu where name = 'Translation Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblUploadedFileDetails' and ref_id=(select id from master.menu where name = 'Translation Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblFileuploadedSuccessfully',(select id from master.menu where name = 'Translation Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblFileuploadedSuccessfully' and ref_id=(select id from master.menu where name = 'Translation Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lbluploadedFileHistory',(select id from master.menu where name = 'Translation Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lbluploadedFileHistory' and ref_id=(select id from master.menu where name = 'Translation Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblSearch',(select id from master.menu where name = 'Translation Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblSearch' and ref_id=(select id from master.menu where name = 'Translation Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblNoRecordFound',(select id from master.menu where name = 'Translation Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblNoRecordFound' and ref_id=(select id from master.menu where name = 'Translation Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblFileName',(select id from master.menu where name = 'Translation Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblFileName' and ref_id=(select id from master.menu where name = 'Translation Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblUploadedDate',(select id from master.menu where name = 'Translation Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblUploadedDate' and ref_id=(select id from master.menu where name = 'Translation Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblFileSize',(select id from master.menu where name = 'Translation Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblFileSize' and ref_id=(select id from master.menu where name = 'Translation Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblAction',(select id from master.menu where name = 'Translation Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblAction' and ref_id=(select id from master.menu where name = 'Translation Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblDownload',(select id from master.menu where name = 'Translation Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblDownload' and ref_id=(select id from master.menu where name = 'Translation Management'));

update translation.translation set value='Vehicle Group Management' where lower(code)=lower('EN-GB') and name='lblVehicleGroupManagement';
update translation.translation set value='Search' where lower(code)=lower('EN-GB') and name='lblSearch';
update translation.translation set value='New Vehicle Group' where lower(code)=lower('EN-GB') and name='lblNewVehicleGroup';
update translation.translation set value='No Record Found' where lower(code)=lower('EN-GB') and name='lblNoRecordFound';
update translation.translation set value='(Optional)' where lower(code)=lower('EN-GB') and name='lblOptional';
update translation.translation set value='Vehicle Name' where lower(code)=lower('EN-GB') and name='lblVehicleName';
update translation.translation set value='VIN' where lower(code)=lower('EN-GB') and name='lblVIN';
update translation.translation set value='Registration Number' where lower(code)=lower('EN-GB') and name='lblRegistrationNumber';
update translation.translation set value='Vehicles' where lower(code)=lower('EN-GB') and name='lblVehicles';
update translation.translation set value='Delete' where lower(code)=lower('EN-GB') and name='lblDelete';
update translation.translation set value='Are you sure you want to delete ''$'' Vehicle Group?' where lower(code)=lower('EN-GB') and name='lblAreyousureyouwanttodeleteVehicleGroup';
update translation.translation set value='Cancel' where lower(code)=lower('EN-GB') and name='lblCancel';
update translation.translation set value='Vehicle Group ''$'' was successfully deleted' where lower(code)=lower('EN-GB') and name='lblVehicleGroupDelete';
update translation.translation set value='All Vehicle Group Details' where lower(code)=lower('EN-GB') and name='lblAllVehicleGroupDetails';
update translation.translation set value='Vehicle Group' where lower(code)=lower('EN-GB') and name='lblVehicleGroup';
update translation.translation set value='New' where lower(code)=lower('EN-GB') and name='lblNew';
update translation.translation set value='Vehicle' where lower(code)=lower('EN-GB') and name='lblVehicle';
update translation.translation set value='Action' where lower(code)=lower('EN-GB') and name='lblAction';
update translation.translation set value='Group' where lower(code)=lower('EN-GB') and name='lblGroup';
update translation.translation set value='Dynamic' where lower(code)=lower('EN-GB') and name='lblDynamic';
update translation.translation set value='All' where lower(code)=lower('EN-GB') and name='lblAll';
update translation.translation set value='Owned Vehicles' where lower(code)=lower('EN-GB') and name='lblOwnedVehicles';
update translation.translation set value='Visible Vehicles' where lower(code)=lower('EN-GB') and name='lblVisibleVehicles';
update translation.translation set value='Home' where lower(code)=lower('EN-GB') and name='lblHome';
update translation.translation set value='Admin' where lower(code)=lower('EN-GB') and name='lblAdmin';
update translation.translation set value='Edit Vehicle Group Details' where lower(code)=lower('EN-GB') and name='lblEditVehicleGroupDetails';
update translation.translation set value='View Vehicle Group Details' where lower(code)=lower('EN-GB') and name='lblViewVehicleGroupDetails';
update translation.translation set value='New Vehicle Group ''$'' Created Successfully' where lower(code)=lower('EN-GB') and name='lblNewVehicleGroupCreatedSuccessfully';
update translation.translation set value='Vehicle Group ''$'' Updated Successfully' where lower(code)=lower('EN-GB') and name='lblVehicleGroupUpdatedSuccessfully';
update translation.translation set value='Back' where lower(code)=lower('EN-GB') and name='lblBack';
update translation.translation set value='Group Name' where lower(code)=lower('EN-GB') and name='lblGroupName';
update translation.translation set value='Enter Vehicle Group Name' where lower(code)=lower('EN-GB') and name='lblEnterVehicleGroupName';
update translation.translation set value='Please Enter Vehicle Group Name' where lower(code)=lower('EN-GB') and name='lblPleaseEnterVehicleGroupName';
update translation.translation set value='Vehicle Group Name cannot contain only whitespace' where lower(code)=lower('EN-GB') and name='lblVehicleGroupNamecannotcontainonlywhitespace';
update translation.translation set value='Duplicate Vehicle Group Name' where lower(code)=lower('EN-GB') and name='lblDuplicateVehicleGroupName';
update translation.translation set value='Group Type' where lower(code)=lower('EN-GB') and name='lblGroupType';
update translation.translation set value='Please choose group type' where lower(code)=lower('EN-GB') and name='lblPleasechoosegrouptype';
update translation.translation set value='Method' where lower(code)=lower('EN-GB') and name='lblMethod';
update translation.translation set value='Please choose method' where lower(code)=lower('EN-GB') and name='lblPleasechoosemethod';
update translation.translation set value='Group Description' where lower(code)=lower('EN-GB') and name='lblGroupDescription';
update translation.translation set value='100 characters max' where lower(code)=lower('EN-GB') and name='lbl100CharMax';
update translation.translation set value='Enter about group details' where lower(code)=lower('EN-GB') and name='lblEnteraboutgroupdetails';
update translation.translation set value='Vehicle Group Description cannot contain only whitespace' where lower(code)=lower('EN-GB') and name='lblVehicleGroupDescriptioncannotcontainonlywhitespace';
update translation.translation set value='You can view vehicle associations from the list below' where lower(code)=lower('EN-GB') and name='lblVehicleGroupManagementViewInfo';
update translation.translation set value='You can select vehicles from below list to add in this group' where lower(code)=lower('EN-GB') and name='lblVehicleGroupManagementInfo';
update translation.translation set value='Reset' where lower(code)=lower('EN-GB') and name='lblReset';
update translation.translation set value='Create' where lower(code)=lower('EN-GB') and name='lblCreate';
update translation.translation set value='Confirm' where lower(code)=lower('EN-GB') and name='lblConfirm';
update translation.translation set value='Selected Vehicle List' where lower(code)=lower('EN-GB') and name='lblSelectedVehicleList';
update translation.translation set value='Model' where lower(code)=lower('EN-GB') and name='lblModel';

INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblVehicleGroupManagement','Vehicle Group Management',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblVehicleGroupManagement');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblSearch','Search',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblSearch');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblNewVehicleGroup','New Vehicle Group',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblNewVehicleGroup');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblNoRecordFound','No Record Found',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblNoRecordFound');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblOptional','(Optional)',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblOptional');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblVehicleName','Vehicle Name',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblVehicleName');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblVIN','VIN',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblVIN');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblRegistrationNumber','Registration Number',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblRegistrationNumber');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblVehicles','Vehicles',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblVehicles');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblDelete','Delete',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblDelete');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblAreyousureyouwanttodeleteVehicleGroup','Are you sure you want to delete ''$'' Vehicle Group?',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblAreyousureyouwanttodeleteVehicleGroup');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblCancel','Cancel',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblCancel');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblVehicleGroupDelete','Vehicle Group ''$'' was successfully deleted',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblVehicleGroupDelete');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblAllVehicleGroupDetails','All Vehicle Group Details',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblAllVehicleGroupDetails');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblVehicleGroup','Vehicle Group',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblVehicleGroup');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblNew','New',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblNew');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblVehicle','Vehicle',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblVehicle');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblAction','Action',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblAction');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblGroup','Group',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblGroup');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblDynamic','Dynamic',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblDynamic');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblAll','All',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblAll');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblOwnedVehicles','Owned Vehicles',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblOwnedVehicles');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblVisibleVehicles','Visible Vehicles',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblVisibleVehicles');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblHome','Home',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblHome');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblAdmin','Admin',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblAdmin');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblEditVehicleGroupDetails','Edit Vehicle Group Details',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblEditVehicleGroupDetails');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblViewVehicleGroupDetails','View Vehicle Group Details',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblViewVehicleGroupDetails');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblNewVehicleGroupCreatedSuccessfully','New Vehicle Group ''$'' Created Successfully',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblNewVehicleGroupCreatedSuccessfully');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblVehicleGroupUpdatedSuccessfully','Vehicle Group ''$'' Updated Successfully',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblVehicleGroupUpdatedSuccessfully');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblBack','Back',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblBack');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblGroupName','Group Name',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblGroupName');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblEnterVehicleGroupName','Enter Vehicle Group Name',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblEnterVehicleGroupName');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblPleaseEnterVehicleGroupName','Please Enter Vehicle Group Name',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblPleaseEnterVehicleGroupName');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblVehicleGroupNamecannotcontainonlywhitespace','Vehicle Group Name cannot contain only whitespace',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblVehicleGroupNamecannotcontainonlywhitespace');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblDuplicateVehicleGroupName','Duplicate Vehicle Group Name',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblDuplicateVehicleGroupName');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblGroupType','Group Type',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblGroupType');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblPleasechoosegrouptype','Please choose group type',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblPleasechoosegrouptype');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblMethod','Method',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblMethod');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblPleasechoosemethod','Please choose method',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblPleasechoosemethod');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblGroupDescription','Group Description',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblGroupDescription');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lbl100CharMax','100 characters max',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lbl100CharMax');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblEnteraboutgroupdetails','Enter about group details',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblEnteraboutgroupdetails');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblVehicleGroupDescriptioncannotcontainonlywhitespace','Vehicle Group Description cannot contain only whitespace',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblVehicleGroupDescriptioncannotcontainonlywhitespace');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblVehicleGroupManagementViewInfo','You can view vehicle associations from the list below',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblVehicleGroupManagementViewInfo');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblVehicleGroupManagementInfo','You can select vehicles from below list to add in this group',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblVehicleGroupManagementInfo');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblReset','Reset',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblReset');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblCreate','Create',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblCreate');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblConfirm','Confirm',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblConfirm');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblSelectedVehicleList','Selected Vehicle List',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblSelectedVehicleList');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblModel','Model',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblModel');

INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblVehicleGroupManagement',(select id from master.menu where name = 'Vehicle Group Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblVehicleGroupManagement' and ref_id=(select id from master.menu where name = 'Vehicle Group Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblSearch',(select id from master.menu where name = 'Vehicle Group Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblSearch' and ref_id=(select id from master.menu where name = 'Vehicle Group Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblNewVehicleGroup',(select id from master.menu where name = 'Vehicle Group Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblNewVehicleGroup' and ref_id=(select id from master.menu where name = 'Vehicle Group Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblNoRecordFound',(select id from master.menu where name = 'Vehicle Group Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblNoRecordFound' and ref_id=(select id from master.menu where name = 'Vehicle Group Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblOptional',(select id from master.menu where name = 'Vehicle Group Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblOptional' and ref_id=(select id from master.menu where name = 'Vehicle Group Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblVehicleName',(select id from master.menu where name = 'Vehicle Group Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblVehicleName' and ref_id=(select id from master.menu where name = 'Vehicle Group Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblVIN',(select id from master.menu where name = 'Vehicle Group Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblVIN' and ref_id=(select id from master.menu where name = 'Vehicle Group Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblRegistrationNumber',(select id from master.menu where name = 'Vehicle Group Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblRegistrationNumber' and ref_id=(select id from master.menu where name = 'Vehicle Group Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblVehicles',(select id from master.menu where name = 'Vehicle Group Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblVehicles' and ref_id=(select id from master.menu where name = 'Vehicle Group Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblDelete',(select id from master.menu where name = 'Vehicle Group Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblDelete' and ref_id=(select id from master.menu where name = 'Vehicle Group Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblAreyousureyouwanttodeleteVehicleGroup',(select id from master.menu where name = 'Vehicle Group Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblAreyousureyouwanttodeleteVehicleGroup' and ref_id=(select id from master.menu where name = 'Vehicle Group Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblCancel',(select id from master.menu where name = 'Vehicle Group Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblCancel' and ref_id=(select id from master.menu where name = 'Vehicle Group Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblVehicleGroupDelete',(select id from master.menu where name = 'Vehicle Group Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblVehicleGroupDelete' and ref_id=(select id from master.menu where name = 'Vehicle Group Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblAllVehicleGroupDetails',(select id from master.menu where name = 'Vehicle Group Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblAllVehicleGroupDetails' and ref_id=(select id from master.menu where name = 'Vehicle Group Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblVehicleGroup',(select id from master.menu where name = 'Vehicle Group Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblVehicleGroup' and ref_id=(select id from master.menu where name = 'Vehicle Group Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblNew',(select id from master.menu where name = 'Vehicle Group Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblNew' and ref_id=(select id from master.menu where name = 'Vehicle Group Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblVehicle',(select id from master.menu where name = 'Vehicle Group Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblVehicle' and ref_id=(select id from master.menu where name = 'Vehicle Group Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblAction',(select id from master.menu where name = 'Vehicle Group Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblAction' and ref_id=(select id from master.menu where name = 'Vehicle Group Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblGroup',(select id from master.menu where name = 'Vehicle Group Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblGroup' and ref_id=(select id from master.menu where name = 'Vehicle Group Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblDynamic',(select id from master.menu where name = 'Vehicle Group Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblDynamic' and ref_id=(select id from master.menu where name = 'Vehicle Group Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblAll',(select id from master.menu where name = 'Vehicle Group Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblAll' and ref_id=(select id from master.menu where name = 'Vehicle Group Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblOwnedVehicles',(select id from master.menu where name = 'Vehicle Group Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblOwnedVehicles' and ref_id=(select id from master.menu where name = 'Vehicle Group Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblVisibleVehicles',(select id from master.menu where name = 'Vehicle Group Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblVisibleVehicles' and ref_id=(select id from master.menu where name = 'Vehicle Group Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblHome',(select id from master.menu where name = 'Vehicle Group Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblHome' and ref_id=(select id from master.menu where name = 'Vehicle Group Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblAdmin',(select id from master.menu where name = 'Vehicle Group Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblAdmin' and ref_id=(select id from master.menu where name = 'Vehicle Group Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblEditVehicleGroupDetails',(select id from master.menu where name = 'Vehicle Group Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblEditVehicleGroupDetails' and ref_id=(select id from master.menu where name = 'Vehicle Group Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblViewVehicleGroupDetails',(select id from master.menu where name = 'Vehicle Group Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblViewVehicleGroupDetails' and ref_id=(select id from master.menu where name = 'Vehicle Group Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblNewVehicleGroupCreatedSuccessfully',(select id from master.menu where name = 'Vehicle Group Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblNewVehicleGroupCreatedSuccessfully' and ref_id=(select id from master.menu where name = 'Vehicle Group Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblVehicleGroupUpdatedSuccessfully',(select id from master.menu where name = 'Vehicle Group Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblVehicleGroupUpdatedSuccessfully' and ref_id=(select id from master.menu where name = 'Vehicle Group Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblBack',(select id from master.menu where name = 'Vehicle Group Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblBack' and ref_id=(select id from master.menu where name = 'Vehicle Group Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblGroupName',(select id from master.menu where name = 'Vehicle Group Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblGroupName' and ref_id=(select id from master.menu where name = 'Vehicle Group Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblEnterVehicleGroupName',(select id from master.menu where name = 'Vehicle Group Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblEnterVehicleGroupName' and ref_id=(select id from master.menu where name = 'Vehicle Group Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblPleaseEnterVehicleGroupName',(select id from master.menu where name = 'Vehicle Group Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblPleaseEnterVehicleGroupName' and ref_id=(select id from master.menu where name = 'Vehicle Group Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblVehicleGroupNamecannotcontainonlywhitespace',(select id from master.menu where name = 'Vehicle Group Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblVehicleGroupNamecannotcontainonlywhitespace' and ref_id=(select id from master.menu where name = 'Vehicle Group Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblDuplicateVehicleGroupName',(select id from master.menu where name = 'Vehicle Group Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblDuplicateVehicleGroupName' and ref_id=(select id from master.menu where name = 'Vehicle Group Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblGroupType',(select id from master.menu where name = 'Vehicle Group Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblGroupType' and ref_id=(select id from master.menu where name = 'Vehicle Group Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblPleasechoosegrouptype',(select id from master.menu where name = 'Vehicle Group Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblPleasechoosegrouptype' and ref_id=(select id from master.menu where name = 'Vehicle Group Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblMethod',(select id from master.menu where name = 'Vehicle Group Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblMethod' and ref_id=(select id from master.menu where name = 'Vehicle Group Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblPleasechoosemethod',(select id from master.menu where name = 'Vehicle Group Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblPleasechoosemethod' and ref_id=(select id from master.menu where name = 'Vehicle Group Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblGroupDescription',(select id from master.menu where name = 'Vehicle Group Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblGroupDescription' and ref_id=(select id from master.menu where name = 'Vehicle Group Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lbl100CharMax',(select id from master.menu where name = 'Vehicle Group Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lbl100CharMax' and ref_id=(select id from master.menu where name = 'Vehicle Group Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblEnteraboutgroupdetails',(select id from master.menu where name = 'Vehicle Group Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblEnteraboutgroupdetails' and ref_id=(select id from master.menu where name = 'Vehicle Group Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblVehicleGroupDescriptioncannotcontainonlywhitespace',(select id from master.menu where name = 'Vehicle Group Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblVehicleGroupDescriptioncannotcontainonlywhitespace' and ref_id=(select id from master.menu where name = 'Vehicle Group Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblVehicleGroupManagementViewInfo',(select id from master.menu where name = 'Vehicle Group Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblVehicleGroupManagementViewInfo' and ref_id=(select id from master.menu where name = 'Vehicle Group Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblVehicleGroupManagementInfo',(select id from master.menu where name = 'Vehicle Group Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblVehicleGroupManagementInfo' and ref_id=(select id from master.menu where name = 'Vehicle Group Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblReset',(select id from master.menu where name = 'Vehicle Group Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblReset' and ref_id=(select id from master.menu where name = 'Vehicle Group Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblCreate',(select id from master.menu where name = 'Vehicle Group Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblCreate' and ref_id=(select id from master.menu where name = 'Vehicle Group Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblConfirm',(select id from master.menu where name = 'Vehicle Group Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblConfirm' and ref_id=(select id from master.menu where name = 'Vehicle Group Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblSelectedVehicleList',(select id from master.menu where name = 'Vehicle Group Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblSelectedVehicleList' and ref_id=(select id from master.menu where name = 'Vehicle Group Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblModel',(select id from master.menu where name = 'Vehicle Group Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblModel' and ref_id=(select id from master.menu where name = 'Vehicle Group Management'));

update translation.translation set value='Vehicle Management' where lower(code)=lower('EN-GB') and name='lblVehicleManagement';
update translation.translation set value='All Vehicle Details' where lower(code)=lower('EN-GB') and name='lblAllVehicleDetails';
update translation.translation set value='Search' where lower(code)=lower('EN-GB') and name='lblSearch';
update translation.translation set value='No Record Found' where lower(code)=lower('EN-GB') and name='lblNoRecordFound';
update translation.translation set value='Vehicle' where lower(code)=lower('EN-GB') and name='lblVehicle';
update translation.translation set value='VIN' where lower(code)=lower('EN-GB') and name='lblVIN';
update translation.translation set value='Registration Number' where lower(code)=lower('EN-GB') and name='lblRegistrationNumber';
update translation.translation set value='Model' where lower(code)=lower('EN-GB') and name='lblModel';
update translation.translation set value='Relationship' where lower(code)=lower('EN-GB') and name='lblRelationship';
update translation.translation set value='Status' where lower(code)=lower('EN-GB') and name='lblStatus';
update translation.translation set value='Opt-Out' where lower(code)=lower('EN-GB') and name='lblOptOut';
update translation.translation set value='Opt-In' where lower(code)=lower('EN-GB') and name='lblOptIn';
update translation.translation set value='Opt-In + OTA' where lower(code)=lower('EN-GB') and name='lblOptInOTA';
update translation.translation set value='OTA' where lower(code)=lower('EN-GB') and name='lblOTA';
update translation.translation set value='Terminate' where lower(code)=lower('EN-GB') and name='lblTerminate';
update translation.translation set value='Action' where lower(code)=lower('EN-GB') and name='lblAction';
update translation.translation set value='Home' where lower(code)=lower('EN-GB') and name='lblHome';
update translation.translation set value='Configuration' where lower(code)=lower('EN-GB') and name='lblConfiguration';
update translation.translation set value='Edit Vehicle Details' where lower(code)=lower('EN-GB') and name='lblEditVehicleDetails';
update translation.translation set value='View Vehicle Details' where lower(code)=lower('EN-GB') and name='lblViewVehicleDetails';
update translation.translation set value='Vehicle $ Updated Successfully' where lower(code)=lower('EN-GB') and name='lblVehicleUpdatedSuccessfully';
update translation.translation set value='Back' where lower(code)=lower('EN-GB') and name='lblBack';
update translation.translation set value='Vehicle Name' where lower(code)=lower('EN-GB') and name='lblVehicleName';
update translation.translation set value='Enter Vehicle Name' where lower(code)=lower('EN-GB') and name='lblEnterVehicleName';
update translation.translation set value='Vehicle Name cannot contain only whitespace' where lower(code)=lower('EN-GB') and name='lblVehicleNamecannotcontainonlywhitespace';
update translation.translation set value='Duplicate Vehicle Name' where lower(code)=lower('EN-GB') and name='lblDuplicateVehicleName';
update translation.translation set value='Enter Registration Number' where lower(code)=lower('EN-GB') and name='lblEnterRegistrationNumber';
update translation.translation set value='Registration Number cannot contain only whitespace' where lower(code)=lower('EN-GB') and name='lblRegistrationNumbercannotcontainonlywhitespace';
update translation.translation set value='Vehicle Identification Number (VIN)' where lower(code)=lower('EN-GB') and name='lblVehicleIdentificationNumberVIN';
update translation.translation set value='Enter Vehicle Identification Number (VIN)' where lower(code)=lower('EN-GB') and name='lblEnterVehicleIdentificationNumberVIN';
update translation.translation set value='Vehicle Model' where lower(code)=lower('EN-GB') and name='lblVehicleModel';
update translation.translation set value='Enter Vehicle Model' where lower(code)=lower('EN-GB') and name='lblEnterVehicleModel';
update translation.translation set value='Associated Groups' where lower(code)=lower('EN-GB') and name='lblAssociatedGroups';
update translation.translation set value='Enter Associated Groups' where lower(code)=lower('EN-GB') and name='lblEnterAssociatedGroups';
update translation.translation set value='Enter Relationship' where lower(code)=lower('EN-GB') and name='lblEnterRelationship';
update translation.translation set value='Cancel' where lower(code)=lower('EN-GB') and name='lblCancel';
update translation.translation set value='Reset' where lower(code)=lower('EN-GB') and name='lblReset';
update translation.translation set value='Confirm' where lower(code)=lower('EN-GB') and name='lblConfirm';

INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblVehicleManagement','Vehicle Management',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblVehicleManagement');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblAllVehicleDetails','All Vehicle Details',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblAllVehicleDetails');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblSearch','Search',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblSearch');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblNoRecordFound','No Record Found',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblNoRecordFound');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblVehicle','Vehicle',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblVehicle');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblVIN','VIN',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblVIN');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblRegistrationNumber','Registration Number',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblRegistrationNumber');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblModel','Model',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblModel');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblRelationship','Relationship',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblRelationship');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblStatus','Status',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblStatus');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblOptOut','Opt-Out',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblOptOut');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblOptIn','Opt-In',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblOptIn');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblOptInOTA','Opt-In + OTA',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblOptInOTA');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblOTA','OTA',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblOTA');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblTerminate','Terminate',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblTerminate');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblAction','Action',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblAction');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblHome','Home',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblHome');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblConfiguration','Configuration',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblConfiguration');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblEditVehicleDetails','Edit Vehicle Details',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblEditVehicleDetails');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblViewVehicleDetails','View Vehicle Details',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblViewVehicleDetails');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblVehicleUpdatedSuccessfully','Vehicle $ Updated Successfully',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblVehicleUpdatedSuccessfully');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblBack','Back',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblBack');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblVehicleName','Vehicle Name',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblVehicleName');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblEnterVehicleName','Enter Vehicle Name',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblEnterVehicleName');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblVehicleNamecannotcontainonlywhitespace','Vehicle Name cannot contain only whitespace',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblVehicleNamecannotcontainonlywhitespace');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblDuplicateVehicleName','Duplicate Vehicle Name',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblDuplicateVehicleName');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblEnterRegistrationNumber','Enter Registration Number',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblEnterRegistrationNumber');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblRegistrationNumbercannotcontainonlywhitespace','Registration Number cannot contain only whitespace',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblRegistrationNumbercannotcontainonlywhitespace');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblVehicleIdentificationNumberVIN','Vehicle Identification Number (VIN)',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblVehicleIdentificationNumberVIN');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblEnterVehicleIdentificationNumberVIN','Enter Vehicle Identification Number (VIN)',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblEnterVehicleIdentificationNumberVIN');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblVehicleModel','Vehicle Model',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblVehicleModel');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblEnterVehicleModel','Enter Vehicle Model',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblEnterVehicleModel');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblAssociatedGroups','Associated Groups',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblAssociatedGroups');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblEnterAssociatedGroups','Enter Associated Groups',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblEnterAssociatedGroups');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblEnterRelationship','Enter Relationship',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblEnterRelationship');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblCancel','Cancel',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblCancel');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblReset','Reset',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblReset');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblConfirm','Confirm',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblConfirm');

INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblVehicleManagement',(select id from master.menu where name = 'Vehicle Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblVehicleManagement' and ref_id=(select id from master.menu where name = 'Vehicle Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblAllVehicleDetails',(select id from master.menu where name = 'Vehicle Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblAllVehicleDetails' and ref_id=(select id from master.menu where name = 'Vehicle Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblSearch',(select id from master.menu where name = 'Vehicle Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblSearch' and ref_id=(select id from master.menu where name = 'Vehicle Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblNoRecordFound',(select id from master.menu where name = 'Vehicle Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblNoRecordFound' and ref_id=(select id from master.menu where name = 'Vehicle Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblVehicle',(select id from master.menu where name = 'Vehicle Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblVehicle' and ref_id=(select id from master.menu where name = 'Vehicle Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblVIN',(select id from master.menu where name = 'Vehicle Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblVIN' and ref_id=(select id from master.menu where name = 'Vehicle Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblRegistrationNumber',(select id from master.menu where name = 'Vehicle Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblRegistrationNumber' and ref_id=(select id from master.menu where name = 'Vehicle Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblModel',(select id from master.menu where name = 'Vehicle Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblModel' and ref_id=(select id from master.menu where name = 'Vehicle Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblRelationship',(select id from master.menu where name = 'Vehicle Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblRelationship' and ref_id=(select id from master.menu where name = 'Vehicle Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblStatus',(select id from master.menu where name = 'Vehicle Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblStatus' and ref_id=(select id from master.menu where name = 'Vehicle Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblOptOut',(select id from master.menu where name = 'Vehicle Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblOptOut' and ref_id=(select id from master.menu where name = 'Vehicle Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblOptIn',(select id from master.menu where name = 'Vehicle Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblOptIn' and ref_id=(select id from master.menu where name = 'Vehicle Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblOptInOTA',(select id from master.menu where name = 'Vehicle Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblOptInOTA' and ref_id=(select id from master.menu where name = 'Vehicle Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblOTA',(select id from master.menu where name = 'Vehicle Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblOTA' and ref_id=(select id from master.menu where name = 'Vehicle Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblTerminate',(select id from master.menu where name = 'Vehicle Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblTerminate' and ref_id=(select id from master.menu where name = 'Vehicle Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblAction',(select id from master.menu where name = 'Vehicle Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblAction' and ref_id=(select id from master.menu where name = 'Vehicle Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblHome',(select id from master.menu where name = 'Vehicle Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblHome' and ref_id=(select id from master.menu where name = 'Vehicle Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblConfiguration',(select id from master.menu where name = 'Vehicle Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblConfiguration' and ref_id=(select id from master.menu where name = 'Vehicle Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblEditVehicleDetails',(select id from master.menu where name = 'Vehicle Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblEditVehicleDetails' and ref_id=(select id from master.menu where name = 'Vehicle Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblViewVehicleDetails',(select id from master.menu where name = 'Vehicle Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblViewVehicleDetails' and ref_id=(select id from master.menu where name = 'Vehicle Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblVehicleUpdatedSuccessfully',(select id from master.menu where name = 'Vehicle Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblVehicleUpdatedSuccessfully' and ref_id=(select id from master.menu where name = 'Vehicle Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblBack',(select id from master.menu where name = 'Vehicle Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblBack' and ref_id=(select id from master.menu where name = 'Vehicle Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblVehicleName',(select id from master.menu where name = 'Vehicle Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblVehicleName' and ref_id=(select id from master.menu where name = 'Vehicle Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblEnterVehicleName',(select id from master.menu where name = 'Vehicle Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblEnterVehicleName' and ref_id=(select id from master.menu where name = 'Vehicle Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblVehicleNamecannotcontainonlywhitespace',(select id from master.menu where name = 'Vehicle Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblVehicleNamecannotcontainonlywhitespace' and ref_id=(select id from master.menu where name = 'Vehicle Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblDuplicateVehicleName',(select id from master.menu where name = 'Vehicle Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblDuplicateVehicleName' and ref_id=(select id from master.menu where name = 'Vehicle Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblEnterRegistrationNumber',(select id from master.menu where name = 'Vehicle Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblEnterRegistrationNumber' and ref_id=(select id from master.menu where name = 'Vehicle Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblRegistrationNumbercannotcontainonlywhitespace',(select id from master.menu where name = 'Vehicle Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblRegistrationNumbercannotcontainonlywhitespace' and ref_id=(select id from master.menu where name = 'Vehicle Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblVehicleIdentificationNumberVIN',(select id from master.menu where name = 'Vehicle Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblVehicleIdentificationNumberVIN' and ref_id=(select id from master.menu where name = 'Vehicle Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblEnterVehicleIdentificationNumberVIN',(select id from master.menu where name = 'Vehicle Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblEnterVehicleIdentificationNumberVIN' and ref_id=(select id from master.menu where name = 'Vehicle Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblVehicleModel',(select id from master.menu where name = 'Vehicle Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblVehicleModel' and ref_id=(select id from master.menu where name = 'Vehicle Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblEnterVehicleModel',(select id from master.menu where name = 'Vehicle Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblEnterVehicleModel' and ref_id=(select id from master.menu where name = 'Vehicle Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblAssociatedGroups',(select id from master.menu where name = 'Vehicle Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblAssociatedGroups' and ref_id=(select id from master.menu where name = 'Vehicle Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblEnterAssociatedGroups',(select id from master.menu where name = 'Vehicle Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblEnterAssociatedGroups' and ref_id=(select id from master.menu where name = 'Vehicle Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblEnterRelationship',(select id from master.menu where name = 'Vehicle Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblEnterRelationship' and ref_id=(select id from master.menu where name = 'Vehicle Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblCancel',(select id from master.menu where name = 'Vehicle Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblCancel' and ref_id=(select id from master.menu where name = 'Vehicle Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblReset',(select id from master.menu where name = 'Vehicle Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblReset' and ref_id=(select id from master.menu where name = 'Vehicle Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblConfirm',(select id from master.menu where name = 'Vehicle Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblConfirm' and ref_id=(select id from master.menu where name = 'Vehicle Management'));









update translation.translation set value='Organisation Relationship Management' where lower(code)=lower('EN-GB') and name='lblOrganisationRelationshipManagement';
update translation.translation set value='Delete' where lower(code)=lower('EN-GB') and name='lblDelete';
update translation.translation set value='Do you want to end ''$'' relationship?' where lower(code)=lower('EN-GB') and name='lblAreyousureyouwanttodeleterelationship';
update translation.translation set value='No' where lower(code)=lower('EN-GB') and name='lblNo';
update translation.translation set value='Yes' where lower(code)=lower('EN-GB') and name='lblYes';
update translation.translation set value='Alert' where lower(code)=lower('EN-GB') and name='lblAlert';
update translation.translation set value='You want to # ''$'' Details?' where lower(code)=lower('EN-GB') and name='lblYouwanttoDetails';
update translation.translation set value='Relationship ''$'' was successfully deleted' where lower(code)=lower('EN-GB') and name='lblRelationshipwassuccessfullydeleted';
update translation.translation set value='Organisation Relationship Details' where lower(code)=lower('EN-GB') and name='lblOrganisationRelationshipDetails';
update translation.translation set value='New Relationship' where lower(code)=lower('EN-GB') and name='lblNewRelationship';
update translation.translation set value='Search' where lower(code)=lower('EN-GB') and name='lblSearch';
update translation.translation set value='End Relationship' where lower(code)=lower('EN-GB') and name='lblEndRelationship';
update translation.translation set value='No Record Found' where lower(code)=lower('EN-GB') and name='lblNoRecordFound';
update translation.translation set value='All' where lower(code)=lower('EN-GB') and name='lblAll';
update translation.translation set value='New' where lower(code)=lower('EN-GB') and name='lblNew';
update translation.translation set value='Relationship Name' where lower(code)=lower('EN-GB') and name='lblRelationshipName';
update translation.translation set value='Vehicle Group' where lower(code)=lower('EN-GB') and name='lblVehicleGroup';
update translation.translation set value='Target Organisation' where lower(code)=lower('EN-GB') and name='lblTargetOrganisation';
update translation.translation set value='Start Date' where lower(code)=lower('EN-GB') and name='lblStartDate';
update translation.translation set value='End Date' where lower(code)=lower('EN-GB') and name='lblEndDate';
update translation.translation set value='Allow Chaining' where lower(code)=lower('EN-GB') and name='lblAllowChaining';
update translation.translation set value='Home' where lower(code)=lower('EN-GB') and name='lblHome';
update translation.translation set value='Admin' where lower(code)=lower('EN-GB') and name='lblAdmin';
update translation.translation set value='Relationship Details' where lower(code)=lower('EN-GB') and name='lblRelationshipDetails';
update translation.translation set value='New Organisation Relationship ''$'' Created Successfully' where lower(code)=lower('EN-GB') and name='lblNewOrganisationRelationshipCreatedSuccessfully';
update translation.translation set value='Organisation Relationship ''$'' Updated Successfully' where lower(code)=lower('EN-GB') and name='lblOrganisationRelationshipUpdatedSuccessfully';
update translation.translation set value='Add New Relationship' where lower(code)=lower('EN-GB') and name='lblAddNewRelationsip';
update translation.translation set value='Relationship' where lower(code)=lower('EN-GB') and name='lblRelationsip';
update translation.translation set value='Select Relationship' where lower(code)=lower('EN-GB') and name='lblSelectCRelationship';
update translation.translation set value='Please select Relation' where lower(code)=lower('EN-GB') and name='lblPleaseEnterRelationname';
update translation.translation set value='Chain Relationship' where lower(code)=lower('EN-GB') and name='lblChainRelationship';
update translation.translation set value='Active' where lower(code)=lower('EN-GB') and name='lblActive';
update translation.translation set value='lnActive' where lower(code)=lower('EN-GB') and name='lblInActive';
update translation.translation set value='Select multiple ''vehicle Group and Organisation'' from below list to map with this Relationship.' where lower(code)=lower('EN-GB') and name='lblRelationshipInfo';
update translation.translation set value='Cancel' where lower(code)=lower('EN-GB') and name='lblCancel';
update translation.translation set value='Create' where lower(code)=lower('EN-GB') and name='lblCreate';
update translation.translation set value='Confirm' where lower(code)=lower('EN-GB') and name='lblConfirm';
update translation.translation set value='Select Vehicle Group' where lower(code)=lower('EN-GB') and name='lblSelectVehicleGroup';
update translation.translation set value='Vehicle Group Name' where lower(code)=lower('EN-GB') and name='lblVehicleGroupName';
update translation.translation set value='Select Organisation' where lower(code)=lower('EN-GB') and name='lblSelectOrganisation';
update translation.translation set value='Organisation Name' where lower(code)=lower('EN-GB') and name='lblOrganisationName';

INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblOrganisationRelationshipManagement','Organisation Relationship Management',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblOrganisationRelationshipManagement');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblDelete','Delete',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblDelete');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblAreyousureyouwanttodeleterelationship','Do you want to end ''$'' relationship?',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblAreyousureyouwanttodeleterelationship');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblNo','No',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblNo');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblYes','Yes',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblYes');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblAlert','Alert',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblAlert');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblYouwanttoDetails','You want to # ''$'' Details?',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblYouwanttoDetails');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblRelationshipwassuccessfullydeleted','Relationship ''$'' was successfully deleted',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblRelationshipwassuccessfullydeleted');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblOrganisationRelationshipDetails','Organisation Relationship Details',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblOrganisationRelationshipDetails');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblNewRelationship','New Relationship',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblNewRelationship');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblSearch','Search',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblSearch');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblEndRelationship','End Relationship',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblEndRelationship');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblNoRecordFound','No Record Found',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblNoRecordFound');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblAll','All',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblAll');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblNew','New',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblNew');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblRelationshipName','Relationship Name',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblRelationshipName');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblVehicleGroup','Vehicle Group',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblVehicleGroup');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblTargetOrganisation','Target Organisation',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblTargetOrganisation');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblStartDate','Start Date',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblStartDate');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblEndDate','End Date',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblEndDate');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblAllowChaining','Allow Chaining',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblAllowChaining');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblHome','Home',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblHome');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblAdmin','Admin',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblAdmin');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblRelationshipDetails','Relationship Details',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblRelationshipDetails');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblNewOrganisationRelationshipCreatedSuccessfully','New Organisation Relationship ''$'' Created Successfully',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblNewOrganisationRelationshipCreatedSuccessfully');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblOrganisationRelationshipUpdatedSuccessfully','Organisation Relationship ''$'' Updated Successfully',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblOrganisationRelationshipUpdatedSuccessfully');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblAddNewRelationsip','Add New Relationship',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblAddNewRelationsip');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblRelationsip','Relationship',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblRelationsip');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblSelectCRelationship','Select Relationship',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblSelectCRelationship');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblPleaseEnterRelationname','Please select Relation',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblPleaseEnterRelationname');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblChainRelationship','Chain Relationship',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblChainRelationship');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblActive','Active',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblActive');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblInActive','lnActive',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblInActive');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblRelationshipInfo','Select multiple ''vehicle Group and Organisation'' from below list to map with this Relationship.',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblRelationshipInfo');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblCancel','Cancel',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblCancel');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblCreate','Create',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblCreate');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblConfirm','Confirm',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblConfirm');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblSelectVehicleGroup','Select Vehicle Group',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblSelectVehicleGroup');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblVehicleGroupName','Vehicle Group Name',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblVehicleGroupName');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblSelectOrganisation','Select Organisation',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblSelectOrganisation');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblOrganisationName','Organisation Name',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblOrganisationName');

INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblOrganisationRelationshipManagement',(select id from master.menu where name = 'Organisation Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblOrganisationRelationshipManagement' and ref_id=(select id from master.menu where name = 'Organisation Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblDelete',(select id from master.menu where name = 'Organisation Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblDelete' and ref_id=(select id from master.menu where name = 'Organisation Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblAreyousureyouwanttodeleterelationship',(select id from master.menu where name = 'Organisation Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblAreyousureyouwanttodeleterelationship' and ref_id=(select id from master.menu where name = 'Organisation Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblNo',(select id from master.menu where name = 'Organisation Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblNo' and ref_id=(select id from master.menu where name = 'Organisation Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblYes',(select id from master.menu where name = 'Organisation Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblYes' and ref_id=(select id from master.menu where name = 'Organisation Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblAlert',(select id from master.menu where name = 'Organisation Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblAlert' and ref_id=(select id from master.menu where name = 'Organisation Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblYouwanttoDetails',(select id from master.menu where name = 'Organisation Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblYouwanttoDetails' and ref_id=(select id from master.menu where name = 'Organisation Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblRelationshipwassuccessfullydeleted',(select id from master.menu where name = 'Organisation Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblRelationshipwassuccessfullydeleted' and ref_id=(select id from master.menu where name = 'Organisation Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblOrganisationRelationshipDetails',(select id from master.menu where name = 'Organisation Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblOrganisationRelationshipDetails' and ref_id=(select id from master.menu where name = 'Organisation Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblNewRelationship',(select id from master.menu where name = 'Organisation Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblNewRelationship' and ref_id=(select id from master.menu where name = 'Organisation Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblSearch',(select id from master.menu where name = 'Organisation Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblSearch' and ref_id=(select id from master.menu where name = 'Organisation Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblEndRelationship',(select id from master.menu where name = 'Organisation Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblEndRelationship' and ref_id=(select id from master.menu where name = 'Organisation Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblNoRecordFound',(select id from master.menu where name = 'Organisation Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblNoRecordFound' and ref_id=(select id from master.menu where name = 'Organisation Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblAll',(select id from master.menu where name = 'Organisation Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblAll' and ref_id=(select id from master.menu where name = 'Organisation Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblNew',(select id from master.menu where name = 'Organisation Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblNew' and ref_id=(select id from master.menu where name = 'Organisation Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblRelationshipName',(select id from master.menu where name = 'Organisation Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblRelationshipName' and ref_id=(select id from master.menu where name = 'Organisation Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblVehicleGroup',(select id from master.menu where name = 'Organisation Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblVehicleGroup' and ref_id=(select id from master.menu where name = 'Organisation Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblTargetOrganisation',(select id from master.menu where name = 'Organisation Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblTargetOrganisation' and ref_id=(select id from master.menu where name = 'Organisation Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblStartDate',(select id from master.menu where name = 'Organisation Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblStartDate' and ref_id=(select id from master.menu where name = 'Organisation Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblEndDate',(select id from master.menu where name = 'Organisation Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblEndDate' and ref_id=(select id from master.menu where name = 'Organisation Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblAllowChaining',(select id from master.menu where name = 'Organisation Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblAllowChaining' and ref_id=(select id from master.menu where name = 'Organisation Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblHome',(select id from master.menu where name = 'Organisation Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblHome' and ref_id=(select id from master.menu where name = 'Organisation Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblAdmin',(select id from master.menu where name = 'Organisation Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblAdmin' and ref_id=(select id from master.menu where name = 'Organisation Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblRelationshipDetails',(select id from master.menu where name = 'Organisation Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblRelationshipDetails' and ref_id=(select id from master.menu where name = 'Organisation Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblNewOrganisationRelationshipCreatedSuccessfully',(select id from master.menu where name = 'Organisation Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblNewOrganisationRelationshipCreatedSuccessfully' and ref_id=(select id from master.menu where name = 'Organisation Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblOrganisationRelationshipUpdatedSuccessfully',(select id from master.menu where name = 'Organisation Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblOrganisationRelationshipUpdatedSuccessfully' and ref_id=(select id from master.menu where name = 'Organisation Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblAddNewRelationsip',(select id from master.menu where name = 'Organisation Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblAddNewRelationsip' and ref_id=(select id from master.menu where name = 'Organisation Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblRelationsip',(select id from master.menu where name = 'Organisation Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblRelationsip' and ref_id=(select id from master.menu where name = 'Organisation Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblSelectCRelationship',(select id from master.menu where name = 'Organisation Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblSelectCRelationship' and ref_id=(select id from master.menu where name = 'Organisation Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblPleaseEnterRelationname',(select id from master.menu where name = 'Organisation Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblPleaseEnterRelationname' and ref_id=(select id from master.menu where name = 'Organisation Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblChainRelationship',(select id from master.menu where name = 'Organisation Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblChainRelationship' and ref_id=(select id from master.menu where name = 'Organisation Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblActive',(select id from master.menu where name = 'Organisation Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblActive' and ref_id=(select id from master.menu where name = 'Organisation Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblInActive',(select id from master.menu where name = 'Organisation Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblInActive' and ref_id=(select id from master.menu where name = 'Organisation Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblRelationshipInfo',(select id from master.menu where name = 'Organisation Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblRelationshipInfo' and ref_id=(select id from master.menu where name = 'Organisation Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblCancel',(select id from master.menu where name = 'Organisation Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblCancel' and ref_id=(select id from master.menu where name = 'Organisation Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblCreate',(select id from master.menu where name = 'Organisation Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblCreate' and ref_id=(select id from master.menu where name = 'Organisation Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblConfirm',(select id from master.menu where name = 'Organisation Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblConfirm' and ref_id=(select id from master.menu where name = 'Organisation Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblSelectVehicleGroup',(select id from master.menu where name = 'Organisation Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblSelectVehicleGroup' and ref_id=(select id from master.menu where name = 'Organisation Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblVehicleGroupName',(select id from master.menu where name = 'Organisation Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblVehicleGroupName' and ref_id=(select id from master.menu where name = 'Organisation Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblSelectOrganisation',(select id from master.menu where name = 'Organisation Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblSelectOrganisation' and ref_id=(select id from master.menu where name = 'Organisation Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblOrganisationName',(select id from master.menu where name = 'Organisation Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblOrganisationName' and ref_id=(select id from master.menu where name = 'Organisation Relationship Management'));


update translation.translation set value='Package Management' where lower(code)=lower('EN-GB') and name='lblPackageManagement';
update translation.translation set value='Alert' where lower(code)=lower('EN-GB') and name='lblAlert';
update translation.translation set value='You want to # ''$'' Details?' where lower(code)=lower('EN-GB') and name='lblYouwanttoDetails';
update translation.translation set value='No' where lower(code)=lower('EN-GB') and name='lblNo';
update translation.translation set value='Yes' where lower(code)=lower('EN-GB') and name='lblYes';
update translation.translation set value='Delete' where lower(code)=lower('EN-GB') and name='lblDelete';
update translation.translation set value='Are you sure you want to delete ''$'' ?' where lower(code)=lower('EN-GB') and name='lblAreyousureyouwanttodelete';
update translation.translation set value='Cancel' where lower(code)=lower('EN-GB') and name='lblCancel';
update translation.translation set value='Package ''$'' was successfully deleted' where lower(code)=lower('EN-GB') and name='lblPackagewassuccessfullydeleted';
update translation.translation set value='Package Details' where lower(code)=lower('EN-GB') and name='lblPackageDetails';
update translation.translation set value='Search' where lower(code)=lower('EN-GB') and name='lblSearch';
update translation.translation set value='New Package' where lower(code)=lower('EN-GB') and name='lblNewPackage';
update translation.translation set value='No Record Found' where lower(code)=lower('EN-GB') and name='lblNoRecordFound';
update translation.translation set value='Package Code' where lower(code)=lower('EN-GB') and name='lblPackageCode';
update translation.translation set value='New' where lower(code)=lower('EN-GB') and name='lblNew';
update translation.translation set value='Name' where lower(code)=lower('EN-GB') and name='lblName';
update translation.translation set value='Type' where lower(code)=lower('EN-GB') and name='lblType';
update translation.translation set value='Status' where lower(code)=lower('EN-GB') and name='lblStatus';
update translation.translation set value='Click to Deactivate' where lower(code)=lower('EN-GB') and name='lblClicktodeactivate';
update translation.translation set value='Click to Activate' where lower(code)=lower('EN-GB') and name='lblClicktoactivate';
update translation.translation set value='Active' where lower(code)=lower('EN-GB') and name='lblActive';
update translation.translation set value='InActive' where lower(code)=lower('EN-GB') and name='lblInActive';
update translation.translation set value='Action' where lower(code)=lower('EN-GB') and name='lblAction';
update translation.translation set value='View' where lower(code)=lower('EN-GB') and name='lblView';
update translation.translation set value='Edit' where lower(code)=lower('EN-GB') and name='lblEdit';
update translation.translation set value='Home' where lower(code)=lower('EN-GB') and name='lblHome';
update translation.translation set value='Admin' where lower(code)=lower('EN-GB') and name='lblAdmin';
update translation.translation set value='View Package' where lower(code)=lower('EN-GB') and name='lblViewPackage';
update translation.translation set value='Edit Package Details' where lower(code)=lower('EN-GB') and name='lblEditPackageDetails';
update translation.translation set value='Add New Package' where lower(code)=lower('EN-GB') and name='lblAddNewPackage';
update translation.translation set value='New Package ''$'' Created Successfully' where lower(code)=lower('EN-GB') and name='lblNewPackageCreatedSuccessfully';
update translation.translation set value='Package ''$'' Updated Successfully' where lower(code)=lower('EN-GB') and name='lblPackageUpdatedSuccessfully';
update translation.translation set value='Back' where lower(code)=lower('EN-GB') and name='lblBack';
update translation.translation set value='View Package Details' where lower(code)=lower('EN-GB') and name='lblViewPackageDetails';
update translation.translation set value='Enter Package code' where lower(code)=lower('EN-GB') and name='lblEnterPackagecode';
update translation.translation set value='Please enter Package Code' where lower(code)=lower('EN-GB') and name='lblPleasenterpackagecode';
update translation.translation set value='Package Code cannot contain only whitespace' where lower(code)=lower('EN-GB') and name='lblPackagecodecannotcontainonlywhitespace';
update translation.translation set value='Special characters not allowed' where lower(code)=lower('EN-GB') and name='lblSpecialcharactersnotallowed';
update translation.translation set value='Package code already exists' where lower(code)=lower('EN-GB') and name='lblPackagecodealreadyexists';
update translation.translation set value='Package Name' where lower(code)=lower('EN-GB') and name='lblPackageName';
update translation.translation set value='Enter Package Name' where lower(code)=lower('EN-GB') and name='lblEnterPackageName';
update translation.translation set value='Please enter Package Name' where lower(code)=lower('EN-GB') and name='lblPleasenterpackagename';
update translation.translation set value='Package Name cannot contain only whitespace' where lower(code)=lower('EN-GB') and name='lblPackagenamecannotcontainonlywhitespace';
update translation.translation set value='Description' where lower(code)=lower('EN-GB') and name='lblDescription';
update translation.translation set value='100 characters max' where lower(code)=lower('EN-GB') and name='lbl120CharMax';
update translation.translation set value='Enter Description' where lower(code)=lower('EN-GB') and name='lblEnterDescription';
update translation.translation set value='Feature Description cannot contain only whitespace' where lower(code)=lower('EN-GB') and name='lblDescriptioncannotcontainonlywhitespace';
update translation.translation set value='Please Select Package Type' where lower(code)=lower('EN-GB') and name='lblPleaseselectpackagetype';
update translation.translation set value='You can select multiple features from below list to map with this Package. Feature selection is mandatory.' where lower(code)=lower('EN-GB') and name='lblHintMessage';
update translation.translation set value='Reset' where lower(code)=lower('EN-GB') and name='lblReset';
update translation.translation set value='Create' where lower(code)=lower('EN-GB') and name='lblCreate';
update translation.translation set value='Confirm' where lower(code)=lower('EN-GB') and name='lblConfirm';
update translation.translation set value='Selected Features' where lower(code)=lower('EN-GB') and name='lblSelectedFeatures';
update translation.translation set value='Select Features' where lower(code)=lower('EN-GB') and name='lblSelectFeatures';
update translation.translation set value='Feature Name' where lower(code)=lower('EN-GB') and name='lblFeatureName';
update translation.translation set value='Include' where lower(code)=lower('EN-GB') and name='lblInclude';
update translation.translation set value='Deactivate' where lower(code)=lower('EN-GB') and name='lblDeactivate';
update translation.translation set value='Activate' where lower(code)=lower('EN-GB') and name='lblActivate';
update translation.translation set value='Import New Package' where lower(code)=lower('EN-GB') and name='lblImportNewPackage';
update translation.translation set value='Download a Template' where lower(code)=lower('EN-GB') and name='lbldownloadTemplate';
update translation.translation set value='Download template from here and upload it again with updated details' where lower(code)=lower('EN-GB') and name='lbldownloadTemplateInstruction';
update translation.translation set value='Select Updated File' where lower(code)=lower('EN-GB') and name='lblselectUpdatedFile';
update translation.translation set value='Browse' where lower(code)=lower('EN-GB') and name='lblbrowse';
update translation.translation set value='Upload Package' where lower(code)=lower('EN-GB') and name='lbluploadPackage';
update translation.translation set value='Please select a file' where lower(code)=lower('EN-GB') and name='lblPleaseSelectAFile';
update translation.translation set value='The total size must not exceed' where lower(code)=lower('EN-GB') and name='lblTotalSizeMustNotExceed';
update translation.translation set value='Empty File' where lower(code)=lower('EN-GB') and name='lblEmptyFile';
update translation.translation set value='Imported file details' where lower(code)=lower('EN-GB') and name='lblImportedFileDetails';
update translation.translation set value='package' where lower(code)=lower('EN-GB') and name='lblPackage';
update translation.translation set value='packages' where lower(code)=lower('EN-GB') and name='lblPackages';
update translation.translation set value='Imported' where lower(code)=lower('EN-GB') and name='lblimport';
update translation.translation set value='Rejected' where lower(code)=lower('EN-GB') and name='lblrejected';
update translation.translation set value='Package Code is mandatory input' where lower(code)=lower('EN-GB') and name='lblPackageCodeMandatoryReason';
update translation.translation set value='Package Name is mandatory input' where lower(code)=lower('EN-GB') and name='lblPackageNameMandatoryReason';
update translation.translation set value='''$'' exceeds maximum allowed length of ''#'' chars' where lower(code)=lower('EN-GB') and name='lblExceedMaxLength';
update translation.translation set value='Special characters not allowed in ''$''' where lower(code)=lower('EN-GB') and name='lblSpecialCharNotAllowed';
update translation.translation set value='Package Description cannot exceed 100 characters' where lower(code)=lower('EN-GB') and name='lblPackageDescriptionCannotExceed';
update translation.translation set value='Package Type is mandatory input' where lower(code)=lower('EN-GB') and name='lblPackageTypeMandate';
update translation.translation set value='Package Status is mandatory input' where lower(code)=lower('EN-GB') and name='lblPackageStatusMandate';
update translation.translation set value='Package type should be VIN or Organization' where lower(code)=lower('EN-GB') and name='lblPackageTypeValue';
update translation.translation set value='Package status can be Active or Inactive' where lower(code)=lower('EN-GB') and name='lblPackageStatusValue';
update translation.translation set value='Features should be comma separated and cannot be empty' where lower(code)=lower('EN-GB') and name='lblFeatureCannotbeEmpty';
update translation.translation set value='Feature is invalid' where lower(code)=lower('EN-GB') and name='lblFeatureInvalid';
update translation.translation set value='Rejected Driver Details' where lower(code)=lower('EN-GB') and name='lblTableTitle';
update translation.translation set value='Package Description' where lower(code)=lower('EN-GB') and name='lblPackageDescription';
update translation.translation set value='Package Type' where lower(code)=lower('EN-GB') and name='lblPackageType';
update translation.translation set value='Package Status' where lower(code)=lower('EN-GB') and name='lblPackageStatus';
update translation.translation set value='Package Feature' where lower(code)=lower('EN-GB') and name='lblPackageFeature';
update translation.translation set value='Fail Reason' where lower(code)=lower('EN-GB') and name='lblFailReason';

INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblPackageManagement','Package Management',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblPackageManagement');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblAlert','Alert',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblAlert');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblYouwanttoDetails','You want to # ''$'' Details?',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblYouwanttoDetails');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblNo','No',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblNo');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblYes','Yes',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblYes');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblDelete','Delete',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblDelete');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblAreyousureyouwanttodelete','Are you sure you want to delete ''$'' ?',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblAreyousureyouwanttodelete');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblCancel','Cancel',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblCancel');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblPackagewassuccessfullydeleted','Package ''$'' was successfully deleted',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblPackagewassuccessfullydeleted');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblPackageDetails','Package Details',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblPackageDetails');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblSearch','Search',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblSearch');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblNewPackage','New Package',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblNewPackage');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblNoRecordFound','No Record Found',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblNoRecordFound');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblPackageCode','Package Code',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblPackageCode');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblNew','New',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblNew');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblName','Name',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblName');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblType','Type',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblType');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblStatus','Status',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblStatus');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblClicktodeactivate','Click to Deactivate',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblClicktodeactivate');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblClicktoactivate','Click to Activate',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblClicktoactivate');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblActive','Active',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblActive');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblInActive','InActive',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblInActive');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblAction','Action',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblAction');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblView','View',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblView');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblEdit','Edit',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblEdit');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblHome','Home',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblHome');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblAdmin','Admin',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblAdmin');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblViewPackage','View Package',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblViewPackage');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblEditPackageDetails','Edit Package Details',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblEditPackageDetails');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblAddNewPackage','Add New Package',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblAddNewPackage');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblNewPackageCreatedSuccessfully','New Package ''$'' Created Successfully',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblNewPackageCreatedSuccessfully');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblPackageUpdatedSuccessfully','Package ''$'' Updated Successfully',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblPackageUpdatedSuccessfully');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblBack','Back',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblBack');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblViewPackageDetails','View Package Details',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblViewPackageDetails');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblEnterPackagecode','Enter Package code',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblEnterPackagecode');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblPleasenterpackagecode','Please enter Package Code',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblPleasenterpackagecode');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblPackagecodecannotcontainonlywhitespace','Package Code cannot contain only whitespace',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblPackagecodecannotcontainonlywhitespace');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblSpecialcharactersnotallowed','Special characters not allowed',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblSpecialcharactersnotallowed');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblPackagecodealreadyexists','Package code already exists',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblPackagecodealreadyexists');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblPackageName','Package Name',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblPackageName');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblEnterPackageName','Enter Package Name',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblEnterPackageName');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblPleasenterpackagename','Please enter Package Name',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblPleasenterpackagename');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblPackagenamecannotcontainonlywhitespace','Package Name cannot contain only whitespace',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblPackagenamecannotcontainonlywhitespace');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblDescription','Description',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblDescription');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lbl120CharMax','100 characters max',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lbl120CharMax');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblEnterDescription','Enter Description',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblEnterDescription');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblDescriptioncannotcontainonlywhitespace','Feature Description cannot contain only whitespace',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblDescriptioncannotcontainonlywhitespace');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblPleaseselectpackagetype','Please Select Package Type',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblPleaseselectpackagetype');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblHintMessage','You can select multiple features from below list to map with this Package. Feature selection is mandatory.',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblHintMessage');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblReset','Reset',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblReset');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblCreate','Create',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblCreate');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblConfirm','Confirm',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblConfirm');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblSelectedFeatures','Selected Features',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblSelectedFeatures');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblSelectFeatures','Select Features',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblSelectFeatures');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblFeatureName','Feature Name',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblFeatureName');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblInclude','Include',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblInclude');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblDeactivate','Deactivate',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblDeactivate');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblActivate','Activate',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblActivate');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblImportNewPackage','Import New Package',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblImportNewPackage');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lbldownloadTemplate','Download a Template',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lbldownloadTemplate');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lbldownloadTemplateInstruction','Download template from here and upload it again with updated details',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lbldownloadTemplateInstruction');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblselectUpdatedFile','Select Updated File',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblselectUpdatedFile');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblbrowse','Browse',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblbrowse');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lbluploadPackage','Upload Package',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lbluploadPackage');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblPleaseSelectAFile','Please select a file',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblPleaseSelectAFile');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblTotalSizeMustNotExceed','The total size must not exceed',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblTotalSizeMustNotExceed');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblEmptyFile','Empty File',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblEmptyFile');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblImportedFileDetails','Imported file details',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblImportedFileDetails');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblPackage','package',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblPackage');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblPackages','packages',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblPackages');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblimport','Imported',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblimport');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblrejected','Rejected',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblrejected');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblPackageCodeMandatoryReason','Package Code is mandatory input',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblPackageCodeMandatoryReason');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblPackageNameMandatoryReason','Package Name is mandatory input',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblPackageNameMandatoryReason');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblExceedMaxLength','''$'' exceeds maximum allowed length of ''#'' chars',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblExceedMaxLength');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblSpecialCharNotAllowed','Special characters not allowed in ''$''',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblSpecialCharNotAllowed');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblPackageDescriptionCannotExceed','Package Description cannot exceed 100 characters',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblPackageDescriptionCannotExceed');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblPackageTypeMandate','Package Type is mandatory input',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblPackageTypeMandate');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblPackageStatusMandate','Package Status is mandatory input',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblPackageStatusMandate');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblPackageTypeValue','Package type should be VIN or Organization',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblPackageTypeValue');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblPackageStatusValue','Package status can be Active or Inactive',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblPackageStatusValue');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblFeatureCannotbeEmpty','Features should be comma separated and cannot be empty',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblFeatureCannotbeEmpty');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblFeatureInvalid','Feature is invalid',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblFeatureInvalid');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblTableTitle','Rejected Driver Details',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblTableTitle');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblPackageDescription','Package Description',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblPackageDescription');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblPackageType','Package Type',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblPackageType');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblPackageStatus','Package Status',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblPackageStatus');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblPackageFeature','Package Feature',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblPackageFeature');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblFailReason','Fail Reason',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblFailReason');

INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblPackageManagement',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblPackageManagement' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblAlert',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblAlert' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblYouwanttoDetails',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblYouwanttoDetails' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblNo',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblNo' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblYes',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblYes' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblDelete',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblDelete' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblAreyousureyouwanttodelete',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblAreyousureyouwanttodelete' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblCancel',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblCancel' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblPackagewassuccessfullydeleted',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblPackagewassuccessfullydeleted' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblPackageDetails',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblPackageDetails' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblSearch',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblSearch' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblNewPackage',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblNewPackage' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblNoRecordFound',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblNoRecordFound' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblPackageCode',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblPackageCode' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblNew',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblNew' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblName',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblName' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblType',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblType' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblStatus',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblStatus' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblClicktodeactivate',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblClicktodeactivate' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblClicktoactivate',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblClicktoactivate' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblActive',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblActive' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblInActive',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblInActive' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblAction',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblAction' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblView',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblView' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblEdit',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblEdit' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblHome',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblHome' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblAdmin',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblAdmin' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblViewPackage',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblViewPackage' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblEditPackageDetails',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblEditPackageDetails' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblAddNewPackage',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblAddNewPackage' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblNewPackageCreatedSuccessfully',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblNewPackageCreatedSuccessfully' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblPackageUpdatedSuccessfully',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblPackageUpdatedSuccessfully' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblBack',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblBack' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblViewPackageDetails',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblViewPackageDetails' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblEnterPackagecode',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblEnterPackagecode' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblPleasenterpackagecode',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblPleasenterpackagecode' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblPackagecodecannotcontainonlywhitespace',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblPackagecodecannotcontainonlywhitespace' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblSpecialcharactersnotallowed',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblSpecialcharactersnotallowed' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblPackagecodealreadyexists',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblPackagecodealreadyexists' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblPackageName',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblPackageName' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblEnterPackageName',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblEnterPackageName' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblPleasenterpackagename',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblPleasenterpackagename' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblPackagenamecannotcontainonlywhitespace',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblPackagenamecannotcontainonlywhitespace' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblDescription',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblDescription' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lbl120CharMax',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lbl120CharMax' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblEnterDescription',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblEnterDescription' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblDescriptioncannotcontainonlywhitespace',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblDescriptioncannotcontainonlywhitespace' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblPleaseselectpackagetype',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblPleaseselectpackagetype' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblHintMessage',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblHintMessage' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblReset',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblReset' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblCreate',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblCreate' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblConfirm',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblConfirm' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblSelectedFeatures',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblSelectedFeatures' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblSelectFeatures',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblSelectFeatures' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblFeatureName',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblFeatureName' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblInclude',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblInclude' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblDeactivate',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblDeactivate' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblActivate',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblActivate' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblImportNewPackage',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblImportNewPackage' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lbldownloadTemplate',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lbldownloadTemplate' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lbldownloadTemplateInstruction',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lbldownloadTemplateInstruction' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblselectUpdatedFile',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblselectUpdatedFile' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblbrowse',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblbrowse' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lbluploadPackage',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lbluploadPackage' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblPleaseSelectAFile',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblPleaseSelectAFile' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblTotalSizeMustNotExceed',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblTotalSizeMustNotExceed' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblEmptyFile',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblEmptyFile' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblImportedFileDetails',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblImportedFileDetails' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblPackage',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblPackage' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblPackages',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblPackages' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblimport',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblimport' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblrejected',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblrejected' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblPackageCodeMandatoryReason',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblPackageCodeMandatoryReason' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblPackageNameMandatoryReason',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblPackageNameMandatoryReason' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblExceedMaxLength',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblExceedMaxLength' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblSpecialCharNotAllowed',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblSpecialCharNotAllowed' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblPackageDescriptionCannotExceed',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblPackageDescriptionCannotExceed' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblPackageTypeMandate',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblPackageTypeMandate' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblPackageStatusMandate',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblPackageStatusMandate' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblPackageTypeValue',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblPackageTypeValue' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblPackageStatusValue',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblPackageStatusValue' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblFeatureCannotbeEmpty',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblFeatureCannotbeEmpty' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblFeatureInvalid',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblFeatureInvalid' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblTableTitle',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblTableTitle' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblPackageDescription',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblPackageDescription' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblPackageType',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblPackageType' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblPackageStatus',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblPackageStatus' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblPackageFeature',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblPackageFeature' and ref_id=(select id from master.menu where name = 'Package Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblFailReason',(select id from master.menu where name = 'Package Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblFailReason' and ref_id=(select id from master.menu where name = 'Package Management'));

update translation.translation set value='Feature Management' where lower(code)=lower('EN-GB') and name='lblFeatureManagement';
update translation.translation set value='Alert' where lower(code)=lower('EN-GB') and name='lblAlert';
update translation.translation set value='You want to # ''$'' Details?' where lower(code)=lower('EN-GB') and name='lblYouwanttoDetails';
update translation.translation set value='No' where lower(code)=lower('EN-GB') and name='lblNo';
update translation.translation set value='Yes' where lower(code)=lower('EN-GB') and name='lblYes';
update translation.translation set value='Delete' where lower(code)=lower('EN-GB') and name='lblDelete';
update translation.translation set value='Are you sure you want to delete ''$'' ?' where lower(code)=lower('EN-GB') and name='lblAreyousureyouwanttodelete';
update translation.translation set value='Cancel' where lower(code)=lower('EN-GB') and name='lblCancel';
update translation.translation set value='Feature Relationship ''$'' was successfully deleted' where lower(code)=lower('EN-GB') and name='lblFeatureRelationshipwassuccessfullydeleted';
update translation.translation set value='Data Attribute Features' where lower(code)=lower('EN-GB') and name='lblDataAttributeFeatures';
update translation.translation set value='Search' where lower(code)=lower('EN-GB') and name='lblSearch';
update translation.translation set value='New Feature' where lower(code)=lower('EN-GB') and name='lblNewFeature';
update translation.translation set value='No Record Found' where lower(code)=lower('EN-GB') and name='lblNoRecordFound';
update translation.translation set value='Data Attribute Set Name' where lower(code)=lower('EN-GB') and name='lblDataAttributeSetName';
update translation.translation set value='New' where lower(code)=lower('EN-GB') and name='lblNew';
update translation.translation set value='Data Attribute Set Type' where lower(code)=lower('EN-GB') and name='lblDataAttributeSetType';
update translation.translation set value='Status' where lower(code)=lower('EN-GB') and name='lblStatus';
update translation.translation set value='Active' where lower(code)=lower('EN-GB') and name='lblActive';
update translation.translation set value='InActive' where lower(code)=lower('EN-GB') and name='lblInActive';
update translation.translation set value='Action' where lower(code)=lower('EN-GB') and name='lblAction';
update translation.translation set value='View' where lower(code)=lower('EN-GB') and name='lblView';
update translation.translation set value='Edit' where lower(code)=lower('EN-GB') and name='lblEdit';
update translation.translation set value='Home' where lower(code)=lower('EN-GB') and name='lblHome';
update translation.translation set value='Admin' where lower(code)=lower('EN-GB') and name='lblAdmin';
update translation.translation set value='View Feature Relationship' where lower(code)=lower('EN-GB') and name='lblViewFeatureRelationship';
update translation.translation set value='Feature Relationship Details' where lower(code)=lower('EN-GB') and name='lblFeatureRelationshipDetails';
update translation.translation set value='New Feature ''$'' Created Successfully' where lower(code)=lower('EN-GB') and name='lblNewFeatureCreatedSuccessfully';
update translation.translation set value='Feature ''$'' Updated Successfully' where lower(code)=lower('EN-GB') and name='lblFeatureUpdatedSuccessfully';
update translation.translation set value='Back' where lower(code)=lower('EN-GB') and name='lblBack';
update translation.translation set value='Add Feature Relationship' where lower(code)=lower('EN-GB') and name='lblAddFeatureRelationship';
update translation.translation set value='Edit Feature Relationship' where lower(code)=lower('EN-GB') and name='lblEditFeatureRelationship';
update translation.translation set value='New Feature will auto create same as Data Attribute set name' where lower(code)=lower('EN-GB') and name='lblToolTipTextDataAttrSetName';
update translation.translation set value='250 characters max' where lower(code)=lower('EN-GB') and name='lbl250CharMax';
update translation.translation set value='Duplicate Data Attribute Set Name' where lower(code)=lower('EN-GB') and name='lblDuplicateDataAttributeSetName';
update translation.translation set value='Enter Data Attribute Set Name' where lower(code)=lower('EN-GB') and name='lblEnterDataAttributeSetName';
update translation.translation set value='Please enter data attribute set name' where lower(code)=lower('EN-GB') and name='lblPleasenterdatattributesetname';
update translation.translation set value='Data Attribute Set cannot contain only whitespace' where lower(code)=lower('EN-GB') and name='lblDataAttributeSetcannotcontainonlywhitespace';
update translation.translation set value='Max length should be 250' where lower(code)=lower('EN-GB') and name='lblDataAttributeSetmaxlength';
update translation.translation set value='Special characters not allowed' where lower(code)=lower('EN-GB') and name='lblSpecialcharactersnotallowed';
update translation.translation set value='Data Attribute Set already exists. Please choose a different.' where lower(code)=lower('EN-GB') and name='lblDataAttributeSetalreadyexistsPleasechooseadifferentisAttributeSet';
update translation.translation set value='Data Attribute Description' where lower(code)=lower('EN-GB') and name='lblDataAttributeDescription';
update translation.translation set value='100 characters max' where lower(code)=lower('EN-GB') and name='lbl100CharMax';
update translation.translation set value='Enter Data Attribute Description' where lower(code)=lower('EN-GB') and name='lblEnterDataAttributeDescription';
update translation.translation set value='Data Attribute Description cannot contain only whitespace' where lower(code)=lower('EN-GB') and name='lblDataAttributeDescriptioncannotcontainonlywhitespace';
update translation.translation set value='Exclusive' where lower(code)=lower('EN-GB') and name='lblExclusive';
update translation.translation set value='Inclusive' where lower(code)=lower('EN-GB') and name='lblInclusive';
update translation.translation set value='You can select multiple ''Data Attributes'' from below list to map with this Feature Relationship' where lower(code)=lower('EN-GB') and name='lblFeatureHintMessage';
update translation.translation set value='You can select multiple ''Data Attributes'' from below list to map with this Feature Relationship' where lower(code)=lower('EN-GB') and name='lblEditFeatureHintMessage';
update translation.translation set value='Reset' where lower(code)=lower('EN-GB') and name='lblReset';
update translation.translation set value='Create' where lower(code)=lower('EN-GB') and name='lblCreate';
update translation.translation set value='Confirm' where lower(code)=lower('EN-GB') and name='lblConfirm';
update translation.translation set value='Selected Data Attribute' where lower(code)=lower('EN-GB') and name='lblSelectedDataAttribute';
update translation.translation set value='Select Data Attribute' where lower(code)=lower('EN-GB') and name='lblSelectDataAttribute';
update translation.translation set value='Data Attribute' where lower(code)=lower('EN-GB') and name='lblDataAttribute';
update translation.translation set value='Exclude' where lower(code)=lower('EN-GB') and name='lblExclude';
update translation.translation set value='Include' where lower(code)=lower('EN-GB') and name='lblInclude';



update translation.translation set value='Deactivate' where lower(code)=lower('EN-GB') and name='lblDeactivate';
update translation.translation set value='Activate' where lower(code)=lower('EN-GB') and name='lblActivate';

INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblFeatureManagement','Feature Management',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblFeatureManagement');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblAlert','Alert',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblAlert');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblYouwanttoDetails','You want to # ''$'' Details?',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblYouwanttoDetails');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblNo','No',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblNo');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblYes','Yes',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblYes');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblDelete','Delete',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblDelete');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblAreyousureyouwanttodelete','Are you sure you want to delete ''$'' ?',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblAreyousureyouwanttodelete');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblCancel','Cancel',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblCancel');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblFeatureRelationshipwassuccessfullydeleted','Feature Relationship ''$'' was successfully deleted',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblFeatureRelationshipwassuccessfullydeleted');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblDataAttributeFeatures','Data Attribute Features',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblDataAttributeFeatures');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblSearch','Search',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblSearch');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblNewFeature','New Feature',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblNewFeature');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblNoRecordFound','No Record Found',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblNoRecordFound');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblDataAttributeSetName','Data Attribute Set Name',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblDataAttributeSetName');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblNew','New',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblNew');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblDataAttributeSetType','Data Attribute Set Type',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblDataAttributeSetType');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblStatus','Status',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblStatus');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblActive','Active',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblActive');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblInActive','InActive',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblInActive');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblAction','Action',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblAction');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblView','View',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblView');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblEdit','Edit',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblEdit');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblHome','Home',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblHome');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblAdmin','Admin',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblAdmin');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblViewFeatureRelationship','View Feature Relationship',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblViewFeatureRelationship');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblFeatureRelationshipDetails','Feature Relationship Details',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblFeatureRelationshipDetails');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblNewFeatureCreatedSuccessfully','New Feature ''$'' Created Successfully',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblNewFeatureCreatedSuccessfully');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblFeatureUpdatedSuccessfully','Feature ''$'' Updated Successfully',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblFeatureUpdatedSuccessfully');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblBack','Back',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblBack');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblAddFeatureRelationship','Add Feature Relationship',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblAddFeatureRelationship');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblEditFeatureRelationship','Edit Feature Relationship',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblEditFeatureRelationship');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblToolTipTextDataAttrSetName','New Feature will auto create same as Data Attribute set name',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblToolTipTextDataAttrSetName');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lbl250CharMax','250 characters max',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lbl250CharMax');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblDuplicateDataAttributeSetName','Duplicate Data Attribute Set Name',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblDuplicateDataAttributeSetName');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblEnterDataAttributeSetName','Enter Data Attribute Set Name',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblEnterDataAttributeSetName');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblPleasenterdatattributesetname','Please enter data attribute set name',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblPleasenterdatattributesetname');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblDataAttributeSetcannotcontainonlywhitespace','Data Attribute Set cannot contain only whitespace',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblDataAttributeSetcannotcontainonlywhitespace');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblDataAttributeSetmaxlength','Max length should be 250',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblDataAttributeSetmaxlength');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblSpecialcharactersnotallowed','Special characters not allowed',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblSpecialcharactersnotallowed');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblDataAttributeSetalreadyexistsPleasechooseadifferentisAttributeSet','Data Attribute Set already exists. Please choose a different.',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblDataAttributeSetalreadyexistsPleasechooseadifferentisAttributeSet');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblDataAttributeDescription','Data Attribute Description',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblDataAttributeDescription');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lbl100CharMax','100 characters max',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lbl100CharMax');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblEnterDataAttributeDescription','Enter Data Attribute Description',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblEnterDataAttributeDescription');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblDataAttributeDescriptioncannotcontainonlywhitespace','Data Attribute Description cannot contain only whitespace',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblDataAttributeDescriptioncannotcontainonlywhitespace');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblExclusive','Exclusive',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblExclusive');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblInclusive','Inclusive',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblInclusive');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblFeatureHintMessage','You can select multiple ''Data Attributes'' from below list to map with this Feature Relationship',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblFeatureHintMessage');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblEditFeatureHintMessage','You can select multiple ''Data Attributes'' from below list to map with this Feature Relationship',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblEditFeatureHintMessage');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblReset','Reset',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblReset');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblCreate','Create',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblCreate');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblConfirm','Confirm',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblConfirm');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblSelectedDataAttribute','Selected Data Attribute',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblSelectedDataAttribute');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblSelectDataAttribute','Select Data Attribute',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblSelectDataAttribute');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblDataAttribute','Data Attribute',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblDataAttribute');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblExclude','Exclude',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblExclude');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblInclude','Include',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblInclude');



INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblDeactivate','Deactivate',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblDeactivate');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblActivate','Activate',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblActivate');

INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblFeatureManagement',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblFeatureManagement' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblAlert',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblAlert' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblYouwanttoDetails',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblYouwanttoDetails' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblNo',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblNo' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblYes',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblYes' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblDelete',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblDelete' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblAreyousureyouwanttodelete',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblAreyousureyouwanttodelete' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblCancel',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblCancel' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblFeatureRelationshipwassuccessfullydeleted',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblFeatureRelationshipwassuccessfullydeleted' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblDataAttributeFeatures',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblDataAttributeFeatures' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblSearch',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblSearch' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblNewFeature',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblNewFeature' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblNoRecordFound',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblNoRecordFound' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblDataAttributeSetName',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblDataAttributeSetName' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblNew',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblNew' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblDataAttributeSetType',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblDataAttributeSetType' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblStatus',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblStatus' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblActive',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblActive' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblInActive',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblInActive' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblAction',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblAction' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblView',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblView' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblEdit',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblEdit' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblHome',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblHome' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblAdmin',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblAdmin' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblViewFeatureRelationship',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblViewFeatureRelationship' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblFeatureRelationshipDetails',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblFeatureRelationshipDetails' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblNewFeatureCreatedSuccessfully',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblNewFeatureCreatedSuccessfully' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblFeatureUpdatedSuccessfully',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblFeatureUpdatedSuccessfully' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblBack',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblBack' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblAddFeatureRelationship',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblAddFeatureRelationship' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblEditFeatureRelationship',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblEditFeatureRelationship' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblToolTipTextDataAttrSetName',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblToolTipTextDataAttrSetName' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lbl250CharMax',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lbl250CharMax' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblDuplicateDataAttributeSetName',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblDuplicateDataAttributeSetName' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblEnterDataAttributeSetName',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblEnterDataAttributeSetName' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblPleasenterdatattributesetname',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblPleasenterdatattributesetname' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblDataAttributeSetcannotcontainonlywhitespace',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblDataAttributeSetcannotcontainonlywhitespace' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblDataAttributeSetmaxlength',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblDataAttributeSetmaxlength' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblSpecialcharactersnotallowed',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblSpecialcharactersnotallowed' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblDataAttributeSetalreadyexistsPleasechooseadifferentisAttributeSet',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblDataAttributeSetalreadyexistsPleasechooseadifferentisAttributeSet' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblDataAttributeDescription',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblDataAttributeDescription' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lbl100CharMax',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lbl100CharMax' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblEnterDataAttributeDescription',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblEnterDataAttributeDescription' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblDataAttributeDescriptioncannotcontainonlywhitespace',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblDataAttributeDescriptioncannotcontainonlywhitespace' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblExclusive',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblExclusive' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblInclusive',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblInclusive' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblFeatureHintMessage',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblFeatureHintMessage' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblEditFeatureHintMessage',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblEditFeatureHintMessage' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblReset',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblReset' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblCreate',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblCreate' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblConfirm',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblConfirm' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblSelectedDataAttribute',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblSelectedDataAttribute' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblSelectDataAttribute',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblSelectDataAttribute' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblDataAttribute',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblDataAttribute' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblExclude',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblExclude' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblInclude',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblInclude' and ref_id=(select id from master.menu where name = 'Feature Management'));



INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblDeactivate',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblDeactivate' and ref_id=(select id from master.menu where name = 'Feature Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblActivate',(select id from master.menu where name = 'Feature Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblActivate' and ref_id=(select id from master.menu where name = 'Feature Management'));


update translation.translation set value='Account Group Management' where lower(code)=lower('EN-GB') and name='lblAccountGroupManagement';
update translation.translation set value='Are you sure you want to delete ''$'' account group?' where lower(code)=lower('EN-GB') and name='lblAreyousureyouwanttodeleteusergroup';
update translation.translation set value='New Account Group Name' where lower(code)=lower('EN-GB') and name='lblNewUserGroupName';
update translation.translation set value='Account Group ''$'' was successfully deleted' where lower(code)=lower('EN-GB') and name='lblUserGroupDelete';
update translation.translation set value='Account Name' where lower(code)=lower('EN-GB') and name='lblUserName';
update translation.translation set value='Account Role' where lower(code)=lower('EN-GB') and name='lblUserRole';
update translation.translation set value='Accounts' where lower(code)=lower('EN-GB') and name='lblUsers';
update translation.translation set value='New Account Group' where lower(code)=lower('EN-GB') and name='lblNewUserGroup';
update translation.translation set value='Account Group ''$'' Created Successfully' where lower(code)=lower('EN-GB') and name='lblUserGroupCreatedSuccessfully';
update translation.translation set value='Account Group ''$'' Updated Successfully' where lower(code)=lower('EN-GB') and name='lblUserGroupUpdatedSuccessfully';
update translation.translation set value='Add New Account Group' where lower(code)=lower('EN-GB') and name='lblAddNewUserGroup';
update translation.translation set value='Edit Account Group' where lower(code)=lower('EN-GB') and name='lblEditUserGroup';
update translation.translation set value='View Account Group' where lower(code)=lower('EN-GB') and name='lblViewUserGroup';
update translation.translation set value='Account Group Name' where lower(code)=lower('EN-GB') and name='lblUserGroupName';
update translation.translation set value='Enter New Account Group Name' where lower(code)=lower('EN-GB') and name='lblEnterNewUserGroupName';
update translation.translation set value='Account Group Name cannot contain only whitespace' where lower(code)=lower('EN-GB') and name='lblUserGroupNamecannotcontainonlywhitespace';
update translation.translation set value='Duplicate Account Group Name' where lower(code)=lower('EN-GB') and name='lblDuplicateUserGroupName';
update translation.translation set value='Account Group Description (Optional)' where lower(code)=lower('EN-GB') and name='lblUserGroupDescriptionOptional';
update translation.translation set value='Account Group Description cannot contain only whitespace' where lower(code)=lower('EN-GB') and name='lblUserGroupDescriptioncannotcontainonlywhitespace';
update translation.translation set value='You can select Account from below list to map with this Account Group' where lower(code)=lower('EN-GB') and name='lblUserGroupManagementInfo';
update translation.translation set value='Selected Account' where lower(code)=lower('EN-GB') and name='lblSelectedUser';
update translation.translation set value='Select Account' where lower(code)=lower('EN-GB') and name='lblSelectUser';
update translation.translation set value='Account Group' where lower(code)=lower('EN-GB') and name='lblUserGroup';



update translation.translation set value='Please enter new Account Group name' where lower(code)=lower('EN-GB') and name='lblErrorUserGroupName';
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblAccountGroupManagement','Account Group Management',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblAccountGroupManagement');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblAreyousureyouwanttodeleteusergroup','Are you sure you want to delete ''$'' account group?',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblAreyousureyouwanttodeleteusergroup');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblNewUserGroupName','New Account Group Name',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblNewUserGroupName');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblUserGroupDelete','Account Group ''$'' was successfully deleted',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblUserGroupDelete');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblUserName','Account Name',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblUserName');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblUserRole','Account Role',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblUserRole');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblUsers','Accounts',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblUsers');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblNewUserGroup','New Account Group',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblNewUserGroup');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblUserGroupCreatedSuccessfully','Account Group ''$'' Created Successfully',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblUserGroupCreatedSuccessfully');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblUserGroupUpdatedSuccessfully','Account Group ''$'' Updated Successfully',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblUserGroupUpdatedSuccessfully');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblAddNewUserGroup','Add New Account Group',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblAddNewUserGroup');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblEditUserGroup','Edit Account Group',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblEditUserGroup');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblViewUserGroup','View Account Group',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblViewUserGroup');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblUserGroupName','Account Group Name',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblUserGroupName');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblEnterNewUserGroupName','Enter New Account Group Name',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblEnterNewUserGroupName');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblUserGroupNamecannotcontainonlywhitespace','Account Group Name cannot contain only whitespace',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblUserGroupNamecannotcontainonlywhitespace');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblDuplicateUserGroupName','Duplicate Account Group Name',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblDuplicateUserGroupName');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblUserGroupDescriptionOptional','Account Group Description (Optional)',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblUserGroupDescriptionOptional');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblUserGroupDescriptioncannotcontainonlywhitespace','Account Group Description cannot contain only whitespace',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblUserGroupDescriptioncannotcontainonlywhitespace');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblUserGroupManagementInfo','You can select Account from below list to map with this Account Group',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblUserGroupManagementInfo');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblSelectedUser','Selected Account',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblSelectedUser');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblSelectUser','Select Account',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblSelectUser');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblUserGroup','Account Group',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblUserGroup');



INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblErrorUserGroupName','Please enter new Account Group name',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblErrorUserGroupName');
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblAccountGroupManagement',(select id from master.menu where name = 'Account Group Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblAccountGroupManagement' and ref_id=(select id from master.menu where name = 'Account Group Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblAreyousureyouwanttodeleteusergroup',(select id from master.menu where name = 'Account Group Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblAreyousureyouwanttodeleteusergroup' and ref_id=(select id from master.menu where name = 'Account Group Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblNewUserGroupName',(select id from master.menu where name = 'Account Group Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblNewUserGroupName' and ref_id=(select id from master.menu where name = 'Account Group Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblUserGroupDelete',(select id from master.menu where name = 'Account Group Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblUserGroupDelete' and ref_id=(select id from master.menu where name = 'Account Group Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblUserName',(select id from master.menu where name = 'Account Group Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblUserName' and ref_id=(select id from master.menu where name = 'Account Group Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblUserRole',(select id from master.menu where name = 'Account Group Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblUserRole' and ref_id=(select id from master.menu where name = 'Account Group Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblUsers',(select id from master.menu where name = 'Account Group Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblUsers' and ref_id=(select id from master.menu where name = 'Account Group Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblNewUserGroup',(select id from master.menu where name = 'Account Group Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblNewUserGroup' and ref_id=(select id from master.menu where name = 'Account Group Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblUserGroupCreatedSuccessfully',(select id from master.menu where name = 'Account Group Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblUserGroupCreatedSuccessfully' and ref_id=(select id from master.menu where name = 'Account Group Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblUserGroupUpdatedSuccessfully',(select id from master.menu where name = 'Account Group Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblUserGroupUpdatedSuccessfully' and ref_id=(select id from master.menu where name = 'Account Group Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblAddNewUserGroup',(select id from master.menu where name = 'Account Group Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblAddNewUserGroup' and ref_id=(select id from master.menu where name = 'Account Group Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblEditUserGroup',(select id from master.menu where name = 'Account Group Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblEditUserGroup' and ref_id=(select id from master.menu where name = 'Account Group Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblViewUserGroup',(select id from master.menu where name = 'Account Group Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblViewUserGroup' and ref_id=(select id from master.menu where name = 'Account Group Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblUserGroupName',(select id from master.menu where name = 'Account Group Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblUserGroupName' and ref_id=(select id from master.menu where name = 'Account Group Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblEnterNewUserGroupName',(select id from master.menu where name = 'Account Group Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblEnterNewUserGroupName' and ref_id=(select id from master.menu where name = 'Account Group Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblUserGroupNamecannotcontainonlywhitespace',(select id from master.menu where name = 'Account Group Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblUserGroupNamecannotcontainonlywhitespace' and ref_id=(select id from master.menu where name = 'Account Group Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblDuplicateUserGroupName',(select id from master.menu where name = 'Account Group Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblDuplicateUserGroupName' and ref_id=(select id from master.menu where name = 'Account Group Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblUserGroupDescriptionOptional',(select id from master.menu where name = 'Account Group Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblUserGroupDescriptionOptional' and ref_id=(select id from master.menu where name = 'Account Group Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblUserGroupDescriptioncannotcontainonlywhitespace',(select id from master.menu where name = 'Account Group Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblUserGroupDescriptioncannotcontainonlywhitespace' and ref_id=(select id from master.menu where name = 'Account Group Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblUserGroupManagementInfo',(select id from master.menu where name = 'Account Group Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblUserGroupManagementInfo' and ref_id=(select id from master.menu where name = 'Account Group Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblSelectedUser',(select id from master.menu where name = 'Account Group Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblSelectedUser' and ref_id=(select id from master.menu where name = 'Account Group Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblSelectUser',(select id from master.menu where name = 'Account Group Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblSelectUser' and ref_id=(select id from master.menu where name = 'Account Group Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblUserGroup',(select id from master.menu where name = 'Account Group Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblUserGroup' and ref_id=(select id from master.menu where name = 'Account Group Management'));



INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblErrorUserGroupName',(select id from master.menu where name = 'Account Group Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblErrorUserGroupName' and ref_id=(select id from master.menu where name = 'Account Group Management'));
update translation.translation set value='Access Relationship Management' where lower(code)=lower('EN-GB') and name='lblAccessRelationshipManagement';
update translation.translation set value='Delete' where lower(code)=lower('EN-GB') and name='lblDelete';
update translation.translation set value='Are you sure you want to delete ''$'' Association Relationship?' where lower(code)=lower('EN-GB') and name='lblAreyousureyouwanttodeleteAssociationRelationship';
update translation.translation set value='Cancel' where lower(code)=lower('EN-GB') and name='lblCancel';
update translation.translation set value='Association Relationship ''$'' was successfully deleted' where lower(code)=lower('EN-GB') and name='lblAssociationRelationshipwassuccessfullydeleted';
update translation.translation set value='Account Name' where lower(code)=lower('EN-GB') and name='lblUserName';
update translation.translation set value='Email ID' where lower(code)=lower('EN-GB') and name='lblEmailID';
update translation.translation set value='Account Role' where lower(code)=lower('EN-GB') and name='lblUserRole';
update translation.translation set value='Accounts' where lower(code)=lower('EN-GB') and name='lblUsers';
update translation.translation set value='Vehicle Name' where lower(code)=lower('EN-GB') and name='lblVehicleName';
update translation.translation set value='VIN' where lower(code)=lower('EN-GB') and name='lblVIN';
update translation.translation set value='Registration Number' where lower(code)=lower('EN-GB') and name='lblRegistrationNumber';
update translation.translation set value='Vehicles' where lower(code)=lower('EN-GB') and name='lblVehicles';
update translation.translation set value='All Access Relationship Details' where lower(code)=lower('EN-GB') and name='lblAllAccessRelationshipDetails';
update translation.translation set value='Search' where lower(code)=lower('EN-GB') and name='lblSearch';
update translation.translation set value='View list by' where lower(code)=lower('EN-GB') and name='lblViewlistby';
update translation.translation set value='Group' where lower(code)=lower('EN-GB') and name='lblGroup';
update translation.translation set value='Vehicle' where lower(code)=lower('EN-GB') and name='lblVehicle';
update translation.translation set value='Both' where lower(code)=lower('EN-GB') and name='lblBoth';
update translation.translation set value='Account' where lower(code)=lower('EN-GB') and name='lblAccount';
update translation.translation set value='View first column by' where lower(code)=lower('EN-GB') and name='lblViewfirstcolumnby';
update translation.translation set value='New Association' where lower(code)=lower('EN-GB') and name='lblNewAssociation';
update translation.translation set value='No Record Found' where lower(code)=lower('EN-GB') and name='lblNoRecordFound';
update translation.translation set value='Full Access' where lower(code)=lower('EN-GB') and name='lblFullAccess';
update translation.translation set value='View' where lower(code)=lower('EN-GB') and name='lblView';
update translation.translation set value='Edit' where lower(code)=lower('EN-GB') and name='lblEdit';
update translation.translation set value='Home' where lower(code)=lower('EN-GB') and name='lblHome';
update translation.translation set value='Admin' where lower(code)=lower('EN-GB') and name='lblAdmin';
update translation.translation set value='View Vehicle Association Details' where lower(code)=lower('EN-GB') and name='lblViewVehicleAssociationDetails';
update translation.translation set value='Edit Vehicle Association Details' where lower(code)=lower('EN-GB') and name='lblEditVehicleAssociationDetails';
update translation.translation set value='''$'' Access Relationship created successfully' where lower(code)=lower('EN-GB') and name='lblAccessRelationshipcreatedsuccessfully';
update translation.translation set value='''$'' Access Relationship updated successfully' where lower(code)=lower('EN-GB') and name='lblAccessRelationshipupdatedsuccessfully';
update translation.translation set value='View Only' where lower(code)=lower('EN-GB') and name='lblViewOnly';
update translation.translation set value='Back' where lower(code)=lower('EN-GB') and name='lblBack';
update translation.translation set value='Add New Association' where lower(code)=lower('EN-GB') and name='lblAddNewAssociation';
update translation.translation set value='Edit Association' where lower(code)=lower('EN-GB') and name='lblEditAssociation';
update translation.translation set value='View Association' where lower(code)=lower('EN-GB') and name='lblViewAssociation';
update translation.translation set value='Vehicle Group/Vehicle' where lower(code)=lower('EN-GB') and name='lblVehicleGroupVehicle';
update translation.translation set value='Select Vehicle Group/Vehicle' where lower(code)=lower('EN-GB') and name='lblSelectVehicleGroupVehicle';
update translation.translation set value='Please Select Vehicle Group/Vehicle' where lower(code)=lower('EN-GB') and name='lblPleaseSelectVehicleGroupVehicle';
update translation.translation set value='Access Type' where lower(code)=lower('EN-GB') and name='lblAccessType';
update translation.translation set value='Select Access Type' where lower(code)=lower('EN-GB') and name='lblSelectAccessType';
update translation.translation set value='Please Select Access Type' where lower(code)=lower('EN-GB') and name='lblPleaseSelectAccessType';
update translation.translation set value='You can select multiple Account Group/Account from below list to map with selected Vehicle Group/Vehicle list' where lower(code)=lower('EN-GB') and name='lblVehicleAccessRelationCreateHintMessage';
update translation.translation set value='Select Account Group/Account' where lower(code)=lower('EN-GB') and name='lblSelectAccountGroupAccount';
update translation.translation set value='All' where lower(code)=lower('EN-GB') and name='lblAll';
update translation.translation set value='Account Group/Account' where lower(code)=lower('EN-GB') and name='lblAccountGroupAccount';
update translation.translation set value='Reset' where lower(code)=lower('EN-GB') and name='lblReset';
update translation.translation set value='Confirm' where lower(code)=lower('EN-GB') and name='lblConfirm';
update translation.translation set value='View Account Association Details' where lower(code)=lower('EN-GB') and name='lblViewAccountAssociationDetails';
update translation.translation set value='Edit Account Association Details' where lower(code)=lower('EN-GB') and name='lblEditAccountAssociationDetails';
update translation.translation set value='Please Select Account Group/Account' where lower(code)=lower('EN-GB') and name='lblPleaseSelectAccountGroupAccount';
update translation.translation set value='You can select multiple Vehicle Group/Vehicle from below list to map with selected Account Group/Account list' where lower(code)=lower('EN-GB') and name='lblAccountAccessRelationCreateHintMessage';


update translation.translation set value='View association by' where lower(code)=lower('EN-GB') and name='lblViewassociationby';
update translation.translation set value='Create Association By' where lower(code)=lower('EN-GB') and name='lblCreateAssociationBy';
update translation.translation set value='Select Association Type' where lower(code)=lower('EN-GB') and name='lblSelectAssociationType';
update translation.translation set value='Please Select Association Type' where lower(code)=lower('EN-GB') and name='lblPleaseSelectAssociationType';
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblAccessRelationshipManagement','Access Relationship Management',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblAccessRelationshipManagement');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblDelete','Delete',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblDelete');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblAreyousureyouwanttodeleteAssociationRelationship','Are you sure you want to delete ''$'' Association Relationship?',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblAreyousureyouwanttodeleteAssociationRelationship');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblCancel','Cancel',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblCancel');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblAssociationRelationshipwassuccessfullydeleted','Association Relationship ''$'' was successfully deleted',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblAssociationRelationshipwassuccessfullydeleted');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblUserName','Account Name',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblUserName');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblEmailID','Email ID',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblEmailID');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblUserRole','Account Role',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblUserRole');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblUsers','Accounts',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblUsers');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblVehicleName','Vehicle Name',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblVehicleName');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblVIN','VIN',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblVIN');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblRegistrationNumber','Registration Number',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblRegistrationNumber');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblVehicles','Vehicles',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblVehicles');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblAllAccessRelationshipDetails','All Access Relationship Details',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblAllAccessRelationshipDetails');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblSearch','Search',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblSearch');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblViewlistby','View list by',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblViewlistby');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblGroup','Group',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblGroup');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblVehicle','Vehicle',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblVehicle');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblBoth','Both',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblBoth');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblAccount','Account',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblAccount');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblViewfirstcolumnby','View first column by',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblViewfirstcolumnby');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblNewAssociation','New Association',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblNewAssociation');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblNoRecordFound','No Record Found',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblNoRecordFound');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblFullAccess','Full Access',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblFullAccess');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblView','View',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblView');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblEdit','Edit',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblEdit');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblHome','Home',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblHome');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblAdmin','Admin',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblAdmin');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblViewVehicleAssociationDetails','View Vehicle Association Details',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblViewVehicleAssociationDetails');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblEditVehicleAssociationDetails','Edit Vehicle Association Details',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblEditVehicleAssociationDetails');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblAccessRelationshipcreatedsuccessfully','''$'' Access Relationship created successfully',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblAccessRelationshipcreatedsuccessfully');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblAccessRelationshipupdatedsuccessfully','''$'' Access Relationship updated successfully',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblAccessRelationshipupdatedsuccessfully');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblViewOnly','View Only',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblViewOnly');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblBack','Back',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblBack');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblAddNewAssociation','Add New Association',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblAddNewAssociation');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblEditAssociation','Edit Association',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblEditAssociation');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblViewAssociation','View Association',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblViewAssociation');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblVehicleGroupVehicle','Vehicle Group/Vehicle',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblVehicleGroupVehicle');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblSelectVehicleGroupVehicle','Select Vehicle Group/Vehicle',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblSelectVehicleGroupVehicle');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblPleaseSelectVehicleGroupVehicle','Please Select Vehicle Group/Vehicle',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblPleaseSelectVehicleGroupVehicle');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblAccessType','Access Type',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblAccessType');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblSelectAccessType','Select Access Type',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblSelectAccessType');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblPleaseSelectAccessType','Please Select Access Type',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblPleaseSelectAccessType');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblVehicleAccessRelationCreateHintMessage','You can select multiple Account Group/Account from below list to map with selected Vehicle Group/Vehicle list',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblVehicleAccessRelationCreateHintMessage');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblSelectAccountGroupAccount','Select Account Group/Account',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblSelectAccountGroupAccount');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblAll','All',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblAll');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblAccountGroupAccount','Account Group/Account',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblAccountGroupAccount');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblReset','Reset',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblReset');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblConfirm','Confirm',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblConfirm');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblViewAccountAssociationDetails','View Account Association Details',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblViewAccountAssociationDetails');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblEditAccountAssociationDetails','Edit Account Association Details',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblEditAccountAssociationDetails');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblPleaseSelectAccountGroupAccount','Please Select Account Group/Account',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblPleaseSelectAccountGroupAccount');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblAccountAccessRelationCreateHintMessage','You can select multiple Vehicle Group/Vehicle from below list to map with selected Account Group/Account list',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblAccountAccessRelationCreateHintMessage');


INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblViewassociationby','View association by',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblViewassociationby');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblCreateAssociationBy','Create Association By',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblCreateAssociationBy');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblSelectAssociationType','Select Association Type',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblSelectAssociationType');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblPleaseSelectAssociationType','Please Select Association Type',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblPleaseSelectAssociationType');
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblAccessRelationshipManagement',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblAccessRelationshipManagement' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblDelete',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblDelete' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblAreyousureyouwanttodeleteAssociationRelationship',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblAreyousureyouwanttodeleteAssociationRelationship' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblCancel',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblCancel' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblAssociationRelationshipwassuccessfullydeleted',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblAssociationRelationshipwassuccessfullydeleted' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblUserName',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblUserName' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblEmailID',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblEmailID' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblUserRole',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblUserRole' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblUsers',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblUsers' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblVehicleName',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblVehicleName' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblVIN',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblVIN' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblRegistrationNumber',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblRegistrationNumber' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblVehicles',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblVehicles' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblAllAccessRelationshipDetails',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblAllAccessRelationshipDetails' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblSearch',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblSearch' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblViewlistby',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblViewlistby' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblGroup',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblGroup' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblVehicle',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblVehicle' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblBoth',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblBoth' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblAccount',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblAccount' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblViewfirstcolumnby',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblViewfirstcolumnby' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblNewAssociation',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblNewAssociation' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblNoRecordFound',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblNoRecordFound' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblFullAccess',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblFullAccess' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblView',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblView' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblEdit',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblEdit' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblHome',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblHome' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblAdmin',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblAdmin' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblViewVehicleAssociationDetails',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblViewVehicleAssociationDetails' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblEditVehicleAssociationDetails',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblEditVehicleAssociationDetails' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblAccessRelationshipcreatedsuccessfully',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblAccessRelationshipcreatedsuccessfully' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblAccessRelationshipupdatedsuccessfully',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblAccessRelationshipupdatedsuccessfully' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblViewOnly',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblViewOnly' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblBack',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblBack' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblAddNewAssociation',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblAddNewAssociation' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblEditAssociation',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblEditAssociation' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblViewAssociation',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblViewAssociation' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblVehicleGroupVehicle',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblVehicleGroupVehicle' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblSelectVehicleGroupVehicle',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblSelectVehicleGroupVehicle' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblPleaseSelectVehicleGroupVehicle',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblPleaseSelectVehicleGroupVehicle' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblAccessType',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblAccessType' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblSelectAccessType',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblSelectAccessType' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblPleaseSelectAccessType',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblPleaseSelectAccessType' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblVehicleAccessRelationCreateHintMessage',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblVehicleAccessRelationCreateHintMessage' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblSelectAccountGroupAccount',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblSelectAccountGroupAccount' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblAll',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblAll' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblAccountGroupAccount',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblAccountGroupAccount' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblReset',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblReset' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblConfirm',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblConfirm' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblViewAccountAssociationDetails',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblViewAccountAssociationDetails' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblEditAccountAssociationDetails',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblEditAccountAssociationDetails' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblPleaseSelectAccountGroupAccount',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblPleaseSelectAccountGroupAccount' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblAccountAccessRelationCreateHintMessage',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblAccountAccessRelationCreateHintMessage' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));


INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblViewassociationby',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblViewassociationby' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblCreateAssociationBy',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblCreateAssociationBy' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblSelectAssociationType',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblSelectAssociationType' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblPleaseSelectAssociationType',(select id from master.menu where name = 'Access Relationship Management'),'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblPleaseSelectAssociationType' and ref_id=(select id from master.menu where name = 'Access Relationship Management'));

update translation.translation set value='DAF Connect - Terms & Conditions' where lower(code)=lower('EN-GB') and name='lblTermsAndConditions';
update translation.translation set value='Disagree' where lower(code)=lower('EN-GB') and name='lblDisagree';
update translation.translation set value='I Agree' where lower(code)=lower('EN-GB') and name='lblIAgree';

INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblTermsAndConditions','DAF Connect - Terms & Conditions',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblTermsAndConditions');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblDisagree','Disagree',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblDisagree');
INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   SELECT 'EN-GB','L','lblIAgree','I Agree',(select extract(epoch from now()) * 1000),null WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblIAgree');

INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblTermsAndConditions',0,'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblTermsAndConditions' and ref_id=0);
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblDisagree',0,'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblDisagree' and ref_id=0);
INSERT INTO translation.translationgrouping  (name ,       ref_id ,      type)   SELECT 'lblIAgree',0,'M' WHERE NOT EXISTS  (   SELECT 1   FROM translation.translationgrouping  WHERE name = 'lblIAgree' and ref_id=0);

WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'dlanguage_Bulgarian' name1,'български' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'dlanguage_Czech' name1,'Český' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'dlanguage_Danish' name1,'dansk' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'dlanguage_German' name1,'Deutsch' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'dlanguage_Spanish' name1,'Español' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'dlanguage_Estonian' name1,'eesti keel' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'dlanguage_UK English' name1,'English' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'dlanguage_Finnish' name1,'Suomen kieli' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'dlanguage_French' name1,'Français' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'dlanguage_Croatian' name1,'hrvatski' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'dlanguage_Hungarian' name1,'Magyar' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'dlanguage_Italian' name1,'Italiano' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'dlanguage_Lithuanian' name1,'Lietuvių kalba' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'dlanguage_Latvian' name1,'Latviešu valoda' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'dlanguage_Norwegian' name1,'Malti' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'dlanguage_Dutch' name1,'Nederlands' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'dlanguage_Polish' name1,'Polski' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'dlanguage_Portuguese' name1,'Português' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'dlanguage_Romanian' name1,'Română' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'dlanguage_Slovak' name1,'Slovenčina' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'dlanguage_Slovenian' name1,'Slovenščina' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'dlanguage_Swedish' name1,'Svenska' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'dlanguage_Turkish' name1,'türk' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'dcurrency_Euro' name1,'Euro (â‚¬)' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'dcurrency_USDollar' name1,'US dollar ($)' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'dcurrency_PoundSterling' name1,'Pound Sterling (Â£)' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'dtimezone_Europe/Dublin' name1,'Europe/Dublin' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'dtimezone_Europe/Brussels' name1,'Europe/Brussels' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'dtimezone_Europe/Luxembourg' name1,'Europe/Luxembourg' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'dtimezone_Asia/India' name1,'Asia/India' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'dtimezone_Europe/Athens' name1,'Europe/Athens' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'dtimezone_Europe/Saratov' name1,'Europe/Saratov' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'dtimezone_Europe/Amsterdam' name1,'Europe/Amsterdam' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'dtimezone_Europe/Moscow' name1,'Europe/Moscow' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'dunit_Metric' name1,'Metrisch' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'dunit_Imperial' name1,'Engelse eenheden' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'dunit_USImperial' name1,'US Imperial' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'ddateformat_dd/mm/yyyy' name1,'dd/mm/jjjj' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'ddateformat_mm/dd/yyyy' name1,'mm/dd/jjjj' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'ddateformat_dd-mm-yyyy' name1,'dd-mm-jjjj' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'ddateformat_mm-dd-yyyy' name1,'mm-dd-jjjj' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'dvehicledisplay_Name' name1,'Naam' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'dvehicledisplay_VehicleRegistrationNumber' name1,'Kenteken' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'dvehicledisplay_VehicleIdentificationNumber' name1,'Voertuigidentificatienummer' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'dlandingpagedisplay_Dashboard' name1,'Dashboard' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'dlandingpagedisplay_UserManagement' name1,'Gebruikersbeheer' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'dlandingpagedisplay_TripReport' name1,'Ritrapport' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'lblDriverManagement' name1,'Chauffeursbeheer' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'lblImportNewDrivers' name1,'Nieuwe chauffeurs importeren' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'lblDownloadaTemplate' name1,'Sjabloon downloaden' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'lblImportDrivers' name1,'Chauffeur(s) importeren' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'lblDrivers' name1,'Chauffeurs' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'lblSearch' name1,'Zoeken' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'lblDriverID' name1,'Chauffeurs-ID' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'lblDriverName' name1,'Chauffeursnaam' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'lblEmailID' name1,'E-mail' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'lblAction' name1,'Actie' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'lblOptIn' name1,'Opt-in' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'lblOptOut' name1,'Opt-out' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'lblNew' name1,'Nieuw' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'lblDelete' name1,'Wissen' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'lblEdit' name1,'Bewerken' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'lblCancel' name1,'Annuleren' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'lblConfirm' name1,'Akkoord' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'lblReset' name1,'Reset' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'lblSave' name1,'Opslaan' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'lblEditDetails' name1,'Bewerken' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'lblAdmin' name1,'Admin' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'lblRole' name1,'Rol' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'lblUserGroup' name1,'Gebruikersgroep' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'lblDriverIDConsent' name1,'Chauffeurs-ID-toestemming' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'lblName' name1,'Naam' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'lblCurrentConsentStatusForSubscriber' name1,'Huidige toestemmingsstatus voor' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'lblClose' name1,'Sluiten' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'lblSalutationCivility' name1,'Aanhef' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'lblFirstName' name1,'Voornaam' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'lblLastName' name1,'Achternaam' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'lblBirthDate' name1,'Geboortedatum' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'lblLanguage' name1,'Taal' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'lblTimeZone' name1,'Tijdzone' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'lblCurrency' name1,'Valuta' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'lblForgotPassword' name1,'Wachtwoord vergeten' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'lblSelectRole' name1,'Rol selecteren' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'lblNotifications' name1,'Meldingen' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'lblDashboard' name1,'Dashboard' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'lblReport' name1,'Rapport' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'lblTripReport' name1,'Ritrapport' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'lblTripTracing' name1,'Rittracering' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'lblConfiguration' name1,'Configuratie' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'lblAlerts' name1,'Waarschuwingen' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'lblLandmarks' name1,'Oriëntatiepunten' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'lblNReportSchedule' name1,'Rapportschema' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'lblUserGroupManagement' name1,'Beheer gebruikersgroepen' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'lblUserManagement' name1,'Gebruikersbeheer' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'lblFilter' name1,'Filter' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'lblNo' name1,'Nee' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'lblYes' name1,'Ja' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'lblBack' name1,'Terug' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'lblRoleName' name1,'Rolnaam' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'lblServiceSubscriberDetails' name1,'Gegevens serviceabonnee' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'lblVehicleGroup' name1,'Voertuiggroep' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'lblVehicle' name1,'Voertuig' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'lblUsers' name1,'Gebruikers' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'lblVehicleName' name1,'Voertuignaam' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'lblVIN' name1,'VIN' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'lblRegistrationNumber' name1,'Kenteken' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'lblNewUserGroup' name1,'Nieuwe gebruikersgroep' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'lblGroupName' name1,'Groepnaam' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'lblVehicles' name1,'Voertuigen' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'lblNext' name1,'Vooruit' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'lblPrevious' name1,'Vorig' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'lblAll' name1,'Alle' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'lblServices' name1,'Services' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'lblServicesName' name1,'Naam' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'lblType' name1,'Type' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'lblStep' name1,'Stap' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'lblSummary' name1,'Overzicht' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'lblGroup' name1,'Groep' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'lblReset:' name1,'Reset' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'lblUpdate' name1,'Update' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'lblNewUser' name1,'Nieuwe gebruiker' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'lblAddNewUser' name1,'Nieuwe gebruiker toevoegen' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'lblSelectUserGroup' name1,'Gebruikersgroep selecteren' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'lblAccountInformation' name1,'Accountgegevens' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'lblSalutation' name1,'Aanhef' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'lblLoginEmail' name1,'Aanmeld e-mailadres' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'lblUnit' name1,'Eenheid' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'lblDateFormat' name1,'Datumnotatie' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'lblVehicleDisplayDefault' name1,'Voertuigdisplay (standaard)' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'lblUserRoles' name1,'Gebruikersrollen' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'lblUserDetails' name1,'Gebruikersgegevens' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'lblPreferences' name1,'Voorkeuren' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'lblChangePassword' name1,'Wachtwoord wijzigen' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'lblNewPassword' name1,'Nieuw wachtwoord' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'lblModel' name1,'Model' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'lblDetails' name1,'Details' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('NL-NL')) code1, 'lblVehicleIdentificationNumber' name1,'Voertuigidentificatienummer' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;

WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'dlanguage_Bulgarian' name1,'български' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'dlanguage_Czech' name1,'Český' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'dlanguage_Danish' name1,'dansk' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'dlanguage_German' name1,'Deutsch' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'dlanguage_Spanish' name1,'Español' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'dlanguage_Estonian' name1,'eesti keel' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'dlanguage_UK English' name1,'English' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'dlanguage_Finnish' name1,'Suomen kieli' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'dlanguage_French' name1,'Français' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'dlanguage_Croatian' name1,'hrvatski' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'dlanguage_Hungarian' name1,'Magyar' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'dlanguage_Italian' name1,'Italiano' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'dlanguage_Lithuanian' name1,'Lietuvių kalba' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'dlanguage_Latvian' name1,'Latviešu valoda' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'dlanguage_Norwegian' name1,'Malti' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'dlanguage_Dutch' name1,'Nederlands' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'dlanguage_Polish' name1,'Polski' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'dlanguage_Portuguese' name1,'Português' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'dlanguage_Romanian' name1,'Română' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'dlanguage_Slovak' name1,'Slovenčina' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'dlanguage_Slovenian' name1,'Slovenščina' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'dlanguage_Swedish' name1,'Svenska' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'dlanguage_Turkish' name1,'türk' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'dcurrency_Euro' name1,'Euro (â‚¬)' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'dcurrency_USDollar' name1,'Dollar US ($)' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'dcurrency_PoundSterling' name1,'Pound Sterling (Â£)' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'dtimezone_Europe/Dublin' name1,'Europe/Dublin' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'dtimezone_Europe/Brussels' name1,'Europe/Brussels' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'dtimezone_Europe/Luxembourg' name1,'Europe/Luxembourg' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'dtimezone_Asia/India' name1,'Asia/India' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'dtimezone_Europe/Athens' name1,'Europe/Athens' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'dtimezone_Europe/Saratov' name1,'Europe/Saratov' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'dtimezone_Europe/Amsterdam' name1,'Europe/Amsterdam' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'dtimezone_Europe/Moscow' name1,'Europe/Moscow' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'dunit_Metric' name1,'Métrique' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'dunit_Imperial' name1,'Impérial' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'dunit_USImperial' name1,'Impérial US' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'ddateformat_dd/mm/yyyy' name1,'jj/mm/aaaa' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'ddateformat_mm/dd/yyyy' name1,'mm/jj/aaaa' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'ddateformat_dd-mm-yyyy' name1,'jj-mm-aaaa' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'ddateformat_mm-dd-yyyy' name1,'mm-jj-aaaa' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'dvehicledisplay_Name' name1,'Nom' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'dvehicledisplay_VehicleRegistrationNumber' name1,'Immatriculation' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'dvehicledisplay_VehicleIdentificationNumber' name1,'Numéro d''identification du véhicule' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'dlandingpagedisplay_Dashboard' name1,'Tableau de bord' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'dlandingpagedisplay_UserManagement' name1,'Gestion des utilisateurs' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'dlandingpagedisplay_TripReport' name1,'Rapport de trajets' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'lblDriverManagement' name1,'Gestion des conducteurs' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'lblImportNewDrivers' name1,'Importer nv conducteurs' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'lblDownloadaTemplate' name1,'Télécharger un modèle' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'lblImportDrivers' name1,'Importer un ou des conducteurs' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'lblDrivers' name1,'Conducteurs' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'lblSearch' name1,'Rechercher' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'lblDriverID' name1,'ID du conducteur' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'lblDriverName' name1,'Nom du conducteur' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'lblEmailID' name1,'E-mail' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'lblAction' name1,'Action' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'lblOptIn' name1,'Adhérer' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'lblOptOut' name1,'Désinscrire' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'lblNew' name1,'Nouveau' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'lblDelete' name1,'Supprimer' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'lblEdit' name1,'Modifier' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'lblCancel' name1,'Annuler' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'lblConfirm' name1,'J’accepte' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'lblReset' name1,'Réinitialiser' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'lblSave' name1,'Enregistrer' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'lblEditDetails' name1,'Modifier' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'lblAdmin' name1,'Administration' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'lblRole' name1,'Rôle' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'lblUserGroup' name1,'Groupe d''utilisateurs' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'lblDriverIDConsent' name1,'Gestion ID conducteurs' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'lblName' name1,'Nom' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'lblCurrentConsentStatusForSubscriber' name1,'État actuel pour' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'lblClose' name1,'Fermer' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'lblSalutationCivility' name1,'Titre' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'lblFirstName' name1,'Prénom' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'lblLastName' name1,'Nom' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'lblBirthDate' name1,'Date de naissance' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'lblLanguage' name1,'Langue' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'lblTimeZone' name1,'Fuseau horaire' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'lblCurrency' name1,'Devise' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'lblForgotPassword' name1,'Mot de passe oublié' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'lblSelectRole' name1,'Sélectionner rôle' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'lblNotifications' name1,'Notifications' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'lblDashboard' name1,'Tableau de bord' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'lblReport' name1,'Rapport' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'lblTripReport' name1,'Rapport de trajets' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'lblTripTracing' name1,'Suivi des trajets (carte)' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'lblConfiguration' name1,'Configuration' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'lblAlerts' name1,'Alertes' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'lblLandmarks' name1,'Repères' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'lblNReportSchedule' name1,'Rapports programmés' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'lblUserGroupManagement' name1,'Gestion groupes d''utilisateurs' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'lblUserManagement' name1,'Gestion des utilisateurs' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'lblFilter' name1,'Filtre' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'lblNo' name1,'Non' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'lblYes' name1,'Oui' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'lblBack' name1,'Retour' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'lblRoleName' name1,'Nom de rôle' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'lblServiceSubscriberDetails' name1,'Gestion des abonnements' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'lblVehicleGroup' name1,'Groupe de véhicules' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'lblVehicle' name1,'Véhicule' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'lblUsers' name1,'Utilisateurs' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'lblVehicleName' name1,'Nom du véhicule' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'lblVIN' name1,'VIN' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'lblRegistrationNumber' name1,'Immatriculation' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'lblNewUserGroup' name1,'Nouveau groupe d''utilisateurs' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'lblGroupName' name1,'Nom groupe' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'lblVehicles' name1,'Véhicules' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'lblNext' name1,'Suivante' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'lblPrevious' name1,'Précédente' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'lblAll' name1,'Tous' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'lblServices' name1,'Services' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'lblServicesName' name1,'Nom' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'lblType' name1,'Type' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'lblStep' name1,'Étape' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'lblSummary' name1,'Résumé' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'lblGroup' name1,'Groupe' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'lblReset:' name1,'Réinitialiser' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'lblUpdate' name1,'Mettre à jour' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'lblNewUser' name1,'Nouvel utilisateur' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'lblAddNewUser' name1,'Ajouter nouvel utilisateur' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'lblSelectUserGroup' name1,'Sélectionner groupe d''utilisateurs' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'lblAccountInformation' name1,'Informations du compte' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'lblSalutation' name1,'Titre' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'lblLoginEmail' name1,'E-mail de connexion' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'lblUnit' name1,'Unité' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'lblDateFormat' name1,'Format de date' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'lblVehicleDisplayDefault' name1,'Affichage du véhicule (défaut)' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'lblUserRoles' name1,'Rôles utilisateur' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'lblUserDetails' name1,'Détails utilisateur' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'lblPreferences' name1,'Préférences' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'lblChangePassword' name1,'Modifier le mot de passe' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'lblNewPassword' name1,'Nouveau mot de passe' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'lblModel' name1,'Version' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'lblDetails' name1,'Détails' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('FR-FR')) code1, 'lblVehicleIdentificationNumber' name1,'Numéro d''identification du véhicule' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;

WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'dlanguage_Bulgarian' name1,'български' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'dlanguage_Czech' name1,'Český' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'dlanguage_Danish' name1,'dansk' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'dlanguage_German' name1,'Deutsch' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'dlanguage_Spanish' name1,'Español' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'dlanguage_Estonian' name1,'eesti keel' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'dlanguage_UK English' name1,'English' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'dlanguage_Finnish' name1,'Suomen kieli' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'dlanguage_French' name1,'Français' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'dlanguage_Croatian' name1,'hrvatski' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'dlanguage_Hungarian' name1,'Magyar' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'dlanguage_Italian' name1,'Italiano' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'dlanguage_Lithuanian' name1,'Lietuvių kalba' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'dlanguage_Latvian' name1,'Latviešu valoda' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'dlanguage_Norwegian' name1,'Malti' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'dlanguage_Dutch' name1,'Nederlands' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'dlanguage_Polish' name1,'Polski' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'dlanguage_Portuguese' name1,'Português' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'dlanguage_Romanian' name1,'Română' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'dlanguage_Slovak' name1,'Slovenčina' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'dlanguage_Slovenian' name1,'Slovenščina' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'dlanguage_Swedish' name1,'Svenska' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'dlanguage_Turkish' name1,'türk' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'dcurrency_Euro' name1,'Euro (â‚¬)' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'dcurrency_USDollar' name1,'USA dollár ($)' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'dcurrency_PoundSterling' name1,'Pound Sterling (Â£)' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'dtimezone_Europe/Dublin' name1,'Europe/Dublin' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'dtimezone_Europe/Brussels' name1,'Europe/Brussels' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'dtimezone_Europe/Luxembourg' name1,'Europe/Luxembourg' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'dtimezone_Asia/India' name1,'Asia/India' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'dtimezone_Europe/Athens' name1,'Europe/Athens' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'dtimezone_Europe/Saratov' name1,'Europe/Saratov' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'dtimezone_Europe/Amsterdam' name1,'Europe/Amsterdam' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'dtimezone_Europe/Moscow' name1,'Europe/Moscow' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'dunit_Metric' name1,'Metric (Metrikus)' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'dunit_Imperial' name1,'Imperial (Brit)' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'dunit_USImperial' name1,'Imperial (USA)' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'ddateformat_dd/mm/yyyy' name1,'nn/hh/éééé' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'ddateformat_mm/dd/yyyy' name1,'hh/nn/éééé' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'ddateformat_dd-mm-yyyy' name1,'nn-hh-éééé' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'ddateformat_mm-dd-yyyy' name1,'hh-nn-éééé' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'dvehicledisplay_Name' name1,'Név' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'dvehicledisplay_VehicleRegistrationNumber' name1,'Rendszámtábla' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'dvehicledisplay_VehicleIdentificationNumber' name1,'Járműazonosító szám' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'dlandingpagedisplay_Dashboard' name1,'Áttekintés' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'dlandingpagedisplay_UserManagement' name1,'Felhasználók kezelése' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'dlandingpagedisplay_TripReport' name1,'Út-jelentés' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'lblDriverManagement' name1,'Sofőr kártya importálása' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'lblImportNewDrivers' name1,'Új járművezetők importálása' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'lblDownloadaTemplate' name1,'Sablon letöltése' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'lblImportDrivers' name1,'Járművezető(k) importálása' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'lblDrivers' name1,'Járművezető' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'lblSearch' name1,'Keresés' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'lblDriverID' name1,'Járművezető azonosító' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'lblDriverName' name1,'Járművezető neve' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'lblEmailID' name1,'E-mail' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'lblAction' name1,'Művelet' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'lblOptIn' name1,'Szabad hozzájárulás (opt-in)' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'lblOptOut' name1,'Szabad elutasítás (opt-out)' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'lblNew' name1,'Új' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'lblDelete' name1,'Törlés' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'lblEdit' name1,'Szerkesztés' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'lblCancel' name1,'Mégse' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'lblConfirm' name1,'elfogad' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'lblReset' name1,'Visszaállítás' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'lblSave' name1,'Mentés' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'lblEditDetails' name1,'Szerkesztés' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'lblAdmin' name1,'Adminisztrátor' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'lblRole' name1,'Szerep' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'lblUserGroup' name1,'Felhasználói csoport' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'lblDriverIDConsent' name1,'Sofőr kártya kezelése' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'lblName' name1,'Név' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'lblCurrentConsentStatusForSubscriber' name1,'A hozzájárulás aktuális állapota a következőhöz:' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'lblClose' name1,'Bezárás' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'lblSalutationCivility' name1,'Megszólítás' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'lblFirstName' name1,'Keresztnév' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'lblLastName' name1,'Vezetéknév' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'lblBirthDate' name1,'Születési idő' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'lblLanguage' name1,'Nyelv' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'lblTimeZone' name1,'Időzóna' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'lblCurrency' name1,'Pénznem' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'lblForgotPassword' name1,'Elfelejtett jelszó' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'lblSelectRole' name1,'Szerep kiválasztása' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'lblNotifications' name1,'Értesítések' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'lblDashboard' name1,'Áttekintés' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'lblReport' name1,'Jelentés' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'lblTripReport' name1,'Út-jelentés' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'lblTripTracing' name1,'Út követés' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'lblConfiguration' name1,'Konfiguráció' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'lblAlerts' name1,'Riasztások' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'lblLandmarks' name1,'Tájékozódási pontok' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'lblNReportSchedule' name1,'Jelentés ütemezése' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'lblUserGroupManagement' name1,'Felhasználói csoport kezelése' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'lblUserManagement' name1,'Felhasználók kezelése' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'lblFilter' name1,'Szűrő' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'lblNo' name1,'Nem' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'lblYes' name1,'Igen' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'lblBack' name1,'Vissza' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'lblRoleName' name1,'Szerep neve' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'lblServiceSubscriberDetails' name1,'Előfizető adatai' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'lblVehicleGroup' name1,'Járműcsoport' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'lblVehicle' name1,'Jármű' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'lblUsers' name1,'Felhasználók' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'lblVehicleName' name1,'Jármű neve' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'lblVIN' name1,'VIN' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'lblRegistrationNumber' name1,'Rendszámtábla' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'lblNewUserGroup' name1,'Új felhasználói csoport' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'lblGroupName' name1,'Csoport neve' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'lblVehicles' name1,'Járművek' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'lblNext' name1,'Következő' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'lblPrevious' name1,'Előző' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'lblAll' name1,'Összes' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'lblServices' name1,'Szolgáltatások' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'lblServicesName' name1,'Név' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'lblType' name1,'Típus' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'lblStep' name1,'Lépés' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'lblSummary' name1,'Összefoglalás' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'lblGroup' name1,'Csoport' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'lblReset:' name1,'Visszaállítás' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'lblUpdate' name1,'Frissítés' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'lblNewUser' name1,'Új felhasználó' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'lblAddNewUser' name1,'Új felhasználó hozzáadása' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'lblSelectUserGroup' name1,'Felhasználói csoport kiválasztása' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'lblAccountInformation' name1,'Fiók adatai' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'lblSalutation' name1,'Megszólítás' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'lblLoginEmail' name1,'Bejelentkezési e-mail cím' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'lblUnit' name1,'Mértékegység' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'lblDateFormat' name1,'Dátumformátum' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'lblVehicleDisplayDefault' name1,'Jármű kijelzője (alapértelmezett)' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'lblUserRoles' name1,'Felhasználói szerepek' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'lblUserDetails' name1,'Felhasználói adatok' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'lblPreferences' name1,'Preferenciák' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'lblChangePassword' name1,'Jelszó módosítása' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'lblNewPassword' name1,'Új jelszó' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'lblModel' name1,'Típus' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'lblDetails' name1,'Részletek' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;
WITH d AS (select (select code from translation.language where lower(code)=lower('HU-HU')) code1, 'lblVehicleIdentificationNumber' name1,'Járműazonosító szám' value1  ), upd AS (      UPDATE translation.translation       SET    value = trim(d.value1),modified_at   =(select extract(epoch from now()) * 1000) FROM   d      WHERE  code = d.code1 and name=d.name1      RETURNING code,name,value ) INSERT INTO translation.translation(code,type,name,value,created_at,modified_at) SELECT d.code1,'L',d.name1,d.value1,(select extract(epoch from now()) * 1000),null FROM   d WHERE  d.value1 not in (select value  from upd) and d.code1 NOT IN (SELECT code FROM upd) ;



insert into master.emailtemplate (type,feature_id,event_name,description,created_at,created_by,modified_at,modified_by)
select 'H',null,'ChangeResetPasswordSuccess','<!doctype html>
<html>
<head>
</head>
  <body>
    <img src="{0}">
    <h2>[lblPCSHeading]</h2>
    <p>[lblGreeting] {1},</p>
    <p>[lblPCSBodyText1]</p></br>
    <p><a href="{2}" target="_blank">[lblPCSClickHere]</a> [lblPCSBodyText2]</p>
    </br>
    <p>[lblWithKindRegards]</p>
    <p><strong>[lblSignatureLine1]</strong></p>
  </body>
</html>',(select extract(epoch from now()) * 1000), (select min(id) from master.account where lower(first_name) like '%atos%'),null,null
where not exists (   SELECT 1   FROM master.emailtemplate   WHERE event_name ='ChangeResetPasswordSuccess');

insert into master.emailtemplatelabels (email_template_id,key)
select (select id from master.emailtemplate where event_name='ChangeResetPasswordSuccess'),'lblPCSHeading'
where not exists (   SELECT 1   FROM master.emailtemplatelabels   WHERE key ='lblPCSHeading' and email_template_id in (select id from master.emailtemplate where event_name='ChangeResetPasswordSuccess'));

insert into master.emailtemplatelabels (email_template_id,key)
select (select id from master.emailtemplate where event_name='ChangeResetPasswordSuccess'),'lblGreeting'
where not exists (   SELECT 1   FROM master.emailtemplatelabels   WHERE key ='lblGreeting' and email_template_id in (select id from master.emailtemplate where event_name='ChangeResetPasswordSuccess'));

insert into master.emailtemplatelabels (email_template_id,key)
select (select id from master.emailtemplate where event_name='ChangeResetPasswordSuccess'),'lblPCSBodyText1'
where not exists (   SELECT 1   FROM master.emailtemplatelabels   WHERE key ='lblPCSBodyText1' and email_template_id in (select id from master.emailtemplate where event_name='ChangeResetPasswordSuccess'));

insert into master.emailtemplatelabels (email_template_id,key)
select (select id from master.emailtemplate where event_name='ChangeResetPasswordSuccess'),'lblPCSBodyText2'
where not exists (   SELECT 1   FROM master.emailtemplatelabels   WHERE key ='lblPCSBodyText2' and email_template_id in (select id from master.emailtemplate where event_name='ChangeResetPasswordSuccess'));

insert into master.emailtemplatelabels (email_template_id,key)
select (select id from master.emailtemplate where event_name='ChangeResetPasswordSuccess'),'lblPCSClickHere'
where not exists (   SELECT 1   FROM master.emailtemplatelabels   WHERE key ='lblPCSClickHere' and email_template_id in (select id from master.emailtemplate where event_name='ChangeResetPasswordSuccess'));

insert into master.emailtemplatelabels (email_template_id,key)
select (select id from master.emailtemplate where event_name='ChangeResetPasswordSuccess'),'lblWithKindRegards'
where not exists (   SELECT 1   FROM master.emailtemplatelabels   WHERE key ='lblWithKindRegards' and email_template_id in (select id from master.emailtemplate where event_name='ChangeResetPasswordSuccess'));

insert into master.emailtemplatelabels (email_template_id,key)
select (select id from master.emailtemplate where event_name='ChangeResetPasswordSuccess'),'lblSignatureLine1'
where not exists (   SELECT 1   FROM master.emailtemplatelabels   WHERE key ='lblSignatureLine1' and email_template_id in (select id from master.emailtemplate where event_name='ChangeResetPasswordSuccess'));

insert into master.emailtemplatelabels (email_template_id,key)
select (select id from master.emailtemplate where event_name='ChangeResetPasswordSuccess'),'lblChangeResetPasswordSuccess_Subject'
where not exists (   SELECT 1   FROM master.emailtemplatelabels   WHERE key ='lblChangeResetPasswordSuccess_Subject' and email_template_id in (select id from master.emailtemplate where event_name='ChangeResetPasswordSuccess'));

INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   
SELECT 'EN-GB','L','lblPCSHeading','You have got yourself a new password.',(select extract(epoch from now()) * 1000),null 
WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblPCSHeading');

INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   
SELECT 'EN-GB','L','lblGreeting','Hello',(select extract(epoch from now()) * 1000),null 
WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblGreeting');

INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   
SELECT 'EN-GB','L','lblPCSBodyText1','Your password has been changed successfully.',(select extract(epoch from now()) * 1000),null 
WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblPCSBodyText1');

INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   
SELECT 'EN-GB','L','lblPCSBodyText2','to login to your account.',(select extract(epoch from now()) * 1000),null 
WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblPCSBodyText2');

INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   
SELECT 'EN-GB','L','lblPCSClickHere','Click here',(select extract(epoch from now()) * 1000),null 
WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblPCSClickHere');

INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   
SELECT 'EN-GB','L','lblWithKindRegards','With Kind Regards,',(select extract(epoch from now()) * 1000),null 
WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblWithKindRegards');

INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   
SELECT 'EN-GB','L','lblSignatureLine1','DAF Connect Support',(select extract(epoch from now()) * 1000),null 
WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblSignatureLine1');

INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   
SELECT 'EN-GB','L','lblChangeResetPasswordSuccess_Subject','You have got yourself a new password',(select extract(epoch from now()) * 1000),null 
WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblChangeResetPasswordSuccess_Subject');




insert into master.emailtemplate (type,feature_id,event_name,description,created_at,created_by,modified_at,modified_by)
select 'H',null,'PasswordExpiryNotification','<!doctype html>
<html dir="ltr" lang="en">
<head>
<style>
.button {{
  background-color: #00529C;
  border: none;
  color: white;
  padding: 15px 32px;
  text-align: center;
  text-decoration: none;
  display: inline-block;
  font-size: 16px;
  margin: 4px 2px;
  cursor: pointer;
}}
</style>
</head>
  <body>
    <img src="{0}">
    <h2>[lblPERHeading]</h2>
    <p>[lblGreeting] {1},</p>
    <p>[lblPERBodyText1] {3}</p>
    <p> [lblPERBodyText5] {4}.</p>
    <p>[lblPERBodyText2]</p>
    <p>[lblPERBodyText3] <a class="button" href="{2}" target="_blank">[lblPortalLoginLinkText]</a></p>
    <p>[lblPERBodyText4] <a href="http://connectinfo.daf.com" target="_blank">[lblPERHere]</a></p>
    </br>
    <p>[lblWithKindRegards]</p>
    <p><strong>[lblSignatureLine1]</strong></p>

  </body>
</html>',(select extract(epoch from now()) * 1000), (select min(id) from master.account where lower(first_name) like '%atos%'),null,null
where not exists (   SELECT 1   FROM master.emailtemplate   WHERE event_name ='PasswordExpiryNotification');

insert into master.emailtemplatelabels (email_template_id,key)
select (select id from master.emailtemplate where event_name='PasswordExpiryNotification'),'lblPERHeading'
where not exists (   SELECT 1   FROM master.emailtemplatelabels   WHERE key ='lblPERHeading' and email_template_id in (select id from master.emailtemplate where event_name='PasswordExpiryNotification'));

insert into master.emailtemplatelabels (email_template_id,key)
select (select id from master.emailtemplate where event_name='PasswordExpiryNotification'),'lblGreeting'
where not exists (   SELECT 1   FROM master.emailtemplatelabels   WHERE key ='lblGreeting' and email_template_id in (select id from master.emailtemplate where event_name='PasswordExpiryNotification'));

insert into master.emailtemplatelabels (email_template_id,key)
select (select id from master.emailtemplate where event_name='PasswordExpiryNotification'),'lblPERBodyText1'
where not exists (   SELECT 1   FROM master.emailtemplatelabels   WHERE key ='lblPERBodyText1' and email_template_id in (select id from master.emailtemplate where event_name='PasswordExpiryNotification'));

insert into master.emailtemplatelabels (email_template_id,key)
select (select id from master.emailtemplate where event_name='PasswordExpiryNotification'),'lblPERBodyText5'
where not exists (   SELECT 1   FROM master.emailtemplatelabels   WHERE key ='lblPERBodyText5' and email_template_id in (select id from master.emailtemplate where event_name='PasswordExpiryNotification'));

insert into master.emailtemplatelabels (email_template_id,key)
select (select id from master.emailtemplate where event_name='PasswordExpiryNotification'),'lblPERBodyText2'
where not exists (   SELECT 1   FROM master.emailtemplatelabels   WHERE key ='lblPERBodyText2' and email_template_id in (select id from master.emailtemplate where event_name='PasswordExpiryNotification'));

insert into master.emailtemplatelabels (email_template_id,key)
select (select id from master.emailtemplate where event_name='PasswordExpiryNotification'),'lblPERBodyText3'
where not exists (   SELECT 1   FROM master.emailtemplatelabels   WHERE key ='lblPERBodyText3' and email_template_id in (select id from master.emailtemplate where event_name='PasswordExpiryNotification'));

insert into master.emailtemplatelabels (email_template_id,key)
select (select id from master.emailtemplate where event_name='PasswordExpiryNotification'),'lblPortalLoginLinkText'
where not exists (   SELECT 1   FROM master.emailtemplatelabels   WHERE key ='lblPortalLoginLinkText' and email_template_id in (select id from master.emailtemplate where event_name='PasswordExpiryNotification'));

insert into master.emailtemplatelabels (email_template_id,key)
select (select id from master.emailtemplate where event_name='PasswordExpiryNotification'),'lblPERBodyText4'
where not exists (   SELECT 1   FROM master.emailtemplatelabels   WHERE key ='lblPERBodyText4' and email_template_id in (select id from master.emailtemplate where event_name='PasswordExpiryNotification'));

insert into master.emailtemplatelabels (email_template_id,key)
select (select id from master.emailtemplate where event_name='PasswordExpiryNotification'),'lblPERHere'
where not exists (   SELECT 1   FROM master.emailtemplatelabels   WHERE key ='lblPERHere' and email_template_id in (select id from master.emailtemplate where event_name='PasswordExpiryNotification'));

insert into master.emailtemplatelabels (email_template_id,key)
select (select id from master.emailtemplate where event_name='PasswordExpiryNotification'),'lblWithKindRegards'
where not exists (   SELECT 1   FROM master.emailtemplatelabels   WHERE key ='lblWithKindRegards' and email_template_id in (select id from master.emailtemplate where event_name='PasswordExpiryNotification'));

insert into master.emailtemplatelabels (email_template_id,key)
select (select id from master.emailtemplate where event_name='PasswordExpiryNotification'),'lblSignatureLine1'
where not exists (   SELECT 1   FROM master.emailtemplatelabels   WHERE key ='lblSignatureLine1' and email_template_id in (select id from master.emailtemplate where event_name='PasswordExpiryNotification'));

insert into master.emailtemplatelabels (email_template_id,key)
select (select id from master.emailtemplate where event_name='PasswordExpiryNotification'),'lblPasswordExpiryNotification_Subject'
where not exists (   SELECT 1   FROM master.emailtemplatelabels   WHERE key ='lblPasswordExpiryNotification_Subject' and email_template_id in (select id from master.emailtemplate where event_name='PasswordExpiryNotification'));



INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   
SELECT 'EN-GB','L','lblPERHeading','Your Password Is About To Expire',(select extract(epoch from now()) * 1000),null 
WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblPERHeading');

INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   
SELECT 'EN-GB','L','lblGreeting','Hello',(select extract(epoch from now()) * 1000),null 
WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblGreeting');

INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   
SELECT 'EN-GB','L','lblPERBodyText1','Your password for account',(select extract(epoch from now()) * 1000),null 
WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblPERBodyText1');

INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   
SELECT 'EN-GB','L','lblPERBodyText5','is set to expire on',(select extract(epoch from now()) * 1000),null 
WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblPERBodyText5');

INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   
SELECT 'EN-GB','L','lblPERBodyText2','Failure to renew this password before the expiration date will result in your inability to log on to those applications that use the login password for authentication.',(select extract(epoch from now()) * 1000),null 
WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblPERBodyText2');

INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   
SELECT 'EN-GB','L','lblPERBodyText3','You must renew the password immediately by logging on to the',(select extract(epoch from now()) * 1000),null 
WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblPERBodyText3');

INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   
SELECT 'EN-GB','L','lblPortalLoginLinkText','Portal',(select extract(epoch from now()) * 1000),null 
WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblPortalLoginLinkText');

INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   
SELECT 'EN-GB','L','lblPERBodyText4','For more supporting information such as a FAQ or How to Movies click',(select extract(epoch from now()) * 1000),null 
WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblPERBodyText4');

INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   
SELECT 'EN-GB','L','lblPERHere','here.',(select extract(epoch from now()) * 1000),null 
WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblPERHere');

INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   
SELECT 'EN-GB','L','lblWithKindRegards','With Kind Regards,',(select extract(epoch from now()) * 1000),null 
WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblWithKindRegards');

INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   
SELECT 'EN-GB','L','lblSignatureLine1','With Kind Regards,',(select extract(epoch from now()) * 1000),null 
WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblSignatureLine1');

INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   
SELECT 'EN-GB','L','lblPasswordExpiryNotification_Subject','Your password of DAF Connect is about to expire',(select extract(epoch from now()) * 1000),null 
WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblPasswordExpiryNotification_Subject');

insert into master.emailtemplate (type,feature_id,event_name,description,created_at,created_by,modified_at,modified_by)
select 'H',null,'ResetPassword','<!doctype html>
<html>
<head>
<style>
.button {{
  background-color: #00529C;
  border: none;
  color: white;
  padding: 15px 32px;
  text-align: center;
  text-decoration: none;
  display: inline-block;
  font-size: 16px;
  margin: 4px 2px;
  cursor: pointer;
}}
</style>
</head>
  <body>
    <img src="{0}">
    <h2>[lblRPRHeading]</h2>
    <p>[lblGreeting] {1},</p>
    <p>[lblRPRBodyText1]</p></br>
    <p>[lblRPRBodyText2]</p>
    <a class="button" href="{2}" target="_blank">[lblRPRButton]</a>
   </br> <p>[lblRPRBodyText3] </p>
	<p><a href="{3}" target="_blank">[lblRPRClickHere]</a> [lblRPRBodyText4]</p>
    </br>
    <p>[lblWithKindRegards]</p>
    <p><strong>[lblSignatureLine1]</strong></p>
  </body>
</html>',(select extract(epoch from now()) * 1000), (select min(id) from master.account where lower(first_name) like '%atos%'),null,null
where not exists (   SELECT 1   FROM master.emailtemplate   WHERE event_name ='ResetPassword');

insert into master.emailtemplatelabels (email_template_id,key)
select (select id from master.emailtemplate where event_name='ResetPassword'),'lblRPRHeading'
where not exists (   SELECT 1   FROM master.emailtemplatelabels   WHERE key ='lblRPRHeading' and email_template_id in (select id from master.emailtemplate where event_name='ResetPassword'));

insert into master.emailtemplatelabels (email_template_id,key)
select (select id from master.emailtemplate where event_name='ResetPassword'),'lblGreeting'
where not exists (   SELECT 1   FROM master.emailtemplatelabels   WHERE key ='lblGreeting' and email_template_id in (select id from master.emailtemplate where event_name='ResetPassword'));

insert into master.emailtemplatelabels (email_template_id,key)
select (select id from master.emailtemplate where event_name='ResetPassword'),'lblRPRBodyText1'
where not exists (   SELECT 1   FROM master.emailtemplatelabels   WHERE key ='lblRPRBodyText1' and email_template_id in (select id from master.emailtemplate where event_name='ResetPassword'));

insert into master.emailtemplatelabels (email_template_id,key)
select (select id from master.emailtemplate where event_name='ResetPassword'),'lblRPRBodyText2'
where not exists (   SELECT 1   FROM master.emailtemplatelabels   WHERE key ='lblRPRBodyText2' and email_template_id in (select id from master.emailtemplate where event_name='ResetPassword'));

insert into master.emailtemplatelabels (email_template_id,key)
select (select id from master.emailtemplate where event_name='ResetPassword'),'lblRPRButton'
where not exists (   SELECT 1   FROM master.emailtemplatelabels   WHERE key ='lblRPRButton' and email_template_id in (select id from master.emailtemplate where event_name='ResetPassword'));

insert into master.emailtemplatelabels (email_template_id,key)
select (select id from master.emailtemplate where event_name='ResetPassword'),'lblRPRBodyText3'
where not exists (   SELECT 1   FROM master.emailtemplatelabels   WHERE key ='lblRPRBodyText3' and email_template_id in (select id from master.emailtemplate where event_name='ResetPassword'));

insert into master.emailtemplatelabels (email_template_id,key)
select (select id from master.emailtemplate where event_name='ResetPassword'),'lblRPRBodyText4'
where not exists (   SELECT 1   FROM master.emailtemplatelabels   WHERE key ='lblRPRBodyText4' and email_template_id in (select id from master.emailtemplate where event_name='ResetPassword'));

insert into master.emailtemplatelabels (email_template_id,key)
select (select id from master.emailtemplate where event_name='ResetPassword'),'lblRPRClickHere'
where not exists (   SELECT 1   FROM master.emailtemplatelabels   WHERE key ='lblRPRClickHere' and email_template_id in (select id from master.emailtemplate where event_name='ResetPassword'));

insert into master.emailtemplatelabels (email_template_id,key)
select (select id from master.emailtemplate where event_name='ResetPassword'),'lblWithKindRegards'
where not exists (   SELECT 1   FROM master.emailtemplatelabels   WHERE key ='lblWithKindRegards' and email_template_id in (select id from master.emailtemplate where event_name='ResetPassword'));

insert into master.emailtemplatelabels (email_template_id,key)
select (select id from master.emailtemplate where event_name='ResetPassword'),'lblSignatureLine1'
where not exists (   SELECT 1   FROM master.emailtemplatelabels   WHERE key ='lblSignatureLine1' and email_template_id in (select id from master.emailtemplate where event_name='ResetPassword'));

insert into master.emailtemplatelabels (email_template_id,key)
select (select id from master.emailtemplate where event_name='ResetPassword'),'lblResetPassword_Subject'
where not exists (   SELECT 1   FROM master.emailtemplatelabels   WHERE key ='lblResetPassword_Subject' and email_template_id in (select id from master.emailtemplate where event_name='ResetPassword'));

INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   
SELECT 'EN-GB','L','lblRPRHeading','Reset your DAF Connect password',(select extract(epoch from now()) * 1000),null 
WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblRPRHeading');

INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   
SELECT 'EN-GB','L','lblGreeting','Hello',(select extract(epoch from now()) * 1000),null 
WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblGreeting');

INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   
SELECT 'EN-GB','L','lblRPRBodyText1','We heard you need a password reset.',(select extract(epoch from now()) * 1000),null 
WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblRPRBodyText1');

INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   
SELECT 'EN-GB','L','lblRPRBodyText2','Click on the button below to reset your password.',(select extract(epoch from now()) * 1000),null 
WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblRPRBodyText2');

INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   
SELECT 'EN-GB','L','lblRPRButton','Reset Your Password',(select extract(epoch from now()) * 1000),null 
WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblRPRButton');

INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   
SELECT 'EN-GB','L','lblRPRBodyText3','If you have not requested for password reset then please',(select extract(epoch from now()) * 1000),null 
WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblRPRBodyText3');

INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   
SELECT 'EN-GB','L','lblRPRBodyText4','to deactivate the reset request.',(select extract(epoch from now()) * 1000),null 
WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblRPRBodyText4');

INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   
SELECT 'EN-GB','L','lblRPRClickHere','Click here',(select extract(epoch from now()) * 1000),null 
WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblRPRClickHere');

INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   
SELECT 'EN-GB','L','lblWithKindRegards','With Kind Regards,',(select extract(epoch from now()) * 1000),null 
WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblWithKindRegards');

INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   
SELECT 'EN-GB','L','lblSignatureLine1','DAF Connect Support',(select extract(epoch from now()) * 1000),null 
WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblSignatureLine1');

INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   
SELECT 'EN-GB','L','lblResetPassword_Subject','Reset your DAF Connect password',(select extract(epoch from now()) * 1000),null 
WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblResetPassword_Subject');



insert into master.emailtemplate (type,feature_id,event_name,description,created_at,created_by,modified_at,modified_by)
select 'H',null,'CreateAccount','<!doctype html>
<html>
<head>
<style>
.button {{
  background-color: #00529C;
  border: none;
  color: white;
  padding: 15px 32px;
  text-align: center;
  text-decoration: none;
  display: inline-block;
  font-size: 16px;
  margin: 4px 2px;
  cursor: pointer;
}}
</style>
</head>
  <body>
    <img src="{0}">
    <h2>[lblWTDHeading]</h2>
    <p>[lblGreeting] {1},</p>
    <p>[lblWTDBodyText1] </p></br>
    <p>[lblWTDBodyText2] {2}.</p>
    <p>[lblWTDBodyText3]</p>
    <a class="button" href="{3}" target="_blank">[lblWTDButton]</a>
   </br> 
    <p>[lblWithKindRegards]</p>
    <p><strong>[lblSignatureLine1]</strong></p>
  </body>
</html>',(select extract(epoch from now()) * 1000), (select min(id) from master.account where lower(first_name) like '%atos%'),null,null
where not exists (   SELECT 1   FROM master.emailtemplate   WHERE event_name ='CreateAccount');

insert into master.emailtemplatelabels (email_template_id,key)
select (select id from master.emailtemplate where event_name='CreateAccount'),'lblWTDHeading'
where not exists (   SELECT 1   FROM master.emailtemplatelabels   WHERE key ='lblWTDHeading' and email_template_id in (select id from master.emailtemplate where event_name='CreateAccount'));

insert into master.emailtemplatelabels (email_template_id,key)
select (select id from master.emailtemplate where event_name='CreateAccount'),'lblGreeting'
where not exists (   SELECT 1   FROM master.emailtemplatelabels   WHERE key ='lblGreeting' and email_template_id in (select id from master.emailtemplate where event_name='CreateAccount'));

insert into master.emailtemplatelabels (email_template_id,key)
select (select id from master.emailtemplate where event_name='CreateAccount'),'lblWTDBodyText1'
where not exists (   SELECT 1   FROM master.emailtemplatelabels   WHERE key ='lblWTDBodyText1' and email_template_id in (select id from master.emailtemplate where event_name='CreateAccount'));

insert into master.emailtemplatelabels (email_template_id,key)
select (select id from master.emailtemplate where event_name='CreateAccount'),'lblWTDBodyText2'
where not exists (   SELECT 1   FROM master.emailtemplatelabels   WHERE key ='lblWTDBodyText2' and email_template_id in (select id from master.emailtemplate where event_name='CreateAccount'));

insert into master.emailtemplatelabels (email_template_id,key)
select (select id from master.emailtemplate where event_name='CreateAccount'),'lblWTDButton'
where not exists (   SELECT 1   FROM master.emailtemplatelabels   WHERE key ='lblWTDButton' and email_template_id in (select id from master.emailtemplate where event_name='CreateAccount'));

insert into master.emailtemplatelabels (email_template_id,key)
select (select id from master.emailtemplate where event_name='CreateAccount'),'lblWTDBodyText3'
where not exists (   SELECT 1   FROM master.emailtemplatelabels   WHERE key ='lblWTDBodyText3' and email_template_id in (select id from master.emailtemplate where event_name='CreateAccount'));

insert into master.emailtemplatelabels (email_template_id,key)
select (select id from master.emailtemplate where event_name='CreateAccount'),'lblWithKindRegards'
where not exists (   SELECT 1   FROM master.emailtemplatelabels   WHERE key ='lblWithKindRegards' and email_template_id in (select id from master.emailtemplate where event_name='CreateAccount'));

insert into master.emailtemplatelabels (email_template_id,key)
select (select id from master.emailtemplate where event_name='CreateAccount'),'lblSignatureLine1'
where not exists (   SELECT 1   FROM master.emailtemplatelabels   WHERE key ='lblSignatureLine1' and email_template_id in (select id from master.emailtemplate where event_name='CreateAccount'));

insert into master.emailtemplatelabels (email_template_id,key)
select (select id from master.emailtemplate where event_name='CreateAccount'),'lblCreateAccount_Subject'
where not exists (   SELECT 1   FROM master.emailtemplatelabels   WHERE key ='lblCreateAccount_Subject' and email_template_id in (select id from master.emailtemplate where event_name='CreateAccount'));

INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   
SELECT 'EN-GB','L','lblWTDHeading','Welcome to DAF Connect!',(select extract(epoch from now()) * 1000),null 
WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblWTDHeading');

INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   
SELECT 'EN-GB','L','lblGreeting','Hello',(select extract(epoch from now()) * 1000),null 
WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblGreeting');

INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   
SELECT 'EN-GB','L','lblWTDBodyText1','You have been added as new user to the DAF CT 2.0 portal,',(select extract(epoch from now()) * 1000),null 
WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblWTDBodyText1');

INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   
SELECT 'EN-GB','L','lblWTDBodyText2','under',(select extract(epoch from now()) * 1000),null 
WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblWTDBodyText2');

INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   
SELECT 'EN-GB','L','lblWTDButton','Set New Password',(select extract(epoch from now()) * 1000),null 
WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblWTDButton');

INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   
SELECT 'EN-GB','L','lblWTDBodyText3','Please click the button below to set your new password.',(select extract(epoch from now()) * 1000),null 
WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblWTDBodyText3');

INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   
SELECT 'EN-GB','L','lblWithKindRegards','With Kind Regards,',(select extract(epoch from now()) * 1000),null 
WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblWithKindRegards');

INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   
SELECT 'EN-GB','L','lblSignatureLine1','DAF Connect Support',(select extract(epoch from now()) * 1000),null 
WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblSignatureLine1');

INSERT INTO translation.translation  (code ,    type ,  name ,  value ,  created_at ,  modified_at)   
SELECT 'EN-GB','L','lblCreateAccount_Subject','Welcome to DAF Connect!',(select extract(epoch from now()) * 1000),null 
WHERE NOT EXISTS  (   SELECT 1   FROM translation.translation   WHERE code = 'EN-GB' and name = 'lblCreateAccount_Subject');


